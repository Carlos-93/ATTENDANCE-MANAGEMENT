generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_adminpresets {
  id            Int     @id @default(autoincrement())
  userid        Int
  name          String  @default("") @db.VarChar(255)
  comments      String? @db.LongText
  site          String  @default("") @db.VarChar(255)
  author        String? @db.VarChar(255)
  moodleversion String  @default("") @db.VarChar(20)
  moodlerelease String  @default("") @db.VarChar(255)
  iscore        Boolean @default(false)
  timecreated   Int     @default(0)
  timeimported  Int     @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_adminpresets_app {
  id            Int @id @default(autoincrement())
  adminpresetid Int
  userid        Int
  time          Int

  @@index([adminpresetid], map: "mdl_admiapp_adm_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_adminpresets_app_it {
  id                 Int @id @default(autoincrement())
  adminpresetapplyid Int
  configlogid        Int

  @@index([adminpresetapplyid], map: "mdl_admiappit_adm_ix")
  @@index([configlogid], map: "mdl_admiappit_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_adminpresets_app_it_a {
  id                 Int     @id @default(autoincrement())
  adminpresetapplyid Int
  configlogid        Int
  itemname           String? @db.VarChar(100)

  @@index([adminpresetapplyid], map: "mdl_admiappita_adm_ix")
  @@index([configlogid], map: "mdl_admiappita_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_adminpresets_app_plug {
  id                 Int     @id @default(autoincrement())
  adminpresetapplyid Int
  plugin             String? @db.VarChar(100)
  name               String  @default("") @db.VarChar(100)
  value              Int     @default(0) @db.SmallInt
  oldvalue           Int     @default(0) @db.SmallInt

  @@index([adminpresetapplyid], map: "mdl_admiappplug_adm_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_adminpresets_it {
  id            Int     @id @default(autoincrement())
  adminpresetid Int
  plugin        String? @db.VarChar(100)
  name          String  @default("") @db.VarChar(100)
  value         String? @db.LongText

  @@index([adminpresetid], map: "mdl_admiit_adm_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_adminpresets_it_a {
  id     Int     @id @default(autoincrement())
  itemid Int
  name   String  @default("") @db.VarChar(100)
  value  String? @db.LongText

  @@index([itemid], map: "mdl_admiita_ite_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_adminpresets_plug {
  id            Int     @id @default(autoincrement())
  adminpresetid Int
  plugin        String? @db.VarChar(100)
  name          String  @default("") @db.VarChar(100)
  enabled       Int     @default(0) @db.SmallInt

  @@index([adminpresetid], map: "mdl_admiplug_adm_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_analytics_indicator_calc {
  id           Int      @id @default(autoincrement())
  starttime    Int
  endtime      Int
  contextid    Int
  sampleorigin String   @default("") @db.VarChar(255)
  sampleid     Int
  indicator    String   @default("") @db.VarChar(255)
  value        Decimal? @db.Decimal(10, 2)
  timecreated  Int

  @@index([contextid], map: "mdl_analindicalc_con_ix")
  @@index([starttime, endtime, contextid], map: "mdl_analindicalc_staendcon_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_analytics_models {
  id                   Int     @id @default(autoincrement())
  enabled              Boolean @default(false)
  trained              Boolean @default(false)
  name                 String? @db.VarChar(1333)
  target               String  @default("") @db.VarChar(255)
  indicators           String  @db.LongText
  timesplitting        String? @db.VarChar(255)
  predictionsprocessor String? @db.VarChar(255)
  version              Int
  contextids           String? @db.LongText
  timecreated          Int?
  timemodified         Int
  usermodified         Int

  @@index([enabled, trained], map: "mdl_analmode_enatra_ix")
  @@index([usermodified], map: "mdl_analmode_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_analytics_models_log {
  id             Int     @id @default(autoincrement())
  modelid        Int
  version        Int
  evaluationmode String  @default("") @db.VarChar(50)
  target         String  @default("") @db.VarChar(255)
  indicators     String  @db.LongText
  timesplitting  String? @db.VarChar(255)
  score          Decimal @default(0.00000) @db.Decimal(10, 5)
  info           String? @db.LongText
  dir            String  @db.LongText
  timecreated    Int
  usermodified   Int

  @@index([modelid], map: "mdl_analmodelog_mod_ix")
  @@index([usermodified], map: "mdl_analmodelog_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_analytics_predict_samples {
  id            Int    @id @default(autoincrement())
  modelid       Int
  analysableid  Int
  timesplitting String @default("") @db.VarChar(255)
  rangeindex    Int
  sampleids     String @db.LongText
  timecreated   Int    @default(0)
  timemodified  Int    @default(0)

  @@index([modelid], map: "mdl_analpredsamp_mod_ix")
  @@index([modelid, analysableid, timesplitting, rangeindex], map: "mdl_analpredsamp_modanatimr_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_analytics_prediction_actions {
  id           Int    @id @default(autoincrement())
  predictionid Int
  userid       Int
  actionname   String @default("") @db.VarChar(255)
  timecreated  Int

  @@index([predictionid], map: "mdl_analpredacti_pre_ix")
  @@index([predictionid, userid, actionname], map: "mdl_analpredacti_preuseact_ix")
  @@index([userid], map: "mdl_analpredacti_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_analytics_predictions {
  id              Int     @id @default(autoincrement())
  modelid         Int
  contextid       Int
  sampleid        Int
  rangeindex      Int     @db.MediumInt
  prediction      Decimal @db.Decimal(10, 2)
  predictionscore Decimal @db.Decimal(10, 5)
  calculations    String  @db.LongText
  timecreated     Int     @default(0)
  timestart       Int?
  timeend         Int?

  @@index([contextid], map: "mdl_analpred_con_ix")
  @@index([modelid], map: "mdl_analpred_mod_ix")
  @@index([modelid, contextid], map: "mdl_analpred_modcon_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_analytics_train_samples {
  id            Int    @id @default(autoincrement())
  modelid       Int
  analysableid  Int
  timesplitting String @default("") @db.VarChar(255)
  sampleids     String @db.LongText
  timecreated   Int    @default(0)

  @@index([modelid], map: "mdl_analtraisamp_mod_ix")
  @@index([modelid, analysableid, timesplitting], map: "mdl_analtraisamp_modanatim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_analytics_used_analysables {
  id            Int    @id @default(autoincrement())
  modelid       Int
  action        String @default("") @db.VarChar(50)
  analysableid  Int
  firstanalysis Int
  timeanalysed  Int

  @@index([analysableid], map: "mdl_analusedanal_ana_ix")
  @@index([modelid], map: "mdl_analusedanal_mod_ix")
  @@index([modelid, action], map: "mdl_analusedanal_modact_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_analytics_used_files {
  id      Int    @id @default(autoincrement())
  modelid Int    @default(0)
  fileid  Int    @default(0)
  action  String @default("") @db.VarChar(50)
  time    Int    @default(0)

  @@index([fileid], map: "mdl_analusedfile_fil_ix")
  @@index([modelid], map: "mdl_analusedfile_mod_ix")
  @@index([modelid, action, fileid], map: "mdl_analusedfile_modactfil_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assign {
  id                          Int     @id @default(autoincrement())
  course                      Int     @default(0)
  name                        String  @default("") @db.VarChar(255)
  intro                       String  @db.LongText
  introformat                 Int     @default(0) @db.SmallInt
  alwaysshowdescription       Int     @default(0) @db.TinyInt
  nosubmissions               Int     @default(0) @db.TinyInt
  submissiondrafts            Int     @default(0) @db.TinyInt
  sendnotifications           Int     @default(0) @db.TinyInt
  sendlatenotifications       Int     @default(0) @db.TinyInt
  duedate                     Int     @default(0)
  allowsubmissionsfromdate    Int     @default(0)
  grade                       Int     @default(0)
  timemodified                Int     @default(0)
  requiresubmissionstatement  Int     @default(0) @db.TinyInt
  completionsubmit            Int     @default(0) @db.TinyInt
  cutoffdate                  Int     @default(0)
  gradingduedate              Int     @default(0)
  teamsubmission              Int     @default(0) @db.TinyInt
  requireallteammemberssubmit Int     @default(0) @db.TinyInt
  teamsubmissiongroupingid    Int     @default(0)
  blindmarking                Int     @default(0) @db.TinyInt
  hidegrader                  Int     @default(0) @db.TinyInt
  revealidentities            Int     @default(0) @db.TinyInt
  attemptreopenmethod         String  @default("none") @db.VarChar(10)
  maxattempts                 Int     @default(-1) @db.MediumInt
  markingworkflow             Int     @default(0) @db.TinyInt
  markingallocation           Int     @default(0) @db.TinyInt
  sendstudentnotifications    Int     @default(1) @db.TinyInt
  preventsubmissionnotingroup Int     @default(0) @db.TinyInt
  activity                    String? @db.LongText
  activityformat              Int     @default(0) @db.SmallInt
  timelimit                   Int     @default(0)
  submissionattachments       Int     @default(0) @db.TinyInt

  @@index([course], map: "mdl_assi_cou_ix")
  @@index([teamsubmissiongroupingid], map: "mdl_assi_tea_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assign_grades {
  id            Int      @id @default(autoincrement())
  assignment    Int      @default(0)
  userid        Int      @default(0)
  timecreated   Int      @default(0)
  timemodified  Int      @default(0)
  grader        Int      @default(0)
  grade         Decimal? @default(0.00000) @db.Decimal(10, 5)
  attemptnumber Int      @default(0)

  @@unique([assignment, userid, attemptnumber], map: "mdl_assigrad_assuseatt_uix")
  @@index([assignment], map: "mdl_assigrad_ass_ix")
  @@index([attemptnumber], map: "mdl_assigrad_att_ix")
  @@index([userid], map: "mdl_assigrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assign_overrides {
  id                       Int  @id @default(autoincrement())
  assignid                 Int  @default(0)
  groupid                  Int?
  userid                   Int?
  sortorder                Int?
  allowsubmissionsfromdate Int?
  duedate                  Int?
  cutoffdate               Int?
  timelimit                Int?

  @@index([assignid], map: "mdl_assiover_ass_ix")
  @@index([groupid], map: "mdl_assiover_gro_ix")
  @@index([userid], map: "mdl_assiover_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assign_plugin_config {
  id         Int     @id @default(autoincrement())
  assignment Int     @default(0)
  plugin     String  @default("") @db.VarChar(28)
  subtype    String  @default("") @db.VarChar(28)
  name       String  @default("") @db.VarChar(28)
  value      String? @db.LongText

  @@index([assignment], map: "mdl_assiplugconf_ass_ix")
  @@index([name], map: "mdl_assiplugconf_nam_ix")
  @@index([plugin], map: "mdl_assiplugconf_plu_ix")
  @@index([subtype], map: "mdl_assiplugconf_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assign_submission {
  id            Int     @id @default(autoincrement())
  assignment    Int     @default(0)
  userid        Int     @default(0)
  timecreated   Int     @default(0)
  timemodified  Int     @default(0)
  timestarted   Int?
  status        String? @db.VarChar(10)
  groupid       Int     @default(0)
  attemptnumber Int     @default(0)
  latest        Int     @default(0) @db.TinyInt

  @@unique([assignment, userid, groupid, attemptnumber], map: "mdl_assisubm_assusegroatt_uix")
  @@index([assignment], map: "mdl_assisubm_ass_ix")
  @@index([assignment, userid, groupid, latest], map: "mdl_assisubm_assusegrolat_ix")
  @@index([attemptnumber], map: "mdl_assisubm_att_ix")
  @@index([userid], map: "mdl_assisubm_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assign_user_flags {
  id               Int     @id @default(autoincrement())
  userid           Int     @default(0)
  assignment       Int     @default(0)
  locked           Int     @default(0)
  mailed           Int     @default(0) @db.SmallInt
  extensionduedate Int     @default(0)
  workflowstate    String? @db.VarChar(20)
  allocatedmarker  Int     @default(0)

  @@index([assignment], map: "mdl_assiuserflag_ass_ix")
  @@index([mailed], map: "mdl_assiuserflag_mai_ix")
  @@index([userid], map: "mdl_assiuserflag_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assign_user_mapping {
  id         Int @id @default(autoincrement())
  assignment Int @default(0)
  userid     Int @default(0)

  @@index([assignment], map: "mdl_assiusermapp_ass_ix")
  @@index([userid], map: "mdl_assiusermapp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assignfeedback_comments {
  id            Int     @id @default(autoincrement())
  assignment    Int     @default(0)
  grade         Int     @default(0)
  commenttext   String? @db.LongText
  commentformat Int     @default(0) @db.SmallInt

  @@index([assignment], map: "mdl_assicomm_ass_ix")
  @@index([grade], map: "mdl_assicomm_gra_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assignfeedback_editpdf_annot {
  id      Int     @id @default(autoincrement())
  gradeid Int     @default(0)
  pageno  Int     @default(0)
  x       Int?    @default(0)
  y       Int?    @default(0)
  endx    Int?    @default(0)
  endy    Int?    @default(0)
  path    String? @db.LongText
  type    String? @default("line") @db.VarChar(10)
  colour  String? @default("black") @db.VarChar(10)
  draft   Int     @default(1) @db.TinyInt

  @@index([gradeid], map: "mdl_assieditanno_gra_ix")
  @@index([gradeid, pageno], map: "mdl_assieditanno_grapag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assignfeedback_editpdf_cmnt {
  id      Int     @id @default(autoincrement())
  gradeid Int     @default(0)
  x       Int?    @default(0)
  y       Int?    @default(0)
  width   Int?    @default(120)
  rawtext String? @db.LongText
  pageno  Int     @default(0)
  colour  String? @default("black") @db.VarChar(10)
  draft   Int     @default(1) @db.TinyInt

  @@index([gradeid], map: "mdl_assieditcmnt_gra_ix")
  @@index([gradeid, pageno], map: "mdl_assieditcmnt_grapag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assignfeedback_editpdf_quick {
  id      Int     @id @default(autoincrement())
  userid  Int     @default(0)
  rawtext String  @db.LongText
  width   Int     @default(120)
  colour  String? @default("yellow") @db.VarChar(10)

  @@index([userid], map: "mdl_assieditquic_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assignfeedback_editpdf_rot {
  id           Int     @id @default(autoincrement())
  gradeid      Int     @default(0)
  pageno       Int     @default(0)
  pathnamehash String  @db.LongText
  isrotated    Boolean @default(false)
  degree       Int     @default(0)

  @@unique([gradeid, pageno], map: "mdl_assieditrot_grapag_uix")
  @@index([gradeid], map: "mdl_assieditrot_gra_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assignfeedback_file {
  id         Int @id @default(autoincrement())
  assignment Int @default(0)
  grade      Int @default(0)
  numfiles   Int @default(0)

  @@index([assignment], map: "mdl_assifile_ass2_ix")
  @@index([grade], map: "mdl_assifile_gra_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assignsubmission_file {
  id         Int @id @default(autoincrement())
  assignment Int @default(0)
  submission Int @default(0)
  numfiles   Int @default(0)

  @@index([assignment], map: "mdl_assifile_ass_ix")
  @@index([submission], map: "mdl_assifile_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_assignsubmission_onlinetext {
  id           Int     @id @default(autoincrement())
  assignment   Int     @default(0)
  submission   Int     @default(0)
  onlinetext   String? @db.LongText
  onlineformat Int     @default(0) @db.SmallInt

  @@index([assignment], map: "mdl_assionli_ass_ix")
  @@index([submission], map: "mdl_assionli_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_auth_lti_linked_login {
  id           Int    @id @default(autoincrement())
  userid       Int
  issuer       String @db.LongText
  issuer256    String @default("") @db.VarChar(64)
  sub          String @default("") @db.VarChar(255)
  sub256       String @default("") @db.VarChar(64)
  timecreated  Int
  timemodified Int

  @@unique([userid, issuer256, sub256], map: "mdl_authltilinklogi_useiss_uix")
  @@index([userid], map: "mdl_authltilinklogi_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_auth_oauth2_linked_login {
  id                  Int    @id @default(autoincrement())
  timecreated         Int
  timemodified        Int
  usermodified        Int
  userid              Int
  issuerid            Int
  username            String @default("") @db.VarChar(255)
  email               String @db.LongText
  confirmtoken        String @default("") @db.VarChar(64)
  confirmtokenexpires Int?

  @@unique([userid, issuerid, username], map: "mdl_authoautlinklogi_useis_uix")
  @@index([issuerid], map: "mdl_authoautlinklogi_iss_ix")
  @@index([issuerid, username], map: "mdl_authoautlinklogi_issuse_ix")
  @@index([userid], map: "mdl_authoautlinklogi_use2_ix")
  @@index([usermodified], map: "mdl_authoautlinklogi_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_backup_controllers {
  id            Int     @id @default(autoincrement())
  backupid      String  @unique(map: "mdl_backcont_bac_uix") @default("") @db.VarChar(32)
  operation     String  @default("backup") @db.VarChar(20)
  type          String  @default("") @db.VarChar(10)
  itemid        Int
  format        String  @default("") @db.VarChar(20)
  interactive   Int     @db.SmallInt
  purpose       Int     @db.SmallInt
  userid        Int
  status        Int     @db.SmallInt
  execution     Int     @db.SmallInt
  executiontime Int
  checksum      String  @default("") @db.VarChar(32)
  timecreated   Int
  timemodified  Int
  progress      Decimal @default(0.00000000000000) @db.Decimal(15, 14)
  controller    String  @db.LongText

  @@index([type, itemid], map: "mdl_backcont_typite_ix")
  @@index([userid], map: "mdl_backcont_use_ix")
  @@index([userid, itemid], map: "mdl_backcont_useite_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_backup_courses {
  id            Int    @id @default(autoincrement())
  courseid      Int    @unique(map: "mdl_backcour_cou_uix") @default(0)
  laststarttime Int    @default(0)
  lastendtime   Int    @default(0)
  laststatus    String @default("5") @db.VarChar(1)
  nextstarttime Int    @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_backup_logs {
  id          Int    @id @default(autoincrement())
  backupid    String @default("") @db.VarChar(32)
  loglevel    Int    @db.SmallInt
  message     String @db.LongText
  timecreated Int

  @@unique([backupid, id], map: "mdl_backlogs_bacid_uix")
  @@index([backupid], map: "mdl_backlogs_bac_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge {
  id               Int     @id @default(autoincrement())
  name             String  @default("") @db.VarChar(255)
  description      String? @db.LongText
  timecreated      Int     @default(0)
  timemodified     Int     @default(0)
  usercreated      Int
  usermodified     Int
  issuername       String  @default("") @db.VarChar(255)
  issuerurl        String  @default("") @db.VarChar(255)
  issuercontact    String? @db.VarChar(255)
  expiredate       Int?
  expireperiod     Int?
  type             Boolean @default(true)
  courseid         Int?
  message          String  @db.LongText
  messagesubject   String  @db.LongText
  attachment       Boolean @default(true)
  notification     Boolean @default(true)
  status           Boolean @default(false)
  nextcron         Int?
  version          String? @db.VarChar(255)
  language         String? @db.VarChar(255)
  imageauthorname  String? @db.VarChar(255)
  imageauthoremail String? @db.VarChar(255)
  imageauthorurl   String? @db.VarChar(255)
  imagecaption     String? @db.LongText

  @@index([courseid], map: "mdl_badg_cou_ix")
  @@index([type], map: "mdl_badg_typ_ix")
  @@index([usercreated], map: "mdl_badg_use2_ix")
  @@index([usermodified], map: "mdl_badg_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge_alignment {
  id                Int     @id @default(autoincrement())
  badgeid           Int     @default(0)
  targetname        String  @default("") @db.VarChar(255)
  targeturl         String  @default("") @db.VarChar(255)
  targetdescription String? @db.LongText
  targetframework   String? @db.VarChar(255)
  targetcode        String? @db.VarChar(255)

  @@index([badgeid], map: "mdl_badgalig_bad_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge_backpack {
  id                 Int     @id @default(autoincrement())
  userid             Int     @default(0)
  email              String  @default("") @db.VarChar(100)
  backpackuid        Int
  autosync           Boolean @default(false)
  password           String? @db.VarChar(50)
  externalbackpackid Int?

  @@unique([userid, externalbackpackid], map: "mdl_badgback_useext_uix")
  @@index([externalbackpackid], map: "mdl_badgback_ext_ix")
  @@index([userid], map: "mdl_badgback_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge_backpack_oauth2 {
  id                 Int     @id @default(autoincrement())
  usermodified       Int     @default(0)
  timecreated        Int     @default(0)
  timemodified       Int     @default(0)
  userid             Int
  issuerid           Int
  externalbackpackid Int
  token              String  @db.LongText
  refreshtoken       String  @db.LongText
  expires            Int?
  scope              String? @db.LongText

  @@index([externalbackpackid], map: "mdl_badgbackoaut_ext_ix")
  @@index([issuerid], map: "mdl_badgbackoaut_iss_ix")
  @@index([userid], map: "mdl_badgbackoaut_use2_ix")
  @@index([usermodified], map: "mdl_badgbackoaut_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge_criteria {
  id                Int     @id @default(autoincrement())
  badgeid           Int     @default(0)
  criteriatype      Int?
  method            Boolean @default(true)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt

  @@unique([badgeid, criteriatype], map: "mdl_badgcrit_badcri_uix")
  @@index([badgeid], map: "mdl_badgcrit_bad_ix")
  @@index([criteriatype], map: "mdl_badgcrit_cri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge_criteria_met {
  id       Int  @id @default(autoincrement())
  issuedid Int?
  critid   Int
  userid   Int
  datemet  Int

  @@index([critid], map: "mdl_badgcritmet_cri_ix")
  @@index([issuedid], map: "mdl_badgcritmet_iss_ix")
  @@index([userid], map: "mdl_badgcritmet_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge_criteria_param {
  id     Int     @id @default(autoincrement())
  critid Int
  name   String  @default("") @db.VarChar(255)
  value  String? @db.VarChar(255)

  @@index([critid], map: "mdl_badgcritpara_cri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge_endorsement {
  id           Int     @id @default(autoincrement())
  badgeid      Int     @default(0)
  issuername   String  @default("") @db.VarChar(255)
  issuerurl    String  @default("") @db.VarChar(255)
  issueremail  String  @default("") @db.VarChar(255)
  claimid      String? @db.VarChar(255)
  claimcomment String? @db.LongText
  dateissued   Int     @default(0)

  @@index([badgeid], map: "mdl_badgendo_bad_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge_external {
  id           Int     @id @default(autoincrement())
  backpackid   Int
  collectionid Int
  entityid     String? @db.VarChar(255)
  assertion    String? @db.LongText

  @@index([backpackid], map: "mdl_badgexte_bac_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge_external_backpack {
  id              Int    @id @default(autoincrement())
  backpackapiurl  String @unique(map: "mdl_badgexteback_bac_uix") @default("") @db.VarChar(255)
  backpackweburl  String @unique(map: "mdl_badgexteback_bac2_uix") @default("") @db.VarChar(255)
  apiversion      String @default("1.0") @db.VarChar(12)
  sortorder       Int    @default(0)
  oauth2_issuerid Int?

  @@index([oauth2_issuerid], map: "mdl_badgexteback_oau_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge_external_identifier {
  id             Int    @id @default(autoincrement())
  sitebackpackid Int
  internalid     String @default("") @db.VarChar(128)
  externalid     String @default("") @db.VarChar(128)
  type           String @default("") @db.VarChar(16)

  @@unique([sitebackpackid, internalid, externalid, type], map: "mdl_badgexteiden_sitintext_uix")
  @@index([sitebackpackid], map: "mdl_badgexteiden_sit_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge_issued {
  id             Int     @id @default(autoincrement())
  badgeid        Int     @default(0)
  userid         Int     @default(0)
  uniquehash     String  @db.LongText
  dateissued     Int     @default(0)
  dateexpire     Int?
  visible        Boolean @default(false)
  issuernotified Int?

  @@unique([badgeid, userid], map: "mdl_badgissu_baduse_uix")
  @@index([badgeid], map: "mdl_badgissu_bad_ix")
  @@index([userid], map: "mdl_badgissu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge_manual_award {
  id          Int @id @default(autoincrement())
  badgeid     Int
  recipientid Int
  issuerid    Int
  issuerrole  Int
  datemet     Int

  @@index([badgeid], map: "mdl_badgmanuawar_bad_ix")
  @@index([issuerrole], map: "mdl_badgmanuawar_iss2_ix")
  @@index([issuerid], map: "mdl_badgmanuawar_iss_ix")
  @@index([recipientid], map: "mdl_badgmanuawar_rec_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_badge_related {
  id             Int  @id @default(autoincrement())
  badgeid        Int  @default(0)
  relatedbadgeid Int?

  @@unique([badgeid, relatedbadgeid], map: "mdl_badgrela_badrel_uix")
  @@index([badgeid], map: "mdl_badgrela_bad_ix")
  @@index([relatedbadgeid], map: "mdl_badgrela_rel_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_bigbluebuttonbn {
  id                            Int     @id @default(autoincrement())
  type                          Int     @default(0) @db.TinyInt
  course                        Int     @default(0)
  name                          String  @default("") @db.VarChar(255)
  intro                         String? @db.LongText
  introformat                   Int     @default(1) @db.SmallInt
  meetingid                     String  @default("") @db.VarChar(255)
  moderatorpass                 String  @default("") @db.VarChar(255)
  viewerpass                    String  @default("") @db.VarChar(255)
  wait                          Boolean @default(false)
  record                        Boolean @default(false)
  recordallfromstart            Boolean @default(false)
  recordhidebutton              Boolean @default(false)
  welcome                       String? @db.LongText
  voicebridge                   Int     @default(0) @db.MediumInt
  openingtime                   Int     @default(0)
  closingtime                   Int     @default(0)
  timecreated                   Int     @default(0)
  timemodified                  Int     @default(0)
  presentation                  String? @db.LongText
  participants                  String? @db.LongText
  userlimit                     Int     @default(0) @db.SmallInt
  recordings_html               Boolean @default(false)
  recordings_deleted            Boolean @default(true)
  recordings_imported           Boolean @default(false)
  recordings_preview            Boolean @default(false)
  clienttype                    Boolean @default(false)
  muteonstart                   Boolean @default(false)
  disablecam                    Boolean @default(false)
  disablemic                    Boolean @default(false)
  disableprivatechat            Boolean @default(false)
  disablepublicchat             Boolean @default(false)
  disablenote                   Boolean @default(false)
  hideuserlist                  Boolean @default(false)
  completionattendance          Int     @default(0)
  completionengagementchats     Int     @default(0)
  completionengagementtalks     Int     @default(0)
  completionengagementraisehand Int     @default(0)
  completionengagementpollvotes Int     @default(0)
  completionengagementemojis    Int     @default(0)
  guestallowed                  Int?    @default(0) @db.TinyInt
  mustapproveuser               Int?    @default(1) @db.TinyInt
  guestlinkuid                  String? @db.VarChar(1024)
  guestpassword                 String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_bigbluebuttonbn_logs {
  id                Int     @id @default(autoincrement())
  courseid          Int
  bigbluebuttonbnid Int
  userid            Int?
  timecreated       Int     @default(0)
  meetingid         String  @default("") @db.VarChar(256)
  log               String  @default("") @db.VarChar(32)
  meta              String? @db.LongText

  @@index([courseid], map: "mdl_bigblogs_cou_ix")
  @@index([courseid, bigbluebuttonbnid], map: "mdl_bigblogs_coubig_ix")
  @@index([courseid, bigbluebuttonbnid, userid, log], map: "mdl_bigblogs_coubiguselog_ix")
  @@index([log], map: "mdl_bigblogs_log_ix")
  @@index([userid, log], map: "mdl_bigblogs_uselog_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_bigbluebuttonbn_recordings {
  id                Int     @id @default(autoincrement())
  courseid          Int
  bigbluebuttonbnid Int
  groupid           Int?
  recordingid       String  @default("") @db.VarChar(64)
  headless          Boolean @default(false)
  imported          Boolean @default(false)
  status            Boolean @default(false)
  importeddata      String? @db.LongText
  timecreated       Int     @default(0)
  usermodified      Int     @default(0)
  timemodified      Int     @default(0)

  @@index([bigbluebuttonbnid], map: "mdl_bigbreco_big_ix")
  @@index([courseid], map: "mdl_bigbreco_cou_ix")
  @@index([recordingid], map: "mdl_bigbreco_rec_ix")
  @@index([usermodified], map: "mdl_bigbreco_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_block {
  id       Int     @id @default(autoincrement())
  name     String  @unique(map: "mdl_bloc_nam_uix") @default("") @db.VarChar(40)
  cron     Int     @default(0)
  lastcron Int     @default(0)
  visible  Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_block_instances {
  id                Int     @id @default(autoincrement())
  blockname         String  @default("") @db.VarChar(40)
  parentcontextid   Int
  showinsubcontexts Int     @db.SmallInt
  requiredbytheme   Int     @default(0) @db.SmallInt
  pagetypepattern   String  @default("") @db.VarChar(64)
  subpagepattern    String? @db.VarChar(16)
  defaultregion     String  @default("") @db.VarChar(16)
  defaultweight     Int
  configdata        String? @db.LongText
  timecreated       Int
  timemodified      Int

  @@index([blockname], map: "mdl_blocinst_blo_ix")
  @@index([parentcontextid], map: "mdl_blocinst_par_ix")
  @@index([parentcontextid, showinsubcontexts, pagetypepattern, subpagepattern], map: "mdl_blocinst_parshopagsub_ix")
  @@index([timemodified], map: "mdl_blocinst_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_block_positions {
  id              Int    @id @default(autoincrement())
  blockinstanceid Int
  contextid       Int
  pagetype        String @default("") @db.VarChar(64)
  subpage         String @default("") @db.VarChar(16)
  visible         Int    @db.SmallInt
  region          String @default("") @db.VarChar(16)
  weight          Int

  @@unique([blockinstanceid, contextid, pagetype, subpage], map: "mdl_blocposi_bloconpagsub_uix")
  @@index([blockinstanceid], map: "mdl_blocposi_blo_ix")
  @@index([contextid], map: "mdl_blocposi_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_block_recent_activity {
  id          Int     @id @default(autoincrement())
  courseid    Int
  cmid        Int
  timecreated Int
  userid      Int
  action      Boolean
  modname     String? @db.VarChar(20)

  @@index([courseid, timecreated], map: "mdl_blocreceacti_coutim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_block_recentlyaccesseditems {
  id         Int @id @default(autoincrement())
  courseid   Int
  cmid       Int
  userid     Int
  timeaccess Int

  @@unique([userid, courseid, cmid], map: "mdl_blocrece_usecoucmi_uix")
  @@index([cmid], map: "mdl_blocrece_cmi_ix")
  @@index([courseid], map: "mdl_blocrece_cou_ix")
  @@index([userid], map: "mdl_blocrece_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_block_rss_client {
  id             Int    @id @default(autoincrement())
  userid         Int    @default(0)
  title          String @db.LongText
  preferredtitle String @default("") @db.VarChar(64)
  description    String @db.LongText
  shared         Int    @default(0) @db.TinyInt
  url            String @default("") @db.VarChar(255)
  skiptime       Int    @default(0)
  skipuntil      Int    @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_blog_association {
  id        Int @id @default(autoincrement())
  contextid Int
  blogid    Int

  @@index([blogid], map: "mdl_blogasso_blo_ix")
  @@index([contextid], map: "mdl_blogasso_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_blog_external {
  id             Int     @id @default(autoincrement())
  userid         Int
  name           String  @default("") @db.VarChar(255)
  description    String? @db.LongText
  url            String  @db.LongText
  filtertags     String? @db.VarChar(255)
  failedlastsync Boolean @default(false)
  timemodified   Int?
  timefetched    Int     @default(0)

  @@index([userid], map: "mdl_blogexte_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_book {
  id           Int     @id @default(autoincrement())
  course       Int     @default(0)
  name         String  @default("") @db.VarChar(255)
  intro        String? @db.LongText
  introformat  Int     @default(0) @db.SmallInt
  numbering    Int     @default(0) @db.SmallInt
  navstyle     Int     @default(1) @db.SmallInt
  customtitles Int     @default(0) @db.TinyInt
  revision     Int     @default(0)
  timecreated  Int     @default(0)
  timemodified Int     @default(0)

  @@index([course], map: "mdl_book_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_book_chapters {
  id            Int    @id @default(autoincrement())
  bookid        Int    @default(0)
  pagenum       Int    @default(0)
  subchapter    Int    @default(0)
  title         String @default("") @db.VarChar(255)
  content       String @db.LongText
  contentformat Int    @default(0) @db.SmallInt
  hidden        Int    @default(0) @db.TinyInt
  timecreated   Int    @default(0)
  timemodified  Int    @default(0)
  importsrc     String @default("") @db.VarChar(255)

  @@index([bookid], map: "mdl_bookchap_boo_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_cache_filters {
  id           Int    @id @default(autoincrement())
  filter       String @default("") @db.VarChar(32)
  version      Int    @default(0)
  md5key       String @default("") @db.VarChar(32)
  rawtext      String @db.LongText
  timemodified Int    @default(0)

  @@index([filter, md5key], map: "mdl_cachfilt_filmd5_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_cache_flags {
  id           Int    @id @default(autoincrement())
  flagtype     String @default("") @db.VarChar(255)
  name         String @default("") @db.VarChar(255)
  timemodified Int    @default(0)
  value        String @db.LongText
  expiry       Int

  @@index([flagtype], map: "mdl_cachflag_fla_ix")
  @@index([name], map: "mdl_cachflag_nam_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_capabilities {
  id           Int    @id @default(autoincrement())
  name         String @unique(map: "mdl_capa_nam_uix") @default("") @db.VarChar(255)
  captype      String @default("") @db.VarChar(50)
  contextlevel Int    @default(0)
  component    String @default("") @db.VarChar(100)
  riskbitmask  Int    @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_chat {
  id           Int    @id @default(autoincrement())
  course       Int    @default(0)
  name         String @default("") @db.VarChar(255)
  intro        String @db.LongText
  introformat  Int    @default(0) @db.SmallInt
  keepdays     Int    @default(0)
  studentlogs  Int    @default(0) @db.SmallInt
  chattime     Int    @default(0)
  schedule     Int    @default(0) @db.SmallInt
  timemodified Int    @default(0)

  @@index([course], map: "mdl_chat_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_chat_messages {
  id        Int     @id @default(autoincrement())
  chatid    Int     @default(0)
  userid    Int     @default(0)
  groupid   Int     @default(0)
  issystem  Boolean @default(false)
  message   String  @db.LongText
  timestamp Int     @default(0)

  @@index([chatid], map: "mdl_chatmess_cha_ix")
  @@index([groupid], map: "mdl_chatmess_gro_ix")
  @@index([timestamp, chatid], map: "mdl_chatmess_timcha_ix")
  @@index([userid], map: "mdl_chatmess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_chat_messages_current {
  id        Int     @id @default(autoincrement())
  chatid    Int     @default(0)
  userid    Int     @default(0)
  groupid   Int     @default(0)
  issystem  Boolean @default(false)
  message   String  @db.LongText
  timestamp Int     @default(0)

  @@index([chatid], map: "mdl_chatmesscurr_cha_ix")
  @@index([groupid], map: "mdl_chatmesscurr_gro_ix")
  @@index([timestamp, chatid], map: "mdl_chatmesscurr_timcha_ix")
  @@index([userid], map: "mdl_chatmesscurr_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_chat_users {
  id              Int    @id @default(autoincrement())
  chatid          Int    @default(0)
  userid          Int    @default(0)
  groupid         Int    @default(0)
  version         String @default("") @db.VarChar(16)
  ip              String @default("") @db.VarChar(45)
  firstping       Int    @default(0)
  lastping        Int    @default(0)
  lastmessageping Int    @default(0)
  sid             String @default("") @db.VarChar(32)
  course          Int    @default(0)
  lang            String @default("") @db.VarChar(30)

  @@index([chatid], map: "mdl_chatuser_cha_ix")
  @@index([course], map: "mdl_chatuser_cou_ix")
  @@index([groupid], map: "mdl_chatuser_gro_ix")
  @@index([lastping], map: "mdl_chatuser_las_ix")
  @@index([userid], map: "mdl_chatuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_choice {
  id               Int     @id @default(autoincrement())
  course           Int     @default(0)
  name             String  @default("") @db.VarChar(255)
  intro            String  @db.LongText
  introformat      Int     @default(0) @db.SmallInt
  publish          Int     @default(0) @db.TinyInt
  showresults      Int     @default(0) @db.TinyInt
  display          Int     @default(0) @db.SmallInt
  allowupdate      Int     @default(0) @db.TinyInt
  allowmultiple    Int     @default(0) @db.TinyInt
  showunanswered   Int     @default(0) @db.TinyInt
  includeinactive  Int     @default(1) @db.TinyInt
  limitanswers     Int     @default(0) @db.TinyInt
  timeopen         Int     @default(0)
  timeclose        Int     @default(0)
  showpreview      Int     @default(0) @db.TinyInt
  timemodified     Int     @default(0)
  completionsubmit Boolean @default(false)
  showavailable    Boolean @default(false)

  @@index([course], map: "mdl_choi_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_choice_answers {
  id           Int @id @default(autoincrement())
  choiceid     Int @default(0)
  userid       Int @default(0)
  optionid     Int @default(0)
  timemodified Int @default(0)

  @@index([choiceid], map: "mdl_choiansw_cho_ix")
  @@index([optionid], map: "mdl_choiansw_opt_ix")
  @@index([userid], map: "mdl_choiansw_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_choice_options {
  id           Int     @id @default(autoincrement())
  choiceid     Int     @default(0)
  text         String? @db.LongText
  maxanswers   Int?    @default(0)
  timemodified Int     @default(0)

  @@index([choiceid], map: "mdl_choiopti_cho_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_cohort {
  id                Int     @id @default(autoincrement())
  contextid         Int
  name              String  @default("") @db.VarChar(254)
  idnumber          String? @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat Int     @db.TinyInt
  visible           Boolean @default(true)
  component         String  @default("") @db.VarChar(100)
  timecreated       Int
  timemodified      Int
  theme             String? @db.VarChar(50)

  @@index([contextid], map: "mdl_coho_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_cohort_members {
  id        Int @id @default(autoincrement())
  cohortid  Int @default(0)
  userid    Int @default(0)
  timeadded Int @default(0)

  @@unique([cohortid, userid], map: "mdl_cohomemb_cohuse_uix")
  @@index([cohortid], map: "mdl_cohomemb_coh_ix")
  @@index([userid], map: "mdl_cohomemb_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_comments {
  id          Int     @id @default(autoincrement())
  contextid   Int
  component   String? @db.VarChar(255)
  commentarea String  @default("") @db.VarChar(255)
  itemid      Int
  content     String  @db.LongText
  format      Int     @default(0) @db.TinyInt
  userid      Int
  timecreated Int

  @@index([contextid, commentarea, itemid], map: "mdl_comm_concomite_ix")
  @@index([userid], map: "mdl_comm_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_communication {
  id             Int     @id @default(autoincrement())
  contextid      Int
  instanceid     Int
  component      String  @default("") @db.VarChar(100)
  instancetype   String  @default("") @db.VarChar(100)
  provider       String  @default("") @db.VarChar(100)
  roomname       String? @db.VarChar(255)
  avatarfilename String? @db.VarChar(100)
  active         Boolean @default(true)
  avatarsynced   Boolean @default(false)

  @@index([contextid], map: "mdl_comm_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_communication_customlink {
  id     Int     @id @default(autoincrement())
  commid Int
  url    String? @db.VarChar(255)

  @@index([commid], map: "mdl_commcust_com_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_communication_user {
  id      Int     @id @default(autoincrement())
  commid  Int
  userid  Int
  synced  Boolean @default(false)
  deleted Boolean @default(false)

  @@index([commid], map: "mdl_commuser_com_ix")
  @@index([userid], map: "mdl_commuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency {
  id                    Int     @id @default(autoincrement())
  shortname             String? @db.VarChar(100)
  description           String? @db.LongText
  descriptionformat     Int     @default(0) @db.SmallInt
  idnumber              String? @db.VarChar(100)
  competencyframeworkid Int
  parentid              Int     @default(0)
  path                  String  @default("") @db.VarChar(255)
  sortorder             Int
  ruletype              String? @db.VarChar(100)
  ruleoutcome           Int     @default(0) @db.TinyInt
  ruleconfig            String? @db.LongText
  scaleid               Int?
  scaleconfiguration    String? @db.LongText
  timecreated           Int
  timemodified          Int
  usermodified          Int?

  @@unique([competencyframeworkid, idnumber], map: "mdl_comp_comidn_uix")
  @@index([ruleoutcome], map: "mdl_comp_rul_ix")
  @@index([scaleid], map: "mdl_comp_sca_ix")
  @@index([usermodified], map: "mdl_comp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_coursecomp {
  id           Int @id @default(autoincrement())
  courseid     Int
  competencyid Int
  ruleoutcome  Int @db.TinyInt
  timecreated  Int
  timemodified Int
  usermodified Int
  sortorder    Int

  @@unique([courseid, competencyid], map: "mdl_compcour_coucom_uix")
  @@index([competencyid], map: "mdl_compcour_com_ix")
  @@index([courseid], map: "mdl_compcour_cou2_ix")
  @@index([courseid, ruleoutcome], map: "mdl_compcour_courul_ix")
  @@index([usermodified], map: "mdl_compcour_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_coursecompsetting {
  id                     Int  @id @default(autoincrement())
  courseid               Int  @unique(map: "mdl_compcour_cou_uix")
  pushratingstouserplans Int? @db.TinyInt
  timecreated            Int
  timemodified           Int
  usermodified           Int?

  @@index([usermodified], map: "mdl_compcour_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_evidence {
  id               Int     @id @default(autoincrement())
  usercompetencyid Int
  contextid        Int
  action           Int     @db.TinyInt
  actionuserid     Int?
  descidentifier   String  @default("") @db.VarChar(255)
  desccomponent    String  @default("") @db.VarChar(255)
  desca            String? @db.LongText
  url              String? @db.VarChar(255)
  grade            Int?
  note             String? @db.LongText
  timecreated      Int
  timemodified     Int
  usermodified     Int

  @@index([actionuserid], map: "mdl_compevid_act_ix")
  @@index([contextid], map: "mdl_compevid_con_ix")
  @@index([usermodified], map: "mdl_compevid_use2_ix")
  @@index([usercompetencyid], map: "mdl_compevid_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_framework {
  id                 Int     @id @default(autoincrement())
  shortname          String? @db.VarChar(100)
  contextid          Int
  idnumber           String? @unique(map: "mdl_compfram_idn_uix") @db.VarChar(100)
  description        String? @db.LongText
  descriptionformat  Int     @default(0) @db.SmallInt
  scaleid            Int?
  scaleconfiguration String  @db.LongText
  visible            Int     @default(1) @db.TinyInt
  taxonomies         String  @default("") @db.VarChar(255)
  timecreated        Int
  timemodified       Int
  usermodified       Int?

  @@index([contextid], map: "mdl_compfram_con_ix")
  @@index([scaleid], map: "mdl_compfram_sca_ix")
  @@index([usermodified], map: "mdl_compfram_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_modulecomp {
  id            Int     @id @default(autoincrement())
  cmid          Int
  timecreated   Int
  timemodified  Int
  usermodified  Int
  sortorder     Int
  competencyid  Int
  ruleoutcome   Int     @db.TinyInt
  overridegrade Boolean @default(false)

  @@unique([cmid, competencyid], map: "mdl_compmodu_cmicom_uix")
  @@index([cmid], map: "mdl_compmodu_cmi_ix")
  @@index([cmid, ruleoutcome], map: "mdl_compmodu_cmirul_ix")
  @@index([competencyid], map: "mdl_compmodu_com_ix")
  @@index([usermodified], map: "mdl_compmodu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_plan {
  id                Int     @id @default(autoincrement())
  name              String  @default("") @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.SmallInt
  userid            Int
  templateid        Int?
  origtemplateid    Int?
  status            Boolean
  duedate           Int?    @default(0)
  reviewerid        Int?
  timecreated       Int
  timemodified      Int     @default(0)
  usermodified      Int

  @@index([status, duedate], map: "mdl_compplan_stadue_ix")
  @@index([templateid], map: "mdl_compplan_tem_ix")
  @@index([usermodified], map: "mdl_compplan_use_ix")
  @@index([userid, status], map: "mdl_compplan_usesta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_plancomp {
  id           Int  @id @default(autoincrement())
  planid       Int
  competencyid Int
  sortorder    Int?
  timecreated  Int
  timemodified Int?
  usermodified Int

  @@unique([planid, competencyid], map: "mdl_compplan_placom_uix")
  @@index([usermodified], map: "mdl_compplan_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_relatedcomp {
  id                  Int  @id @default(autoincrement())
  competencyid        Int
  relatedcompetencyid Int
  timecreated         Int
  timemodified        Int?
  usermodified        Int

  @@index([competencyid], map: "mdl_comprela_com_ix")
  @@index([relatedcompetencyid], map: "mdl_comprela_rel_ix")
  @@index([usermodified], map: "mdl_comprela_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_template {
  id                Int     @id @default(autoincrement())
  shortname         String? @db.VarChar(100)
  contextid         Int
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.SmallInt
  visible           Int     @default(1) @db.TinyInt
  duedate           Int?
  timecreated       Int
  timemodified      Int
  usermodified      Int?

  @@index([contextid], map: "mdl_comptemp_con_ix")
  @@index([usermodified], map: "mdl_comptemp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_templatecohort {
  id           Int @id @default(autoincrement())
  templateid   Int
  cohortid     Int
  timecreated  Int
  timemodified Int
  usermodified Int

  @@unique([templateid, cohortid], map: "mdl_comptemp_temcoh_uix")
  @@index([templateid], map: "mdl_comptemp_tem2_ix")
  @@index([usermodified], map: "mdl_comptemp_use3_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_templatecomp {
  id           Int  @id @default(autoincrement())
  templateid   Int
  competencyid Int
  timecreated  Int
  timemodified Int
  usermodified Int
  sortorder    Int?

  @@index([competencyid], map: "mdl_comptemp_com_ix")
  @@index([templateid], map: "mdl_comptemp_tem_ix")
  @@index([usermodified], map: "mdl_comptemp_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_usercomp {
  id           Int  @id @default(autoincrement())
  userid       Int
  competencyid Int
  status       Int  @default(0) @db.TinyInt
  reviewerid   Int?
  proficiency  Int? @db.TinyInt
  grade        Int?
  timecreated  Int
  timemodified Int?
  usermodified Int

  @@unique([userid, competencyid], map: "mdl_compuser_usecom_uix")
  @@index([usermodified], map: "mdl_compuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_usercompcourse {
  id           Int  @id @default(autoincrement())
  userid       Int
  courseid     Int
  competencyid Int
  proficiency  Int? @db.TinyInt
  grade        Int?
  timecreated  Int
  timemodified Int?
  usermodified Int

  @@unique([userid, courseid, competencyid], map: "mdl_compuser_usecoucom_uix")
  @@index([usermodified], map: "mdl_compuser_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_usercompplan {
  id           Int  @id @default(autoincrement())
  userid       Int
  competencyid Int
  planid       Int
  proficiency  Int? @db.TinyInt
  grade        Int?
  sortorder    Int?
  timecreated  Int
  timemodified Int?
  usermodified Int

  @@unique([userid, competencyid, planid], map: "mdl_compuser_usecompla_uix")
  @@index([usermodified], map: "mdl_compuser_use3_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_userevidence {
  id                Int     @id @default(autoincrement())
  userid            Int
  name              String  @default("") @db.VarChar(100)
  description       String  @db.LongText
  descriptionformat Boolean
  url               String  @db.LongText
  timecreated       Int
  timemodified      Int
  usermodified      Int

  @@index([userid], map: "mdl_compuser_use4_ix")
  @@index([usermodified], map: "mdl_compuser_use5_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_competency_userevidencecomp {
  id             Int @id @default(autoincrement())
  userevidenceid Int
  competencyid   Int
  timecreated    Int
  timemodified   Int
  usermodified   Int

  @@unique([userevidenceid, competencyid], map: "mdl_compuser_usecom2_uix")
  @@index([userevidenceid], map: "mdl_compuser_use6_ix")
  @@index([usermodified], map: "mdl_compuser_use7_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_config {
  id    Int    @id @default(autoincrement())
  name  String @unique(map: "mdl_conf_nam_uix") @default("") @db.VarChar(255)
  value String @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_config_log {
  id           Int     @id @default(autoincrement())
  userid       Int
  timemodified Int
  plugin       String? @db.VarChar(100)
  name         String  @default("") @db.VarChar(100)
  value        String? @db.LongText
  oldvalue     String? @db.LongText

  @@index([timemodified], map: "mdl_conflog_tim_ix")
  @@index([userid], map: "mdl_conflog_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_config_plugins {
  id     Int    @id @default(autoincrement())
  plugin String @default("core") @db.VarChar(100)
  name   String @default("") @db.VarChar(100)
  value  String @db.LongText

  @@unique([plugin, name], map: "mdl_confplug_plunam_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_contentbank_content {
  id           Int     @id @default(autoincrement())
  name         String  @default("") @db.VarChar(255)
  contenttype  String  @default("") @db.VarChar(100)
  contextid    Int
  visibility   Boolean @default(true)
  instanceid   Int?
  configdata   String? @db.LongText
  usercreated  Int
  usermodified Int?
  timecreated  Int     @default(0)
  timemodified Int?    @default(0)

  @@index([contextid], map: "mdl_contcont_con_ix")
  @@index([contextid, contenttype, instanceid], map: "mdl_contcont_conconins_ix")
  @@index([name], map: "mdl_contcont_nam_ix")
  @@index([usercreated], map: "mdl_contcont_use2_ix")
  @@index([usermodified], map: "mdl_contcont_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_context {
  id           Int     @id @default(autoincrement())
  contextlevel Int     @default(0)
  instanceid   Int     @default(0)
  path         String? @db.VarChar(255)
  depth        Int     @default(0) @db.TinyInt
  locked       Int     @default(0) @db.TinyInt

  @@unique([contextlevel, instanceid], map: "mdl_cont_conins_uix")
  @@index([instanceid], map: "mdl_cont_ins_ix")
  @@index([path], map: "mdl_cont_pat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_context_temp {
  id     Int    @id
  path   String @default("") @db.VarChar(255)
  depth  Int    @db.TinyInt
  locked Int    @default(0) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course {
  id                       Int      @id @default(autoincrement())
  category                 Int      @default(0)
  sortorder                Int      @default(0)
  fullname                 String   @default("") @db.VarChar(255)
  shortname                String   @default("") @db.VarChar(255)
  longname                 String   @default("") @db.VarChar(255)
  idnumber                 String   @default("") @db.VarChar(100)
  imagesrc                 String?  @db.VarChar(255)
  imagealt                 String?  @db.VarChar(255)
  summary                  String?  @db.LongText
  summaryformat            Int      @default(0) @db.TinyInt
  format                   String   @default("topics") @db.VarChar(21)
  showgrades               Int      @default(1) @db.TinyInt
  newsitems                Int      @default(1) @db.MediumInt
  startdate                Int      @default(0)
  enddate                  Int      @default(0)
  relativedatesmode        Boolean  @default(false)
  marker                   Int      @default(0)
  maxbytes                 Int      @default(0)
  legacyfiles              Int      @default(0) @db.SmallInt
  showreports              Int      @default(0) @db.SmallInt
  visible                  Boolean  @default(true)
  visibleold               Boolean  @default(true)
  downloadcontent          Boolean?
  groupmode                Int      @default(0) @db.SmallInt
  groupmodeforce           Int      @default(0) @db.SmallInt
  defaultgroupingid        Int      @default(0)
  lang                     String   @default("") @db.VarChar(30)
  calendartype             String   @default("") @db.VarChar(30)
  theme                    String   @default("") @db.VarChar(50)
  timecreated              Int      @default(0)
  timemodified             Int      @default(0)
  requested                Boolean  @default(false)
  enablecompletion         Boolean  @default(false)
  completionnotify         Boolean  @default(false)
  cacherev                 Int      @default(0)
  originalcourseid         Int?
  showactivitydates        Boolean  @default(false)
  showcompletionconditions Boolean?
  pdfexportfont            String?  @db.VarChar(50)

  @@index([category], map: "mdl_cour_cat_ix")
  @@index([idnumber], map: "mdl_cour_idn_ix")
  @@index([originalcourseid], map: "mdl_cour_ori_ix")
  @@index([shortname], map: "mdl_cour_sho_ix")
  @@index([sortorder], map: "mdl_cour_sor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course_categories {
  id                Int     @id @default(autoincrement())
  name              String  @default("") @db.VarChar(255)
  idnumber          String? @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  parent            Int     @default(0)
  sortorder         Int     @default(0)
  coursecount       Int     @default(0)
  visible           Boolean @default(true)
  visibleold        Boolean @default(true)
  timemodified      Int     @default(0)
  depth             Int     @default(0)
  path              String  @default("") @db.VarChar(255)
  theme             String? @db.VarChar(50)

  @@index([parent], map: "mdl_courcate_par_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course_completion_aggr_methd {
  id           Int      @id @default(autoincrement())
  course       Int      @default(0)
  criteriatype Int?
  method       Boolean  @default(false)
  value        Decimal? @db.Decimal(10, 5)

  @@unique([course, criteriatype], map: "mdl_courcompaggrmeth_coucr_uix")
  @@index([course], map: "mdl_courcompaggrmeth_cou_ix")
  @@index([criteriatype], map: "mdl_courcompaggrmeth_cri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course_completion_crit_compl {
  id            Int      @id @default(autoincrement())
  userid        Int      @default(0)
  course        Int      @default(0)
  criteriaid    Int      @default(0)
  gradefinal    Decimal? @db.Decimal(10, 5)
  unenroled     Int?
  timecompleted Int?

  @@unique([userid, course, criteriaid], map: "mdl_courcompcritcomp_useco_uix")
  @@index([course], map: "mdl_courcompcritcomp_cou_ix")
  @@index([criteriaid], map: "mdl_courcompcritcomp_cri_ix")
  @@index([timecompleted], map: "mdl_courcompcritcomp_tim_ix")
  @@index([userid], map: "mdl_courcompcritcomp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course_completion_criteria {
  id             Int      @id @default(autoincrement())
  course         Int      @default(0)
  criteriatype   Int      @default(0)
  module         String?  @db.VarChar(100)
  moduleinstance Int?
  courseinstance Int?
  enrolperiod    Int?
  timeend        Int?
  gradepass      Decimal? @db.Decimal(10, 5)
  role           Int?

  @@index([course], map: "mdl_courcompcrit_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course_completion_defaults {
  id                  Int     @id @default(autoincrement())
  course              Int
  module              Int
  completion          Boolean @default(false)
  completionview      Boolean @default(false)
  completionusegrade  Boolean @default(false)
  completionpassgrade Boolean @default(false)
  completionexpected  Int     @default(0)
  customrules         String? @db.LongText

  @@unique([course, module], map: "mdl_courcompdefa_coumod_uix")
  @@index([course], map: "mdl_courcompdefa_cou_ix")
  @@index([module], map: "mdl_courcompdefa_mod_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course_completions {
  id            Int  @id @default(autoincrement())
  userid        Int  @default(0)
  course        Int  @default(0)
  timeenrolled  Int  @default(0)
  timestarted   Int  @default(0)
  timecompleted Int?
  reaggregate   Int  @default(0)

  @@unique([userid, course], map: "mdl_courcomp_usecou_uix")
  @@index([course], map: "mdl_courcomp_cou_ix")
  @@index([timecompleted], map: "mdl_courcomp_tim_ix")
  @@index([userid], map: "mdl_courcomp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course_format_options {
  id        Int     @id @default(autoincrement())
  courseid  Int
  format    String  @default("") @db.VarChar(21)
  sectionid Int     @default(0)
  name      String  @default("") @db.VarChar(100)
  value     String? @db.LongText

  @@unique([courseid, format, sectionid, name], map: "mdl_courformopti_couforsec_uix")
  @@index([courseid], map: "mdl_courformopti_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course_modules {
  id                        Int      @id @default(autoincrement())
  course                    Int      @default(0)
  module                    Int      @default(0)
  instance                  Int      @default(0)
  section                   Int      @default(0)
  idnumber                  String?  @db.VarChar(100)
  added                     Int      @default(0)
  score                     Int      @default(0) @db.SmallInt
  indent                    Int      @default(0) @db.MediumInt
  visible                   Boolean  @default(true)
  visibleoncoursepage       Boolean  @default(true)
  visibleold                Boolean  @default(true)
  groupmode                 Int      @default(0) @db.SmallInt
  groupingid                Int      @default(0)
  completion                Boolean  @default(false)
  completiongradeitemnumber Int?
  completionview            Boolean  @default(false)
  completionexpected        Int      @default(0)
  completionpassgrade       Boolean  @default(false)
  showdescription           Boolean  @default(false)
  availability              String?  @db.LongText
  deletioninprogress        Boolean  @default(false)
  downloadcontent           Boolean? @default(true)
  lang                      String?  @db.VarChar(30)

  @@index([course], map: "mdl_courmodu_cou_ix")
  @@index([groupingid], map: "mdl_courmodu_gro_ix")
  @@index([idnumber, course], map: "mdl_courmodu_idncou_ix")
  @@index([instance], map: "mdl_courmodu_ins_ix")
  @@index([module], map: "mdl_courmodu_mod_ix")
  @@index([visible], map: "mdl_courmodu_vis_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course_modules_completion {
  id              Int     @id @default(autoincrement())
  coursemoduleid  Int
  userid          Int
  completionstate Boolean
  overrideby      Int?
  timemodified    Int

  @@unique([userid, coursemoduleid], map: "mdl_courmoducomp_usecou_uix")
  @@index([coursemoduleid], map: "mdl_courmoducomp_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course_modules_viewed {
  id             Int @id @default(autoincrement())
  coursemoduleid Int
  userid         Int
  timecreated    Int

  @@unique([userid, coursemoduleid], map: "mdl_courmoduview_usecou_uix")
  @@index([coursemoduleid], map: "mdl_courmoduview_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course_published {
  id            Int      @id @default(autoincrement())
  huburl        String?  @db.VarChar(255)
  courseid      Int
  timepublished Int
  enrollable    Boolean  @default(true)
  hubcourseid   Int
  status        Boolean? @default(false)
  timechecked   Int?

  @@index([courseid], map: "mdl_courpubl_cou_ix")
  @@index([hubcourseid], map: "mdl_courpubl_hub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course_request {
  id            Int    @id @default(autoincrement())
  fullname      String @default("") @db.VarChar(254)
  shortname     String @default("") @db.VarChar(100)
  summary       String @db.LongText
  summaryformat Int    @default(0) @db.TinyInt
  category      Int    @default(0)
  reason        String @db.LongText
  requester     Int    @default(0)
  password      String @default("") @db.VarChar(50)

  @@index([shortname], map: "mdl_courrequ_sho_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_course_sections {
  id            Int     @id @default(autoincrement())
  course        Int     @default(0)
  section       Int     @default(0)
  name          String? @db.VarChar(255)
  summary       String? @db.LongText
  summaryformat Int     @default(0) @db.TinyInt
  sequence      String? @db.LongText
  visible       Boolean @default(true)
  availability  String? @db.LongText
  timemodified  Int     @default(0)

  @@unique([course, section], map: "mdl_coursect_cousec_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_customfield_category {
  id                Int     @id @default(autoincrement())
  name              String  @default("") @db.VarChar(400)
  description       String? @db.LongText
  descriptionformat Int?
  sortorder         Int?
  timecreated       Int
  timemodified      Int
  component         String  @default("") @db.VarChar(100)
  area              String  @default("") @db.VarChar(100)
  itemid            Int     @default(0)
  contextid         Int?

  @@index([component, area, itemid, sortorder], map: "mdl_custcate_comareitesor_ix")
  @@index([contextid], map: "mdl_custcate_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_customfield_data {
  id             Int      @id @default(autoincrement())
  fieldid        Int
  instanceid     Int
  intvalue       Int?
  decvalue       Decimal? @db.Decimal(10, 5)
  shortcharvalue String?  @db.VarChar(255)
  charvalue      String?  @db.VarChar(1333)
  value          String   @db.LongText
  valueformat    Int
  timecreated    Int
  timemodified   Int
  contextid      Int?

  @@unique([instanceid, fieldid], map: "mdl_custdata_insfie_uix")
  @@index([contextid], map: "mdl_custdata_con_ix")
  @@index([fieldid], map: "mdl_custdata_fie_ix")
  @@index([fieldid, decvalue], map: "mdl_custdata_fiedec_ix")
  @@index([fieldid, intvalue], map: "mdl_custdata_fieint_ix")
  @@index([fieldid, shortcharvalue], map: "mdl_custdata_fiesho_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_customfield_field {
  id                Int     @id @default(autoincrement())
  shortname         String  @default("") @db.VarChar(100)
  name              String  @default("") @db.VarChar(400)
  type              String  @default("") @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat Int?
  sortorder         Int?
  categoryid        Int?
  configdata        String? @db.LongText
  timecreated       Int
  timemodified      Int

  @@index([categoryid], map: "mdl_custfiel_cat_ix")
  @@index([categoryid, sortorder], map: "mdl_custfiel_catsor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_data {
  id                    Int     @id @default(autoincrement())
  course                Int     @default(0)
  name                  String  @default("") @db.VarChar(255)
  intro                 String  @db.LongText
  introformat           Int     @default(0) @db.SmallInt
  comments              Int     @default(0) @db.SmallInt
  timeavailablefrom     Int     @default(0)
  timeavailableto       Int     @default(0)
  timeviewfrom          Int     @default(0)
  timeviewto            Int     @default(0)
  requiredentries       Int     @default(0)
  requiredentriestoview Int     @default(0)
  maxentries            Int     @default(0)
  rssarticles           Int     @default(0) @db.SmallInt
  singletemplate        String? @db.LongText
  listtemplate          String? @db.LongText
  listtemplateheader    String? @db.LongText
  listtemplatefooter    String? @db.LongText
  addtemplate           String? @db.LongText
  rsstemplate           String? @db.LongText
  rsstitletemplate      String? @db.LongText
  csstemplate           String? @db.LongText
  jstemplate            String? @db.LongText
  asearchtemplate       String? @db.LongText
  approval              Int     @default(0) @db.SmallInt
  manageapproved        Int     @default(1) @db.SmallInt
  scale                 Int     @default(0)
  assessed              Int     @default(0)
  assesstimestart       Int     @default(0)
  assesstimefinish      Int     @default(0)
  defaultsort           Int     @default(0)
  defaultsortdir        Int     @default(0) @db.SmallInt
  editany               Int     @default(0) @db.SmallInt
  notification          Int     @default(0)
  timemodified          Int     @default(0)
  config                String? @db.LongText
  completionentries     Int?    @default(0)

  @@index([course], map: "mdl_data_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_data_content {
  id       Int     @id @default(autoincrement())
  fieldid  Int     @default(0)
  recordid Int     @default(0)
  content  String? @db.LongText
  content1 String? @db.LongText
  content2 String? @db.LongText
  content3 String? @db.LongText
  content4 String? @db.LongText

  @@index([fieldid], map: "mdl_datacont_fie_ix")
  @@index([recordid], map: "mdl_datacont_rec_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_data_fields {
  id          Int     @id @default(autoincrement())
  dataid      Int     @default(0)
  type        String  @default("") @db.VarChar(255)
  name        String  @default("") @db.VarChar(255)
  description String  @db.LongText
  required    Boolean @default(false)
  param1      String? @db.LongText
  param2      String? @db.LongText
  param3      String? @db.LongText
  param4      String? @db.LongText
  param5      String? @db.LongText
  param6      String? @db.LongText
  param7      String? @db.LongText
  param8      String? @db.LongText
  param9      String? @db.LongText
  param10     String? @db.LongText

  @@index([dataid], map: "mdl_datafiel_dat_ix")
  @@index([type, dataid], map: "mdl_datafiel_typdat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_data_records {
  id           Int @id @default(autoincrement())
  userid       Int @default(0)
  groupid      Int @default(0)
  dataid       Int @default(0)
  timecreated  Int @default(0)
  timemodified Int @default(0)
  approved     Int @default(0) @db.SmallInt

  @@index([dataid], map: "mdl_datareco_dat_ix")
  @@index([userid], map: "mdl_datareco_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_editor_atto_autosave {
  id           Int    @id @default(autoincrement())
  elementid    String @default("") @db.VarChar(255)
  contextid    Int
  pagehash     String @default("") @db.VarChar(64)
  userid       Int
  drafttext    String @db.LongText
  draftid      Int?
  pageinstance String @default("") @db.VarChar(64)
  timemodified Int    @default(0)

  @@unique([elementid, contextid, userid, pagehash], map: "mdl_editattoauto_eleconuse_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol {
  id              Int      @id @default(autoincrement())
  enrol           String   @default("") @db.VarChar(20)
  status          Int      @default(0)
  courseid        Int
  sortorder       Int      @default(0)
  name            String?  @db.VarChar(255)
  enrolperiod     Int?     @default(0)
  enrolstartdate  Int?     @default(0)
  enrolenddate    Int?     @default(0)
  expirynotify    Boolean? @default(false)
  expirythreshold Int?     @default(0)
  notifyall       Boolean? @default(false)
  password        String?  @db.VarChar(50)
  cost            String?  @db.VarChar(20)
  currency        String?  @db.VarChar(3)
  roleid          Int?     @default(0)
  customint1      Int?
  customint2      Int?
  customint3      Int?
  customint4      Int?
  customint5      Int?
  customint6      Int?
  customint7      Int?
  customint8      Int?
  customchar1     String?  @db.VarChar(255)
  customchar2     String?  @db.VarChar(255)
  customchar3     String?  @db.VarChar(1333)
  customdec1      Decimal? @db.Decimal(12, 7)
  customdec2      Decimal? @db.Decimal(12, 7)
  customtext1     String?  @db.LongText
  customtext2     String?  @db.LongText
  customtext3     String?  @db.LongText
  customtext4     String?  @db.LongText
  timecreated     Int      @default(0)
  timemodified    Int      @default(0)

  @@index([courseid], map: "mdl_enro_cou_ix")
  @@index([enrol], map: "mdl_enro_enr_ix")
  @@index([roleid], map: "mdl_enro_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_flatfile {
  id           Int    @id @default(autoincrement())
  action       String @default("") @db.VarChar(30)
  roleid       Int
  userid       Int
  courseid     Int
  timestart    Int    @default(0)
  timeend      Int    @default(0)
  timemodified Int    @default(0)

  @@index([courseid], map: "mdl_enroflat_cou_ix")
  @@index([roleid], map: "mdl_enroflat_rol_ix")
  @@index([userid], map: "mdl_enroflat_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_app_registration {
  id                       Int     @id @default(autoincrement())
  name                     String  @default("") @db.VarChar(255)
  platformid               String? @db.LongText
  clientid                 String? @db.VarChar(1333)
  uniqueid                 String  @unique(map: "mdl_enroltiappregi_uni_uix") @default("") @db.VarChar(255)
  platformclienthash       String? @unique(map: "mdl_enroltiappregi_pla_uix") @db.VarChar(64)
  platformuniqueidhash     String? @unique(map: "mdl_enroltiappregi_pla2_uix") @db.VarChar(64)
  authenticationrequesturl String? @db.LongText
  jwksurl                  String? @db.LongText
  accesstokenurl           String? @db.LongText
  status                   Boolean @default(false)
  timecreated              Int
  timemodified             Int
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_context {
  id              Int     @id @default(autoincrement())
  contextid       String  @default("") @db.VarChar(255)
  ltideploymentid Int
  type            String? @db.LongText
  timecreated     Int
  timemodified    Int

  @@unique([ltideploymentid, contextid], map: "mdl_enrolticont_lticon_uix")
  @@index([ltideploymentid], map: "mdl_enrolticont_lti_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_deployment {
  id                Int     @id @default(autoincrement())
  name              String  @default("") @db.VarChar(255)
  deploymentid      String  @default("") @db.VarChar(255)
  platformid        Int
  legacyconsumerkey String? @db.VarChar(255)
  timecreated       Int
  timemodified      Int

  @@unique([platformid, deploymentid], map: "mdl_enroltidepl_pladep_uix")
  @@index([platformid], map: "mdl_enroltidepl_pla_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_lti2_consumer {
  id              Int     @id @default(autoincrement())
  name            String  @default("") @db.VarChar(50)
  consumerkey256  String  @unique(map: "mdl_enroltilti2cons_con_uix") @default("") @db.VarChar(255)
  consumerkey     String? @db.LongText
  secret          String  @default("") @db.VarChar(1024)
  ltiversion      String? @db.VarChar(10)
  consumername    String? @db.VarChar(255)
  consumerversion String? @db.VarChar(255)
  consumerguid    String? @db.VarChar(1024)
  profile         String? @db.LongText
  toolproxy       String? @db.LongText
  settings        String? @db.LongText
  protected       Boolean
  enabled         Boolean
  enablefrom      Int?
  enableuntil     Int?
  lastaccess      Int?
  created         Int
  updated         Int
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_lti2_context {
  id            Int     @id @default(autoincrement())
  consumerid    Int
  lticontextkey String  @default("") @db.VarChar(255)
  type          String? @db.VarChar(100)
  settings      String? @db.LongText
  created       Int
  updated       Int

  @@index([consumerid], map: "mdl_enroltilti2cont_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_lti2_nonce {
  id         Int    @id @default(autoincrement())
  consumerid Int
  value      String @default("") @db.VarChar(64)
  expires    Int

  @@index([consumerid], map: "mdl_enroltilti2nonc_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_lti2_resource_link {
  id                    Int      @id @default(autoincrement())
  contextid             Int?
  consumerid            Int?
  ltiresourcelinkkey    String   @default("") @db.VarChar(255)
  settings              String?  @db.LongText
  primaryresourcelinkid Int?
  shareapproved         Boolean?
  created               Int
  updated               Int

  @@index([consumerid], map: "mdl_enroltilti2resolink_co2_ix")
  @@index([contextid], map: "mdl_enroltilti2resolink_con_ix")
  @@index([primaryresourcelinkid], map: "mdl_enroltilti2resolink_pri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_lti2_share_key {
  id             Int     @id @default(autoincrement())
  sharekey       String  @unique(map: "mdl_enroltilti2sharkey_sha_uix") @default("") @db.VarChar(32)
  resourcelinkid Int     @unique(map: "mdl_enroltilti2sharkey_res_uix")
  autoapprove    Boolean
  expires        Int
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_lti2_tool_proxy {
  id           Int    @id @default(autoincrement())
  toolproxykey String @unique(map: "mdl_enroltilti2toolprox_to_uix") @default("") @db.VarChar(32)
  consumerid   Int
  toolproxy    String @db.LongText
  created      Int
  updated      Int

  @@index([consumerid], map: "mdl_enroltilti2toolprox_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_lti2_user_result {
  id                 Int    @id @default(autoincrement())
  resourcelinkid     Int
  ltiuserkey         String @default("") @db.VarChar(255)
  ltiresultsourcedid String @default("") @db.VarChar(1024)
  created            Int
  updated            Int

  @@index([resourcelinkid], map: "mdl_enroltilti2userresu_res_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_resource_link {
  id                    Int     @id @default(autoincrement())
  resourcelinkid        String  @default("") @db.VarChar(255)
  ltideploymentid       Int
  resourceid            Int
  lticontextid          Int?
  lineitemsservice      String? @db.VarChar(1333)
  lineitemservice       String? @db.VarChar(1333)
  lineitemscope         String? @db.VarChar(255)
  resultscope           String? @db.VarChar(255)
  scorescope            String? @db.VarChar(255)
  contextmembershipsurl String? @db.VarChar(1333)
  nrpsserviceversions   String? @db.VarChar(255)
  timecreated           Int
  timemodified          Int

  @@unique([resourcelinkid, ltideploymentid], map: "mdl_enroltiresolink_reslti_uix")
  @@index([lticontextid], map: "mdl_enroltiresolink_lti2_ix")
  @@index([ltideploymentid], map: "mdl_enroltiresolink_lti_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_tool_consumer_map {
  id         Int @id @default(autoincrement())
  toolid     Int
  consumerid Int

  @@index([consumerid], map: "mdl_enroltitoolconsmap_con_ix")
  @@index([toolid], map: "mdl_enroltitoolconsmap_too_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_tools {
  id                         Int     @id @default(autoincrement())
  enrolid                    Int
  contextid                  Int
  ltiversion                 String  @default("LTI-1p3") @db.VarChar(15)
  institution                String  @default("") @db.VarChar(40)
  lang                       String  @default("en") @db.VarChar(30)
  timezone                   String  @default("99") @db.VarChar(100)
  maxenrolled                Int     @default(0)
  maildisplay                Int     @default(2) @db.TinyInt
  city                       String  @default("") @db.VarChar(120)
  country                    String  @default("") @db.VarChar(2)
  gradesync                  Boolean @default(false)
  gradesynccompletion        Boolean @default(false)
  membersync                 Boolean @default(false)
  membersyncmode             Boolean @default(false)
  roleinstructor             Int
  rolelearner                Int
  secret                     String? @db.LongText
  uuid                       String? @unique(map: "mdl_enroltitool_uui_uix") @db.VarChar(36)
  provisioningmodelearner    Int?    @db.TinyInt
  provisioningmodeinstructor Int?    @db.TinyInt
  timecreated                Int
  timemodified               Int

  @@index([contextid], map: "mdl_enroltitool_con_ix")
  @@index([enrolid], map: "mdl_enroltitool_enr_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_user_resource_link {
  id             Int @id @default(autoincrement())
  ltiuserid      Int
  resourcelinkid Int

  @@unique([ltiuserid, resourcelinkid], map: "mdl_enroltiuserresolink_lt_uix")
  @@index([ltiuserid], map: "mdl_enroltiuserresolink_lti_ix")
  @@index([resourcelinkid], map: "mdl_enroltiuserresolink_res_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_lti_users {
  id              Int      @id @default(autoincrement())
  userid          Int
  toolid          Int
  serviceurl      String?  @db.LongText
  sourceid        String?  @db.LongText
  ltideploymentid Int?
  consumerkey     String?  @db.LongText
  consumersecret  String?  @db.LongText
  membershipsurl  String?  @db.LongText
  membershipsid   String?  @db.LongText
  lastgrade       Decimal? @db.Decimal(10, 5)
  lastaccess      Int?
  timecreated     Int?

  @@index([ltideploymentid], map: "mdl_enroltiuser_lti_ix")
  @@index([toolid], map: "mdl_enroltiuser_too_ix")
  @@index([userid], map: "mdl_enroltiuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_enrol_paypal {
  id                  Int    @id @default(autoincrement())
  business            String @default("") @db.VarChar(255)
  receiver_email      String @default("") @db.VarChar(255)
  receiver_id         String @default("") @db.VarChar(255)
  item_name           String @default("") @db.VarChar(255)
  courseid            Int    @default(0)
  userid              Int    @default(0)
  instanceid          Int    @default(0)
  memo                String @default("") @db.VarChar(255)
  tax                 String @default("") @db.VarChar(255)
  option_name1        String @default("") @db.VarChar(255)
  option_selection1_x String @default("") @db.VarChar(255)
  option_name2        String @default("") @db.VarChar(255)
  option_selection2_x String @default("") @db.VarChar(255)
  payment_status      String @default("") @db.VarChar(255)
  pending_reason      String @default("") @db.VarChar(255)
  reason_code         String @default("") @db.VarChar(30)
  txn_id              String @default("") @db.VarChar(255)
  parent_txn_id       String @default("") @db.VarChar(255)
  payment_type        String @default("") @db.VarChar(30)
  timeupdated         Int    @default(0)

  @@index([business], map: "mdl_enropayp_bus_ix")
  @@index([courseid], map: "mdl_enropayp_cou_ix")
  @@index([instanceid], map: "mdl_enropayp_ins_ix")
  @@index([receiver_email], map: "mdl_enropayp_rec_ix")
  @@index([userid], map: "mdl_enropayp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_event {
  id             Int     @id @default(autoincrement())
  name           String  @db.LongText
  description    String  @db.LongText
  format         Int     @default(0) @db.SmallInt
  categoryid     Int     @default(0)
  courseid       Int     @default(0)
  groupid        Int     @default(0)
  userid         Int     @default(0)
  repeatid       Int     @default(0)
  component      String? @db.VarChar(100)
  modulename     String  @default("") @db.VarChar(20)
  instance       Int     @default(0)
  type           Int     @default(0) @db.SmallInt
  eventtype      String  @default("") @db.VarChar(20)
  timestart      Int     @default(0)
  timeduration   Int     @default(0)
  timesort       Int?
  visible        Int     @default(1) @db.SmallInt
  uuid           String  @default("") @db.VarChar(255)
  sequence       Int     @default(1)
  timemodified   Int     @default(0)
  subscriptionid Int?
  priority       Int?
  location       String? @db.LongText

  @@index([categoryid], map: "mdl_even_cat_ix")
  @@index([component, eventtype, instance], map: "mdl_even_comeveins_ix")
  @@index([courseid], map: "mdl_even_cou_ix")
  @@index([eventtype], map: "mdl_even_eve_ix")
  @@index([groupid, courseid, categoryid, visible, userid], map: "mdl_even_grocoucatvisuse_ix")
  @@index([modulename, instance, eventtype], map: "mdl_even_modinseve_ix")
  @@index([subscriptionid], map: "mdl_even_sub_ix")
  @@index([timeduration], map: "mdl_even_tim2_ix")
  @@index([timestart], map: "mdl_even_tim_ix")
  @@index([type, timesort], map: "mdl_even_typtim_ix")
  @@index([userid], map: "mdl_even_use_ix")
  @@index([uuid], map: "mdl_even_uui_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_event_subscriptions {
  id           Int    @id @default(autoincrement())
  url          String @default("") @db.VarChar(255)
  categoryid   Int    @default(0)
  courseid     Int    @default(0)
  groupid      Int    @default(0)
  userid       Int    @default(0)
  eventtype    String @default("") @db.VarChar(20)
  pollinterval Int    @default(0)
  lastupdated  Int?
  name         String @default("") @db.VarChar(255)

  @@index([courseid], map: "mdl_evensubs_cou_ix")
  @@index([userid], map: "mdl_evensubs_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_events_handlers {
  id              Int     @id @default(autoincrement())
  eventname       String  @default("") @db.VarChar(166)
  component       String  @default("") @db.VarChar(166)
  handlerfile     String  @default("") @db.VarChar(255)
  handlerfunction String? @db.LongText
  schedule        String? @db.VarChar(255)
  status          Int     @default(0)
  internal        Int     @default(1) @db.TinyInt

  @@unique([eventname, component], map: "mdl_evenhand_evecom_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_events_queue {
  id          Int     @id @default(autoincrement())
  eventdata   String  @db.LongText
  stackdump   String? @db.LongText
  userid      Int?
  timecreated Int

  @@index([userid], map: "mdl_evenqueu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_events_queue_handlers {
  id            Int     @id @default(autoincrement())
  queuedeventid Int
  handlerid     Int
  status        Int?
  errormessage  String? @db.LongText
  timemodified  Int

  @@index([handlerid], map: "mdl_evenqueuhand_han_ix")
  @@index([queuedeventid], map: "mdl_evenqueuhand_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_external_functions {
  id           Int     @id @default(autoincrement())
  name         String  @unique(map: "mdl_extefunc_nam_uix") @default("") @db.VarChar(200)
  classname    String  @default("") @db.VarChar(100)
  methodname   String  @default("") @db.VarChar(100)
  classpath    String? @db.VarChar(255)
  component    String  @default("") @db.VarChar(100)
  capabilities String? @db.VarChar(255)
  services     String? @db.VarChar(1333)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_external_services {
  id                 Int     @id @default(autoincrement())
  name               String  @unique(map: "mdl_exteserv_nam_uix") @default("") @db.VarChar(200)
  enabled            Boolean
  requiredcapability String? @db.VarChar(150)
  restrictedusers    Boolean
  component          String? @db.VarChar(100)
  timecreated        Int
  timemodified       Int?
  shortname          String? @db.VarChar(255)
  downloadfiles      Boolean @default(false)
  uploadfiles        Boolean @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_external_services_functions {
  id                Int    @id @default(autoincrement())
  externalserviceid Int
  functionname      String @default("") @db.VarChar(200)

  @@index([externalserviceid], map: "mdl_exteservfunc_ext_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_external_services_users {
  id                Int     @id @default(autoincrement())
  externalserviceid Int
  userid            Int
  iprestriction     String? @db.VarChar(255)
  validuntil        Int?
  timecreated       Int?

  @@index([externalserviceid], map: "mdl_exteservuser_ext_ix")
  @@index([userid], map: "mdl_exteservuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_external_tokens {
  id                Int     @id @default(autoincrement())
  token             String  @default("") @db.VarChar(128)
  privatetoken      String? @db.VarChar(64)
  tokentype         Int     @db.SmallInt
  userid            Int
  externalserviceid Int
  sid               String? @db.VarChar(128)
  contextid         Int
  creatorid         Int     @default(1)
  iprestriction     String? @db.VarChar(255)
  validuntil        Int?
  timecreated       Int
  lastaccess        Int?
  name              String? @db.VarChar(255)

  @@index([contextid], map: "mdl_extetoke_con_ix")
  @@index([creatorid], map: "mdl_extetoke_cre_ix")
  @@index([externalserviceid], map: "mdl_extetoke_ext_ix")
  @@index([sid], map: "mdl_extetoke_sid_ix")
  @@index([token], map: "mdl_extetoke_tok_ix")
  @@index([userid], map: "mdl_extetoke_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_favourite {
  id           Int    @id @default(autoincrement())
  component    String @default("") @db.VarChar(100)
  itemtype     String @default("") @db.VarChar(100)
  itemid       Int
  contextid    Int
  userid       Int
  ordering     Int?
  timecreated  Int
  timemodified Int

  @@unique([component, itemtype, itemid, contextid, userid], map: "mdl_favo_comiteiteconuse_uix")
  @@index([contextid], map: "mdl_favo_con_ix")
  @@index([userid], map: "mdl_favo_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_feedback {
  id                      Int     @id @default(autoincrement())
  course                  Int     @default(0)
  name                    String  @default("") @db.VarChar(255)
  intro                   String  @db.LongText
  introformat             Int     @default(0) @db.SmallInt
  anonymous               Boolean @default(true)
  email_notification      Boolean @default(true)
  multiple_submit         Boolean @default(true)
  autonumbering           Boolean @default(true)
  site_after_submit       String  @default("") @db.VarChar(255)
  page_after_submit       String  @db.LongText
  page_after_submitformat Int     @default(0) @db.TinyInt
  publish_stats           Boolean @default(false)
  timeopen                Int     @default(0)
  timeclose               Int     @default(0)
  timemodified            Int     @default(0)
  completionsubmit        Boolean @default(false)

  @@index([course], map: "mdl_feed_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_feedback_completed {
  id                 Int     @id @default(autoincrement())
  feedback           Int     @default(0)
  userid             Int     @default(0)
  timemodified       Int     @default(0)
  random_response    Int     @default(0)
  anonymous_response Boolean @default(false)
  courseid           Int     @default(0)

  @@index([courseid], map: "mdl_feedcomp_cou_ix")
  @@index([feedback], map: "mdl_feedcomp_fee_ix")
  @@index([userid], map: "mdl_feedcomp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_feedback_completedtmp {
  id                 Int     @id @default(autoincrement())
  feedback           Int     @default(0)
  userid             Int     @default(0)
  guestid            String  @default("") @db.VarChar(255)
  timemodified       Int     @default(0)
  random_response    Int     @default(0)
  anonymous_response Boolean @default(false)
  courseid           Int     @default(0)

  @@index([feedback], map: "mdl_feedcomp_fee2_ix")
  @@index([userid], map: "mdl_feedcomp_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_feedback_item {
  id           Int     @id @default(autoincrement())
  feedback     Int     @default(0)
  template     Int     @default(0)
  name         String  @default("") @db.VarChar(255)
  label        String  @default("") @db.VarChar(255)
  presentation String  @db.LongText
  typ          String  @default("") @db.VarChar(255)
  hasvalue     Boolean @default(false)
  position     Int     @default(0) @db.SmallInt
  required     Boolean @default(false)
  dependitem   Int     @default(0)
  dependvalue  String  @default("") @db.VarChar(255)
  options      String  @default("") @db.VarChar(255)

  @@index([feedback], map: "mdl_feeditem_fee_ix")
  @@index([template], map: "mdl_feeditem_tem_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_feedback_sitecourse_map {
  id         Int @id @default(autoincrement())
  feedbackid Int @default(0)
  courseid   Int @default(0)

  @@index([courseid], map: "mdl_feedsitemap_cou_ix")
  @@index([feedbackid], map: "mdl_feedsitemap_fee_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_feedback_template {
  id       Int     @id @default(autoincrement())
  course   Int     @default(0)
  ispublic Boolean @default(false)
  name     String  @default("") @db.VarChar(255)

  @@index([course], map: "mdl_feedtemp_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_feedback_value {
  id            Int    @id @default(autoincrement())
  course_id     Int    @default(0)
  item          Int    @default(0)
  completed     Int    @default(0)
  tmp_completed Int    @default(0)
  value         String @db.LongText

  @@unique([completed, item, course_id], map: "mdl_feedvalu_comitecou_uix")
  @@index([course_id], map: "mdl_feedvalu_cou_ix")
  @@index([item], map: "mdl_feedvalu_ite_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_feedback_valuetmp {
  id            Int    @id @default(autoincrement())
  course_id     Int    @default(0)
  item          Int    @default(0)
  completed     Int    @default(0)
  tmp_completed Int    @default(0)
  value         String @db.LongText

  @@unique([completed, item, course_id], map: "mdl_feedvalu_comitecou2_uix")
  @@index([course_id], map: "mdl_feedvalu_cou2_ix")
  @@index([item], map: "mdl_feedvalu_ite2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_file_conversion {
  id            Int     @id @default(autoincrement())
  usermodified  Int
  timecreated   Int
  timemodified  Int
  sourcefileid  Int
  targetformat  String  @default("") @db.VarChar(100)
  status        Int?    @default(0)
  statusmessage String? @db.LongText
  converter     String? @db.VarChar(255)
  destfileid    Int?
  data          String? @db.LongText

  @@index([destfileid], map: "mdl_fileconv_des_ix")
  @@index([sourcefileid], map: "mdl_fileconv_sou_ix")
  @@index([usermodified], map: "mdl_fileconv_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_files {
  id              Int     @id @default(autoincrement())
  contenthash     String  @default("") @db.VarChar(40)
  pathnamehash    String  @unique(map: "mdl_file_pat_uix") @default("") @db.VarChar(40)
  contextid       Int
  component       String  @default("") @db.VarChar(100)
  filearea        String  @default("") @db.VarChar(50)
  itemid          Int
  filepath        String  @default("") @db.VarChar(255)
  filename        String  @default("") @db.VarChar(255)
  userid          Int?
  filesize        Int
  mimetype        String? @db.VarChar(100)
  status          Int     @default(0)
  source          String? @db.LongText
  author          String? @db.VarChar(255)
  license         String? @db.VarChar(255)
  timecreated     Int
  timemodified    Int
  sortorder       Int     @default(0)
  referencefileid Int?

  @@index([component, filearea, contextid, itemid], map: "mdl_file_comfilconite_ix")
  @@index([contextid], map: "mdl_file_con2_ix")
  @@index([contenthash], map: "mdl_file_con_ix")
  @@index([filename], map: "mdl_file_fil_ix")
  @@index([license], map: "mdl_file_lic_ix")
  @@index([referencefileid], map: "mdl_file_ref_ix")
  @@index([userid], map: "mdl_file_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_files_reference {
  id            Int     @id @default(autoincrement())
  repositoryid  Int
  lastsync      Int?
  reference     String? @db.LongText
  referencehash String  @default("") @db.VarChar(40)

  @@unique([referencehash, repositoryid], map: "mdl_filerefe_refrep_uix")
  @@index([repositoryid], map: "mdl_filerefe_rep_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_filter_active {
  id        Int    @id @default(autoincrement())
  filter    String @default("") @db.VarChar(32)
  contextid Int
  active    Int    @db.SmallInt
  sortorder Int    @default(0)

  @@unique([contextid, filter], map: "mdl_filtacti_confil_uix")
  @@index([contextid], map: "mdl_filtacti_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_filter_config {
  id        Int     @id @default(autoincrement())
  filter    String  @default("") @db.VarChar(32)
  contextid Int
  name      String  @default("") @db.VarChar(255)
  value     String? @db.LongText

  @@unique([contextid, filter, name], map: "mdl_filtconf_confilnam_uix")
  @@index([contextid], map: "mdl_filtconf_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_folder {
  id                 Int     @id @default(autoincrement())
  course             Int     @default(0)
  name               String  @default("") @db.VarChar(255)
  intro              String? @db.LongText
  introformat        Int     @default(0) @db.SmallInt
  revision           Int     @default(0)
  timemodified       Int     @default(0)
  display            Int     @default(0) @db.SmallInt
  showexpanded       Boolean @default(true)
  showdownloadfolder Boolean @default(true)
  forcedownload      Boolean @default(true)

  @@index([course], map: "mdl_fold_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_forum {
  id                    Int     @id @default(autoincrement())
  course                Int     @default(0)
  type                  String  @default("general") @db.VarChar(20)
  name                  String  @default("") @db.VarChar(255)
  intro                 String  @db.LongText
  introformat           Int     @default(0) @db.SmallInt
  duedate               Int     @default(0)
  cutoffdate            Int     @default(0)
  assessed              Int     @default(0)
  assesstimestart       Int     @default(0)
  assesstimefinish      Int     @default(0)
  scale                 Int     @default(0)
  grade_forum           Int     @default(0)
  grade_forum_notify    Int     @default(0) @db.SmallInt
  maxbytes              Int     @default(0)
  maxattachments        Int     @default(1)
  forcesubscribe        Boolean @default(false)
  trackingtype          Int     @default(1) @db.TinyInt
  rsstype               Int     @default(0) @db.TinyInt
  rssarticles           Int     @default(0) @db.TinyInt
  timemodified          Int     @default(0)
  warnafter             Int     @default(0)
  blockafter            Int     @default(0)
  blockperiod           Int     @default(0)
  completiondiscussions Int     @default(0)
  completionreplies     Int     @default(0)
  completionposts       Int     @default(0)
  displaywordcount      Boolean @default(false)
  lockdiscussionafter   Int     @default(0)

  @@index([course], map: "mdl_foru_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_forum_digests {
  id         Int @id @default(autoincrement())
  userid     Int
  forum      Int
  maildigest Int @default(-1) @db.TinyInt

  @@unique([forum, userid, maildigest], map: "mdl_forudige_forusemai_uix")
  @@index([forum], map: "mdl_forudige_for_ix")
  @@index([userid], map: "mdl_forudige_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_forum_discussion_subs {
  id         Int @id @default(autoincrement())
  forum      Int
  userid     Int
  discussion Int
  preference Int @default(1)

  @@unique([userid, discussion], map: "mdl_forudiscsubs_usedis_uix")
  @@index([discussion], map: "mdl_forudiscsubs_dis_ix")
  @@index([forum], map: "mdl_forudiscsubs_for_ix")
  @@index([userid], map: "mdl_forudiscsubs_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_forum_discussions {
  id           Int     @id @default(autoincrement())
  course       Int     @default(0)
  forum        Int     @default(0)
  name         String  @default("") @db.VarChar(255)
  firstpost    Int     @default(0)
  userid       Int     @default(0)
  groupid      Int     @default(-1)
  assessed     Boolean @default(true)
  timemodified Int     @default(0)
  usermodified Int     @default(0)
  timestart    Int     @default(0)
  timeend      Int     @default(0)
  pinned       Boolean @default(false)
  timelocked   Int     @default(0)

  @@index([course], map: "mdl_forudisc_cou_ix")
  @@index([forum], map: "mdl_forudisc_for_ix")
  @@index([usermodified], map: "mdl_forudisc_use2_ix")
  @@index([userid], map: "mdl_forudisc_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_forum_grades {
  id           Int      @id @default(autoincrement())
  forum        Int
  itemnumber   Int
  userid       Int
  grade        Decimal? @db.Decimal(10, 5)
  timecreated  Int
  timemodified Int

  @@unique([forum, itemnumber, userid], map: "mdl_forugrad_foriteuse_uix")
  @@index([forum], map: "mdl_forugrad_for_ix")
  @@index([userid], map: "mdl_forugrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_forum_posts {
  id             Int     @id @default(autoincrement())
  discussion     Int     @default(0)
  parent         Int     @default(0)
  userid         Int     @default(0)
  created        Int     @default(0)
  modified       Int     @default(0)
  mailed         Int     @default(0) @db.TinyInt
  subject        String  @default("") @db.VarChar(255)
  message        String  @db.LongText
  messageformat  Int     @default(0) @db.TinyInt
  messagetrust   Int     @default(0) @db.TinyInt
  attachment     String  @default("") @db.VarChar(100)
  totalscore     Int     @default(0) @db.SmallInt
  mailnow        Int     @default(0)
  deleted        Boolean @default(false)
  privatereplyto Int     @default(0)
  wordcount      Int?
  charcount      Int?

  @@index([created], map: "mdl_forupost_cre_ix")
  @@index([discussion], map: "mdl_forupost_dis_ix")
  @@index([mailed], map: "mdl_forupost_mai_ix")
  @@index([parent], map: "mdl_forupost_par_ix")
  @@index([privatereplyto], map: "mdl_forupost_pri_ix")
  @@index([userid], map: "mdl_forupost_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_forum_queue {
  id           Int @id @default(autoincrement())
  userid       Int @default(0)
  discussionid Int @default(0)
  postid       Int @default(0)
  timemodified Int @default(0)

  @@index([discussionid], map: "mdl_foruqueu_dis_ix")
  @@index([postid], map: "mdl_foruqueu_pos_ix")
  @@index([userid], map: "mdl_foruqueu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_forum_read {
  id           Int @id @default(autoincrement())
  userid       Int @default(0)
  forumid      Int @default(0)
  discussionid Int @default(0)
  postid       Int @default(0)
  firstread    Int @default(0)
  lastread     Int @default(0)

  @@index([discussionid, userid], map: "mdl_foruread_disuse_ix")
  @@index([forumid, userid], map: "mdl_foruread_foruse_ix")
  @@index([postid, userid], map: "mdl_foruread_posuse_ix")
  @@index([userid], map: "mdl_foruread_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_forum_subscriptions {
  id     Int @id @default(autoincrement())
  userid Int @default(0)
  forum  Int @default(0)

  @@unique([userid, forum], map: "mdl_forusubs_usefor_uix")
  @@index([forum], map: "mdl_forusubs_for_ix")
  @@index([userid], map: "mdl_forusubs_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_forum_track_prefs {
  id      Int @id @default(autoincrement())
  userid  Int @default(0)
  forumid Int @default(0)

  @@index([userid, forumid], map: "mdl_forutracpref_usefor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_glossary {
  id                     Int    @id @default(autoincrement())
  course                 Int    @default(0)
  name                   String @default("") @db.VarChar(255)
  intro                  String @db.LongText
  introformat            Int    @default(0) @db.SmallInt
  allowduplicatedentries Int    @default(0) @db.TinyInt
  displayformat          String @default("dictionary") @db.VarChar(50)
  mainglossary           Int    @default(0) @db.TinyInt
  showspecial            Int    @default(1) @db.TinyInt
  showalphabet           Int    @default(1) @db.TinyInt
  showall                Int    @default(1) @db.TinyInt
  allowcomments          Int    @default(0) @db.TinyInt
  allowprintview         Int    @default(1) @db.TinyInt
  usedynalink            Int    @default(1) @db.TinyInt
  defaultapproval        Int    @default(1) @db.TinyInt
  approvaldisplayformat  String @default("default") @db.VarChar(50)
  globalglossary         Int    @default(0) @db.TinyInt
  entbypage              Int    @default(10) @db.SmallInt
  editalways             Int    @default(0) @db.TinyInt
  rsstype                Int    @default(0) @db.TinyInt
  rssarticles            Int    @default(0) @db.TinyInt
  assessed               Int    @default(0)
  assesstimestart        Int    @default(0)
  assesstimefinish       Int    @default(0)
  scale                  Int    @default(0)
  timecreated            Int    @default(0)
  timemodified           Int    @default(0)
  completionentries      Int    @default(0)

  @@index([course], map: "mdl_glos_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_glossary_alias {
  id      Int    @id @default(autoincrement())
  entryid Int    @default(0)
  alias   String @default("") @db.VarChar(255)

  @@index([entryid], map: "mdl_glosalia_ent_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_glossary_categories {
  id          Int    @id @default(autoincrement())
  glossaryid  Int    @default(0)
  name        String @default("") @db.VarChar(255)
  usedynalink Int    @default(1) @db.TinyInt

  @@index([glossaryid], map: "mdl_gloscate_glo_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_glossary_entries {
  id               Int    @id @default(autoincrement())
  glossaryid       Int    @default(0)
  userid           Int    @default(0)
  concept          String @default("") @db.VarChar(255)
  definition       String @db.LongText
  definitionformat Int    @default(0) @db.TinyInt
  definitiontrust  Int    @default(0) @db.TinyInt
  attachment       String @default("") @db.VarChar(100)
  timecreated      Int    @default(0)
  timemodified     Int    @default(0)
  teacherentry     Int    @default(0) @db.TinyInt
  sourceglossaryid Int    @default(0)
  usedynalink      Int    @default(1) @db.TinyInt
  casesensitive    Int    @default(0) @db.TinyInt
  fullmatch        Int    @default(1) @db.TinyInt
  approved         Int    @default(1) @db.TinyInt

  @@index([concept], map: "mdl_glosentr_con_ix")
  @@index([glossaryid], map: "mdl_glosentr_glo_ix")
  @@index([userid], map: "mdl_glosentr_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_glossary_entries_categories {
  id         Int @id @default(autoincrement())
  categoryid Int @default(0)
  entryid    Int @default(0)

  @@index([categoryid], map: "mdl_glosentrcate_cat_ix")
  @@index([entryid], map: "mdl_glosentrcate_ent_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_glossary_formats {
  id              Int     @id @default(autoincrement())
  name            String  @default("") @db.VarChar(50)
  popupformatname String  @default("") @db.VarChar(50)
  visible         Int     @default(1) @db.TinyInt
  showgroup       Int     @default(1) @db.TinyInt
  showtabs        String? @db.VarChar(100)
  defaultmode     String  @default("") @db.VarChar(50)
  defaulthook     String  @default("") @db.VarChar(50)
  sortkey         String  @default("") @db.VarChar(50)
  sortorder       String  @default("") @db.VarChar(50)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grade_categories {
  id                  Int     @id @default(autoincrement())
  courseid            Int
  parent              Int?
  depth               Int     @default(0)
  path                String? @db.VarChar(255)
  fullname            String  @default("") @db.VarChar(255)
  aggregation         Int     @default(0)
  keephigh            Int     @default(0)
  droplow             Int     @default(0)
  aggregateonlygraded Boolean @default(false)
  aggregateoutcomes   Boolean @default(false)
  timecreated         Int
  timemodified        Int
  hidden              Int     @default(0)

  @@index([courseid], map: "mdl_gradcate_cou_ix")
  @@index([parent], map: "mdl_gradcate_par_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grade_categories_history {
  id                  Int     @id @default(autoincrement())
  action              Int     @default(0)
  oldid               Int
  source              String? @db.VarChar(255)
  timemodified        Int?
  loggeduser          Int?
  courseid            Int
  parent              Int?
  depth               Int     @default(0)
  path                String? @db.VarChar(255)
  fullname            String  @default("") @db.VarChar(255)
  aggregation         Int     @default(0)
  keephigh            Int     @default(0)
  droplow             Int     @default(0)
  aggregateonlygraded Boolean @default(false)
  aggregateoutcomes   Boolean @default(false)
  aggregatesubcats    Boolean @default(false)
  hidden              Int     @default(0)

  @@index([action], map: "mdl_gradcatehist_act_ix")
  @@index([courseid], map: "mdl_gradcatehist_cou_ix")
  @@index([loggeduser], map: "mdl_gradcatehist_log_ix")
  @@index([oldid], map: "mdl_gradcatehist_old_ix")
  @@index([parent], map: "mdl_gradcatehist_par_ix")
  @@index([timemodified], map: "mdl_gradcatehist_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grade_grades {
  id                Int      @id @default(autoincrement())
  itemid            Int
  userid            Int
  rawgrade          Decimal? @db.Decimal(10, 5)
  rawgrademax       Decimal  @default(100.00000) @db.Decimal(10, 5)
  rawgrademin       Decimal  @default(0.00000) @db.Decimal(10, 5)
  rawscaleid        Int?
  usermodified      Int?
  finalgrade        Decimal? @db.Decimal(10, 5)
  hidden            Int      @default(0)
  locked            Int      @default(0)
  locktime          Int      @default(0)
  exported          Int      @default(0)
  overridden        Int      @default(0)
  excluded          Int      @default(0)
  feedback          String?  @db.LongText
  feedbackformat    Int      @default(0)
  information       String?  @db.LongText
  informationformat Int      @default(0)
  timecreated       Int?
  timemodified      Int?
  aggregationstatus String   @default("unknown") @db.VarChar(10)
  aggregationweight Decimal? @db.Decimal(10, 5)

  @@unique([userid, itemid], map: "mdl_gradgrad_useite_uix")
  @@index([itemid], map: "mdl_gradgrad_ite_ix")
  @@index([locked, locktime], map: "mdl_gradgrad_locloc_ix")
  @@index([rawscaleid], map: "mdl_gradgrad_raw_ix")
  @@index([usermodified], map: "mdl_gradgrad_use2_ix")
  @@index([userid], map: "mdl_gradgrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grade_grades_history {
  id                Int      @id @default(autoincrement())
  action            Int      @default(0)
  oldid             Int
  source            String?  @db.VarChar(255)
  timemodified      Int?
  loggeduser        Int?
  itemid            Int
  userid            Int
  rawgrade          Decimal? @db.Decimal(10, 5)
  rawgrademax       Decimal  @default(100.00000) @db.Decimal(10, 5)
  rawgrademin       Decimal  @default(0.00000) @db.Decimal(10, 5)
  rawscaleid        Int?
  usermodified      Int?
  finalgrade        Decimal? @db.Decimal(10, 5)
  hidden            Int      @default(0)
  locked            Int      @default(0)
  locktime          Int      @default(0)
  exported          Int      @default(0)
  overridden        Int      @default(0)
  excluded          Int      @default(0)
  feedback          String?  @db.LongText
  feedbackformat    Int      @default(0)
  information       String?  @db.LongText
  informationformat Int      @default(0)

  @@index([action], map: "mdl_gradgradhist_act_ix")
  @@index([itemid], map: "mdl_gradgradhist_ite_ix")
  @@index([loggeduser], map: "mdl_gradgradhist_log_ix")
  @@index([oldid], map: "mdl_gradgradhist_old_ix")
  @@index([rawscaleid], map: "mdl_gradgradhist_raw_ix")
  @@index([timemodified], map: "mdl_gradgradhist_tim_ix")
  @@index([usermodified], map: "mdl_gradgradhist_use2_ix")
  @@index([userid], map: "mdl_gradgradhist_use_ix")
  @@index([userid, itemid, timemodified], map: "mdl_gradgradhist_useitetim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grade_import_newitem {
  id         Int    @id @default(autoincrement())
  itemname   String @default("") @db.VarChar(255)
  importcode Int
  importer   Int

  @@index([importer], map: "mdl_gradimponewi_imp_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grade_import_values {
  id                 Int      @id @default(autoincrement())
  itemid             Int?
  newgradeitem       Int?
  userid             Int
  finalgrade         Decimal? @db.Decimal(10, 5)
  feedback           String?  @db.LongText
  importcode         Int
  importer           Int?
  importonlyfeedback Boolean? @default(false)

  @@index([importer], map: "mdl_gradimpovalu_imp_ix")
  @@index([itemid], map: "mdl_gradimpovalu_ite_ix")
  @@index([newgradeitem], map: "mdl_gradimpovalu_new_ix")
  @@index([userid], map: "mdl_gradimpovalu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grade_items {
  id               Int      @id @default(autoincrement())
  courseid         Int?
  categoryid       Int?
  itemname         String?  @db.VarChar(255)
  itemtype         String   @default("") @db.VarChar(30)
  itemmodule       String?  @db.VarChar(30)
  iteminstance     Int?
  itemnumber       Int?
  iteminfo         String?  @db.LongText
  idnumber         String?  @db.VarChar(255)
  calculation      String?  @db.LongText
  gradetype        Int      @default(1) @db.SmallInt
  grademax         Decimal  @default(100.00000) @db.Decimal(10, 5)
  grademin         Decimal  @default(0.00000) @db.Decimal(10, 5)
  scaleid          Int?
  outcomeid        Int?
  gradepass        Decimal  @default(0.00000) @db.Decimal(10, 5)
  multfactor       Decimal  @default(1.00000) @db.Decimal(10, 5)
  plusfactor       Decimal  @default(0.00000) @db.Decimal(10, 5)
  aggregationcoef  Decimal  @default(0.00000) @db.Decimal(10, 5)
  aggregationcoef2 Decimal  @default(0.00000) @db.Decimal(10, 5)
  sortorder        Int      @default(0)
  display          Int      @default(0)
  decimals         Boolean?
  hidden           Int      @default(0)
  locked           Int      @default(0)
  locktime         Int      @default(0)
  needsupdate      Int      @default(0)
  weightoverride   Boolean  @default(false)
  timecreated      Int?
  timemodified     Int?

  @@index([categoryid], map: "mdl_graditem_cat_ix")
  @@index([courseid], map: "mdl_graditem_cou_ix")
  @@index([gradetype], map: "mdl_graditem_gra_ix")
  @@index([idnumber, courseid], map: "mdl_graditem_idncou_ix")
  @@index([itemtype, itemmodule, iteminstance, courseid], map: "mdl_graditem_iteiteitecou_ix")
  @@index([itemtype, needsupdate], map: "mdl_graditem_itenee_ix")
  @@index([locked, locktime], map: "mdl_graditem_locloc_ix")
  @@index([outcomeid], map: "mdl_graditem_out_ix")
  @@index([scaleid], map: "mdl_graditem_sca_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grade_items_history {
  id               Int      @id @default(autoincrement())
  action           Int      @default(0)
  oldid            Int
  source           String?  @db.VarChar(255)
  timemodified     Int?
  loggeduser       Int?
  courseid         Int?
  categoryid       Int?
  itemname         String?  @db.VarChar(255)
  itemtype         String   @default("") @db.VarChar(30)
  itemmodule       String?  @db.VarChar(30)
  iteminstance     Int?
  itemnumber       Int?
  iteminfo         String?  @db.LongText
  idnumber         String?  @db.VarChar(255)
  calculation      String?  @db.LongText
  gradetype        Int      @default(1) @db.SmallInt
  grademax         Decimal  @default(100.00000) @db.Decimal(10, 5)
  grademin         Decimal  @default(0.00000) @db.Decimal(10, 5)
  scaleid          Int?
  outcomeid        Int?
  gradepass        Decimal  @default(0.00000) @db.Decimal(10, 5)
  multfactor       Decimal  @default(1.00000) @db.Decimal(10, 5)
  plusfactor       Decimal  @default(0.00000) @db.Decimal(10, 5)
  aggregationcoef  Decimal  @default(0.00000) @db.Decimal(10, 5)
  aggregationcoef2 Decimal  @default(0.00000) @db.Decimal(10, 5)
  sortorder        Int      @default(0)
  hidden           Int      @default(0)
  locked           Int      @default(0)
  locktime         Int      @default(0)
  needsupdate      Int      @default(0)
  display          Int      @default(0)
  decimals         Boolean?
  weightoverride   Boolean  @default(false)

  @@index([action], map: "mdl_graditemhist_act_ix")
  @@index([categoryid], map: "mdl_graditemhist_cat_ix")
  @@index([courseid], map: "mdl_graditemhist_cou_ix")
  @@index([loggeduser], map: "mdl_graditemhist_log_ix")
  @@index([oldid], map: "mdl_graditemhist_old_ix")
  @@index([outcomeid], map: "mdl_graditemhist_out_ix")
  @@index([scaleid], map: "mdl_graditemhist_sca_ix")
  @@index([timemodified], map: "mdl_graditemhist_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grade_letters {
  id            Int     @id @default(autoincrement())
  contextid     Int
  lowerboundary Decimal @db.Decimal(10, 5)
  letter        String  @default("") @db.VarChar(255)

  @@unique([contextid, lowerboundary, letter], map: "mdl_gradlett_conlowlet_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grade_outcomes {
  id                Int     @id @default(autoincrement())
  courseid          Int?
  shortname         String  @default("") @db.VarChar(255)
  fullname          String  @db.LongText
  scaleid           Int?
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  timecreated       Int?
  timemodified      Int?
  usermodified      Int?

  @@unique([courseid, shortname], map: "mdl_gradoutc_cousho_uix")
  @@index([courseid], map: "mdl_gradoutc_cou_ix")
  @@index([scaleid], map: "mdl_gradoutc_sca_ix")
  @@index([usermodified], map: "mdl_gradoutc_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grade_outcomes_courses {
  id        Int @id @default(autoincrement())
  courseid  Int
  outcomeid Int

  @@unique([courseid, outcomeid], map: "mdl_gradoutccour_couout_uix")
  @@index([courseid], map: "mdl_gradoutccour_cou_ix")
  @@index([outcomeid], map: "mdl_gradoutccour_out_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grade_outcomes_history {
  id                Int     @id @default(autoincrement())
  action            Int     @default(0)
  oldid             Int
  source            String? @db.VarChar(255)
  timemodified      Int?
  loggeduser        Int?
  courseid          Int?
  shortname         String  @default("") @db.VarChar(255)
  fullname          String  @db.LongText
  scaleid           Int?
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt

  @@index([action], map: "mdl_gradoutchist_act_ix")
  @@index([courseid], map: "mdl_gradoutchist_cou_ix")
  @@index([loggeduser], map: "mdl_gradoutchist_log_ix")
  @@index([oldid], map: "mdl_gradoutchist_old_ix")
  @@index([scaleid], map: "mdl_gradoutchist_sca_ix")
  @@index([timemodified], map: "mdl_gradoutchist_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grade_settings {
  id       Int     @id @default(autoincrement())
  courseid Int
  name     String  @default("") @db.VarChar(255)
  value    String? @db.LongText

  @@unique([courseid, name], map: "mdl_gradsett_counam_uix")
  @@index([courseid], map: "mdl_gradsett_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grading_areas {
  id           Int     @id @default(autoincrement())
  contextid    Int
  component    String  @default("") @db.VarChar(100)
  areaname     String  @default("") @db.VarChar(100)
  activemethod String? @db.VarChar(100)

  @@unique([contextid, component, areaname], map: "mdl_gradarea_concomare_uix")
  @@index([contextid], map: "mdl_gradarea_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grading_definitions {
  id                Int     @id @default(autoincrement())
  areaid            Int
  method            String  @default("") @db.VarChar(100)
  name              String  @default("") @db.VarChar(255)
  description       String? @db.LongText
  descriptionformat Int?    @db.TinyInt
  status            Int     @default(0)
  copiedfromid      Int?
  timecreated       Int
  usercreated       Int
  timemodified      Int
  usermodified      Int
  timecopied        Int?    @default(0)
  options           String? @db.LongText

  @@unique([areaid, method], map: "mdl_graddefi_aremet_uix")
  @@index([areaid], map: "mdl_graddefi_are_ix")
  @@index([usercreated], map: "mdl_graddefi_use2_ix")
  @@index([usermodified], map: "mdl_graddefi_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_grading_instances {
  id             Int      @id @default(autoincrement())
  definitionid   Int
  raterid        Int
  itemid         Int?
  rawgrade       Decimal? @db.Decimal(10, 5)
  status         Int      @default(0)
  feedback       String?  @db.LongText
  feedbackformat Int?     @db.TinyInt
  timemodified   Int

  @@index([definitionid], map: "mdl_gradinst_def_ix")
  @@index([raterid], map: "mdl_gradinst_rat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_gradingform_guide_comments {
  id                Int     @id @default(autoincrement())
  definitionid      Int
  sortorder         Int
  description       String? @db.LongText
  descriptionformat Int?    @db.TinyInt

  @@index([definitionid], map: "mdl_gradguidcomm_def_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_gradingform_guide_criteria {
  id                       Int     @id @default(autoincrement())
  definitionid             Int
  sortorder                Int
  shortname                String  @default("") @db.VarChar(255)
  description              String? @db.LongText
  descriptionformat        Int?    @db.TinyInt
  descriptionmarkers       String? @db.LongText
  descriptionmarkersformat Int?    @db.TinyInt
  maxscore                 Decimal @db.Decimal(10, 5)

  @@index([definitionid], map: "mdl_gradguidcrit_def_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_gradingform_guide_fillings {
  id           Int     @id @default(autoincrement())
  instanceid   Int
  criterionid  Int
  remark       String? @db.LongText
  remarkformat Int?    @db.TinyInt
  score        Decimal @db.Decimal(10, 5)

  @@unique([instanceid, criterionid], map: "mdl_gradguidfill_inscri_uix")
  @@index([criterionid], map: "mdl_gradguidfill_cri_ix")
  @@index([instanceid], map: "mdl_gradguidfill_ins_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_gradingform_rubric_criteria {
  id                Int     @id @default(autoincrement())
  definitionid      Int
  sortorder         Int
  description       String? @db.LongText
  descriptionformat Int?    @db.TinyInt

  @@index([definitionid], map: "mdl_gradrubrcrit_def_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_gradingform_rubric_fillings {
  id           Int     @id @default(autoincrement())
  instanceid   Int
  criterionid  Int
  levelid      Int?
  remark       String? @db.LongText
  remarkformat Int?    @db.TinyInt

  @@unique([instanceid, criterionid], map: "mdl_gradrubrfill_inscri_uix")
  @@index([criterionid], map: "mdl_gradrubrfill_cri_ix")
  @@index([instanceid], map: "mdl_gradrubrfill_ins_ix")
  @@index([levelid], map: "mdl_gradrubrfill_lev_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_gradingform_rubric_levels {
  id               Int     @id @default(autoincrement())
  criterionid      Int
  score            Decimal @db.Decimal(10, 5)
  definition       String? @db.LongText
  definitionformat Int?

  @@index([criterionid], map: "mdl_gradrubrleve_cri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_groupings {
  id                Int     @id @default(autoincrement())
  courseid          Int     @default(0)
  name              String  @default("") @db.VarChar(255)
  idnumber          String  @default("") @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  configdata        String? @db.LongText
  timecreated       Int     @default(0)
  timemodified      Int     @default(0)

  @@index([courseid], map: "mdl_grou_cou2_ix")
  @@index([idnumber], map: "mdl_grou_idn2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_groupings_groups {
  id         Int @id @default(autoincrement())
  groupingid Int @default(0)
  groupid    Int @default(0)
  timeadded  Int @default(0)

  @@index([groupid], map: "mdl_grougrou_gro2_ix")
  @@index([groupingid], map: "mdl_grougrou_gro_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_groups {
  id                Int     @id @default(autoincrement())
  courseid          Int
  idnumber          String  @default("") @db.VarChar(100)
  name              String  @default("") @db.VarChar(254)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  enrolmentkey      String? @db.VarChar(50)
  picture           Int     @default(0)
  visibility        Boolean @default(false)
  participation     Boolean @default(true)
  timecreated       Int     @default(0)
  timemodified      Int     @default(0)

  @@index([courseid], map: "mdl_grou_cou_ix")
  @@index([idnumber], map: "mdl_grou_idn_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_groups_members {
  id        Int    @id @default(autoincrement())
  groupid   Int    @default(0)
  userid    Int    @default(0)
  timeadded Int    @default(0)
  component String @default("") @db.VarChar(100)
  itemid    Int    @default(0)

  @@unique([userid, groupid], map: "mdl_groumemb_usegro_uix")
  @@index([groupid], map: "mdl_groumemb_gro_ix")
  @@index([userid], map: "mdl_groumemb_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_h5p {
  id             Int     @id @default(autoincrement())
  jsoncontent    String  @db.LongText
  mainlibraryid  Int
  displayoptions Int?    @db.SmallInt
  pathnamehash   String  @default("") @db.VarChar(40)
  contenthash    String  @default("") @db.VarChar(40)
  filtered       String? @db.LongText
  timecreated    Int     @default(0)
  timemodified   Int     @default(0)

  @@index([mainlibraryid], map: "mdl_h5p_mai_ix")
  @@index([pathnamehash], map: "mdl_h5p_pat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_h5p_contents_libraries {
  id             Int     @id @default(autoincrement())
  h5pid          Int
  libraryid      Int
  dependencytype String  @default("") @db.VarChar(10)
  dropcss        Boolean
  weight         Int

  @@index([h5pid], map: "mdl_h5pcontlibr_h5p_ix")
  @@index([libraryid], map: "mdl_h5pcontlibr_lib_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_h5p_libraries {
  id               Int      @id @default(autoincrement())
  machinename      String   @default("") @db.VarChar(255)
  title            String   @default("") @db.VarChar(255)
  majorversion     Int      @db.SmallInt
  minorversion     Int      @db.SmallInt
  patchversion     Int      @db.SmallInt
  runnable         Boolean
  fullscreen       Boolean  @default(false)
  embedtypes       String   @default("") @db.VarChar(255)
  preloadedjs      String?  @db.LongText
  preloadedcss     String?  @db.LongText
  droplibrarycss   String?  @db.LongText
  semantics        String?  @db.LongText
  addto            String?  @db.LongText
  coremajor        Int?     @db.SmallInt
  coreminor        Int?     @db.SmallInt
  metadatasettings String?  @db.LongText
  tutorial         String?  @db.LongText
  example          String?  @db.LongText
  enabled          Boolean? @default(true)

  @@index([machinename, majorversion, minorversion, patchversion, runnable], map: "mdl_h5plibr_macmajminpatrun_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_h5p_libraries_cachedassets {
  id        Int    @id @default(autoincrement())
  libraryid Int
  hash      String @default("") @db.VarChar(255)

  @@index([libraryid], map: "mdl_h5plibrcach_lib_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_h5p_library_dependencies {
  id                Int    @id @default(autoincrement())
  libraryid         Int
  requiredlibraryid Int
  dependencytype    String @default("") @db.VarChar(255)

  @@index([libraryid], map: "mdl_h5plibrdepe_lib_ix")
  @@index([requiredlibraryid], map: "mdl_h5plibrdepe_req_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_h5pactivity {
  id             Int     @id @default(autoincrement())
  course         Int
  name           String  @default("") @db.VarChar(255)
  timecreated    Int
  timemodified   Int
  intro          String? @db.LongText
  introformat    Int     @default(0) @db.SmallInt
  grade          Int?    @default(0)
  displayoptions Int     @default(0) @db.SmallInt
  enabletracking Boolean @default(true)
  grademethod    Int     @default(1) @db.SmallInt
  reviewmode     Int?    @default(1) @db.SmallInt

  @@index([course], map: "mdl_h5pa_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_h5pactivity_attempts {
  id            Int      @id @default(autoincrement())
  h5pactivityid Int
  userid        Int
  timecreated   Int
  timemodified  Int
  attempt       Int      @default(1) @db.MediumInt
  rawscore      Int?     @default(0)
  maxscore      Int?     @default(0)
  scaled        Decimal  @default(0.00000) @db.Decimal(10, 5)
  duration      Int?     @default(0)
  completion    Boolean?
  success       Boolean?

  @@unique([h5pactivityid, userid, attempt], map: "mdl_h5paatte_h5puseatt_uix")
  @@index([h5pactivityid], map: "mdl_h5paatte_h5p_ix")
  @@index([h5pactivityid, timecreated], map: "mdl_h5paatte_h5ptim_ix")
  @@index([h5pactivityid, userid], map: "mdl_h5paatte_h5puse_ix")
  @@index([timecreated], map: "mdl_h5paatte_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_h5pactivity_attempts_results {
  id              Int      @id @default(autoincrement())
  attemptid       Int
  subcontent      String?  @db.VarChar(128)
  timecreated     Int
  interactiontype String?  @db.VarChar(128)
  description     String?  @db.LongText
  correctpattern  String?  @db.LongText
  response        String   @db.LongText
  additionals     String?  @db.LongText
  rawscore        Int      @default(0)
  maxscore        Int      @default(0)
  duration        Int?     @default(0)
  completion      Boolean?
  success         Boolean?

  @@index([attemptid], map: "mdl_h5paatteresu_att_ix")
  @@index([attemptid, timecreated], map: "mdl_h5paatteresu_atttim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_imscp {
  id           Int     @id @default(autoincrement())
  course       Int     @default(0)
  name         String  @default("") @db.VarChar(255)
  intro        String? @db.LongText
  introformat  Int     @default(0) @db.SmallInt
  revision     Int     @default(0)
  keepold      Int     @default(-1)
  structure    String? @db.LongText
  timemodified Int     @default(0)

  @@index([course], map: "mdl_imsc_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_infected_files {
  id              Int     @id @default(autoincrement())
  filename        String  @db.LongText
  quarantinedfile String? @db.LongText
  userid          Int
  reason          String  @db.LongText
  timecreated     Int     @default(0)

  @@index([userid], map: "mdl_infefile_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_label {
  id           Int    @id @default(autoincrement())
  course       Int    @default(0)
  name         String @default("") @db.VarChar(255)
  intro        String @db.LongText
  introformat  Int?   @default(0) @db.SmallInt
  timemodified Int    @default(0)

  @@index([course], map: "mdl_labe_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lesson {
  id                   Int      @id @default(autoincrement())
  course               Int      @default(0)
  name                 String   @default("") @db.VarChar(255)
  intro                String?  @db.LongText
  introformat          Int      @default(0) @db.SmallInt
  practice             Int      @default(0) @db.SmallInt
  modattempts          Int      @default(0) @db.SmallInt
  usepassword          Int      @default(0) @db.SmallInt
  password             String   @default("") @db.VarChar(32)
  dependency           Int      @default(0)
  conditions           String   @db.LongText
  grade                Int      @default(0)
  custom               Int      @default(0) @db.SmallInt
  ongoing              Int      @default(0) @db.SmallInt
  usemaxgrade          Int      @default(0) @db.SmallInt
  maxanswers           Int      @default(4) @db.SmallInt
  maxattempts          Int      @default(5) @db.SmallInt
  review               Int      @default(0) @db.SmallInt
  nextpagedefault      Int      @default(0) @db.SmallInt
  feedback             Int      @default(1) @db.SmallInt
  minquestions         Int      @default(0) @db.SmallInt
  maxpages             Int      @default(0) @db.SmallInt
  timelimit            Int      @default(0)
  retake               Int      @default(1) @db.SmallInt
  activitylink         Int      @default(0)
  mediafile            String   @default("") @db.VarChar(255)
  mediaheight          Int      @default(100)
  mediawidth           Int      @default(650)
  mediaclose           Int      @default(0) @db.SmallInt
  slideshow            Int      @default(0) @db.SmallInt
  width                Int      @default(640)
  height               Int      @default(480)
  bgcolor              String   @default("#FFFFFF") @db.VarChar(7)
  displayleft          Int      @default(0) @db.SmallInt
  displayleftif        Int      @default(0) @db.SmallInt
  progressbar          Int      @default(0) @db.SmallInt
  available            Int      @default(0)
  deadline             Int      @default(0)
  timemodified         Int      @default(0)
  completionendreached Boolean? @default(false)
  completiontimespent  Int?     @default(0)
  allowofflineattempts Boolean? @default(false)

  @@index([course], map: "mdl_less_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lesson_answers {
  id             Int     @id @default(autoincrement())
  lessonid       Int     @default(0)
  pageid         Int     @default(0)
  jumpto         Int     @default(0)
  grade          Int     @default(0) @db.SmallInt
  score          Int     @default(0)
  flags          Int     @default(0) @db.SmallInt
  timecreated    Int     @default(0)
  timemodified   Int     @default(0)
  answer         String? @db.LongText
  answerformat   Int     @default(0) @db.TinyInt
  response       String? @db.LongText
  responseformat Int     @default(0) @db.TinyInt

  @@index([lessonid], map: "mdl_lessansw_les_ix")
  @@index([pageid], map: "mdl_lessansw_pag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lesson_attempts {
  id         Int     @id @default(autoincrement())
  lessonid   Int     @default(0)
  pageid     Int     @default(0)
  userid     Int     @default(0)
  answerid   Int     @default(0)
  retry      Int     @default(0) @db.SmallInt
  correct    Int     @default(0)
  useranswer String? @db.LongText
  timeseen   Int     @default(0)

  @@index([answerid], map: "mdl_lessatte_ans_ix")
  @@index([lessonid], map: "mdl_lessatte_les_ix")
  @@index([pageid], map: "mdl_lessatte_pag_ix")
  @@index([userid], map: "mdl_lessatte_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lesson_branch {
  id         Int @id @default(autoincrement())
  lessonid   Int @default(0)
  userid     Int @default(0)
  pageid     Int @default(0)
  retry      Int @default(0)
  flag       Int @default(0) @db.SmallInt
  timeseen   Int @default(0)
  nextpageid Int @default(0)

  @@index([lessonid], map: "mdl_lessbran_les_ix")
  @@index([pageid], map: "mdl_lessbran_pag_ix")
  @@index([userid], map: "mdl_lessbran_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lesson_grades {
  id        Int   @id @default(autoincrement())
  lessonid  Int   @default(0)
  userid    Int   @default(0)
  grade     Float @default(0)
  late      Int   @default(0) @db.SmallInt
  completed Int   @default(0)

  @@index([lessonid], map: "mdl_lessgrad_les_ix")
  @@index([userid], map: "mdl_lessgrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lesson_overrides {
  id          Int     @id @default(autoincrement())
  lessonid    Int     @default(0)
  groupid     Int?
  userid      Int?
  available   Int?
  deadline    Int?
  timelimit   Int?
  review      Int?    @db.SmallInt
  maxattempts Int?    @db.SmallInt
  retake      Int?    @db.SmallInt
  password    String? @db.VarChar(32)

  @@index([groupid], map: "mdl_lessover_gro_ix")
  @@index([lessonid], map: "mdl_lessover_les_ix")
  @@index([userid], map: "mdl_lessover_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lesson_pages {
  id             Int    @id @default(autoincrement())
  lessonid       Int    @default(0)
  prevpageid     Int    @default(0)
  nextpageid     Int    @default(0)
  qtype          Int    @default(0) @db.SmallInt
  qoption        Int    @default(0) @db.SmallInt
  layout         Int    @default(1) @db.SmallInt
  display        Int    @default(1) @db.SmallInt
  timecreated    Int    @default(0)
  timemodified   Int    @default(0)
  title          String @default("") @db.VarChar(255)
  contents       String @db.LongText
  contentsformat Int    @default(0) @db.TinyInt

  @@index([lessonid], map: "mdl_lesspage_les_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lesson_timer {
  id                  Int      @id @default(autoincrement())
  lessonid            Int      @default(0)
  userid              Int      @default(0)
  starttime           Int      @default(0)
  lessontime          Int      @default(0)
  completed           Boolean? @default(false)
  timemodifiedoffline Int      @default(0)

  @@index([lessonid], map: "mdl_lesstime_les_ix")
  @@index([userid], map: "mdl_lesstime_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_license {
  id        Int     @id @default(autoincrement())
  shortname String? @db.VarChar(255)
  fullname  String? @db.LongText
  source    String? @db.VarChar(255)
  enabled   Boolean @default(true)
  version   Int     @default(0)
  custom    Boolean @default(false)
  sortorder Int     @default(0) @db.MediumInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lock_db {
  id          Int     @id @default(autoincrement())
  resourcekey String  @unique(map: "mdl_lockdb_res_uix") @default("") @db.VarChar(255)
  expires     Int?
  owner       String? @db.VarChar(36)

  @@index([expires], map: "mdl_lockdb_exp_ix")
  @@index([owner], map: "mdl_lockdb_own_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_log {
  id     Int    @id @default(autoincrement())
  time   Int    @default(0)
  userid Int    @default(0)
  ip     String @default("") @db.VarChar(45)
  course Int    @default(0)
  module String @default("") @db.VarChar(20)
  cmid   Int    @default(0)
  action String @default("") @db.VarChar(40)
  url    String @default("") @db.VarChar(100)
  info   String @default("") @db.VarChar(255)

  @@index([action], map: "mdl_log_act_ix")
  @@index([cmid], map: "mdl_log_cmi_ix")
  @@index([course, module, action], map: "mdl_log_coumodact_ix")
  @@index([time], map: "mdl_log_tim_ix")
  @@index([userid, course], map: "mdl_log_usecou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_log_display {
  id        Int    @id @default(autoincrement())
  module    String @default("") @db.VarChar(20)
  action    String @default("") @db.VarChar(40)
  mtable    String @default("") @db.VarChar(30)
  field     String @default("") @db.VarChar(200)
  component String @default("") @db.VarChar(100)

  @@unique([module, action], map: "mdl_logdisp_modact_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_log_queries {
  id         Int     @id @default(autoincrement())
  qtype      Int     @db.MediumInt
  sqltext    String  @db.LongText
  sqlparams  String? @db.LongText
  error      Int     @default(0) @db.MediumInt
  info       String? @db.LongText
  backtrace  String? @db.LongText
  exectime   Decimal @db.Decimal(10, 5)
  timelogged Int
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_logstore_standard_log {
  id                Int     @id @default(autoincrement())
  eventname         String  @default("") @db.VarChar(255)
  component         String  @default("") @db.VarChar(100)
  action            String  @default("") @db.VarChar(100)
  target            String  @default("") @db.VarChar(100)
  objecttable       String? @db.VarChar(50)
  objectid          Int?
  crud              String  @default("") @db.VarChar(1)
  edulevel          Boolean
  contextid         Int
  contextlevel      Int
  contextinstanceid Int
  userid            Int
  courseid          Int?
  relateduserid     Int?
  anonymous         Boolean @default(false)
  other             String? @db.LongText
  timecreated       Int
  origin            String? @db.VarChar(10)
  ip                String? @db.VarChar(45)
  realuserid        Int?

  @@index([contextid], map: "mdl_logsstanlog_con_ix")
  @@index([courseid], map: "mdl_logsstanlog_cou_ix")
  @@index([courseid, anonymous, timecreated], map: "mdl_logsstanlog_couanotim_ix")
  @@index([realuserid], map: "mdl_logsstanlog_rea_ix")
  @@index([relateduserid], map: "mdl_logsstanlog_rel_ix")
  @@index([timecreated], map: "mdl_logsstanlog_tim_ix")
  @@index([userid], map: "mdl_logsstanlog_use_ix")
  @@index([userid, contextlevel, contextinstanceid, crud, edulevel, timecreated], map: "mdl_logsstanlog_useconconcr_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lti {
  id                            Int      @id @default(autoincrement())
  course                        Int      @default(0)
  name                          String   @default("") @db.VarChar(255)
  intro                         String?  @db.LongText
  introformat                   Int?     @default(0) @db.SmallInt
  timecreated                   Int      @default(0)
  timemodified                  Int      @default(0)
  typeid                        Int?
  toolurl                       String   @db.LongText
  securetoolurl                 String?  @db.LongText
  instructorchoicesendname      Boolean?
  instructorchoicesendemailaddr Boolean?
  instructorchoiceallowroster   Boolean?
  instructorchoiceallowsetting  Boolean?
  instructorcustomparameters    String?  @db.LongText
  instructorchoiceacceptgrades  Boolean?
  grade                         Int      @default(100)
  launchcontainer               Int      @default(1) @db.TinyInt
  resourcekey                   String?  @db.VarChar(255)
  password                      String?  @db.VarChar(255)
  debuglaunch                   Boolean  @default(false)
  showtitlelaunch               Boolean  @default(false)
  showdescriptionlaunch         Boolean  @default(false)
  servicesalt                   String?  @db.VarChar(40)
  icon                          String?  @db.LongText
  secureicon                    String?  @db.LongText

  @@index([course], map: "mdl_lti_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lti_access_tokens {
  id          Int    @id @default(autoincrement())
  typeid      Int
  scope       String @db.LongText
  token       String @unique(map: "mdl_ltiaccetoke_tok_uix") @default("") @db.VarChar(128)
  validuntil  Int
  timecreated Int
  lastaccess  Int?

  @@index([typeid], map: "mdl_ltiaccetoke_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lti_coursevisible {
  id            Int     @id @default(autoincrement())
  typeid        Int
  courseid      Int
  coursevisible Boolean

  @@index([courseid], map: "mdl_lticour_cou_ix")
  @@index([typeid], map: "mdl_lticour_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lti_submission {
  id            Int     @id @default(autoincrement())
  ltiid         Int
  userid        Int
  datesubmitted Int
  dateupdated   Int
  gradepercent  Decimal @db.Decimal(10, 5)
  originalgrade Decimal @db.Decimal(10, 5)
  launchid      Int
  state         Int     @db.TinyInt

  @@index([ltiid], map: "mdl_ltisubm_lti_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lti_tool_proxies {
  id                Int     @id @default(autoincrement())
  name              String  @default("Tool Provider") @db.VarChar(255)
  regurl            String? @db.LongText
  state             Int     @default(1) @db.TinyInt
  guid              String? @unique(map: "mdl_ltitoolprox_gui_uix") @db.VarChar(255)
  secret            String? @db.VarChar(255)
  vendorcode        String? @db.VarChar(255)
  capabilityoffered String  @db.LongText
  serviceoffered    String  @db.LongText
  toolproxy         String? @db.LongText
  createdby         Int
  timecreated       Int
  timemodified      Int
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lti_tool_settings {
  id             Int    @id @default(autoincrement())
  toolproxyid    Int
  typeid         Int?
  course         Int?
  coursemoduleid Int?
  settings       String @db.LongText
  timecreated    Int
  timemodified   Int

  @@index([coursemoduleid], map: "mdl_ltitoolsett_cou2_ix")
  @@index([course], map: "mdl_ltitoolsett_cou_ix")
  @@index([toolproxyid], map: "mdl_ltitoolsett_too_ix")
  @@index([typeid], map: "mdl_ltitoolsett_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lti_types {
  id                Int     @id @default(autoincrement())
  name              String  @default("basiclti Activity") @db.VarChar(255)
  baseurl           String  @db.LongText
  tooldomain        String  @default("") @db.VarChar(255)
  state             Int     @default(2) @db.TinyInt
  course            Int
  coursevisible     Boolean @default(false)
  ltiversion        String  @default("") @db.VarChar(10)
  clientid          String? @unique(map: "mdl_ltitype_cli_uix") @db.VarChar(255)
  toolproxyid       Int?
  enabledcapability String? @db.LongText
  parameter         String? @db.LongText
  icon              String? @db.LongText
  secureicon        String? @db.LongText
  createdby         Int
  timecreated       Int
  timemodified      Int
  description       String? @db.LongText

  @@index([course], map: "mdl_ltitype_cou_ix")
  @@index([tooldomain], map: "mdl_ltitype_too_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lti_types_categories {
  id         Int @id @default(autoincrement())
  typeid     Int
  categoryid Int

  @@index([categoryid], map: "mdl_ltitypecate_cat_ix")
  @@index([typeid], map: "mdl_ltitypecate_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_lti_types_config {
  id     Int    @id @default(autoincrement())
  typeid Int
  name   String @default("") @db.VarChar(100)
  value  String @db.LongText

  @@index([typeid], map: "mdl_ltitypeconf_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_ltiservice_gradebookservices {
  id              Int     @id @default(autoincrement())
  gradeitemid     Int
  courseid        Int
  toolproxyid     Int?
  typeid          Int?
  baseurl         String? @db.LongText
  ltilinkid       Int?
  resourceid      String? @db.VarChar(512)
  tag             String? @db.VarChar(255)
  subreviewurl    String? @db.LongText
  subreviewparams String? @db.LongText

  @@index([gradeitemid, courseid], map: "mdl_ltisgrad_gracou_ix")
  @@index([ltilinkid], map: "mdl_ltisgrad_lti_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_matrix_room {
  id     Int     @id @default(autoincrement())
  commid Int
  roomid String? @db.VarChar(255)
  topic  String? @db.VarChar(255)

  @@index([commid], map: "mdl_matrroom_com_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message {
  id                  Int      @id @default(autoincrement())
  useridfrom          Int      @default(0)
  useridto            Int      @default(0)
  subject             String?  @db.LongText
  fullmessage         String?  @db.LongText
  fullmessageformat   Int?     @default(0) @db.SmallInt
  fullmessagehtml     String?  @db.LongText
  smallmessage        String?  @db.LongText
  notification        Boolean? @default(false)
  contexturl          String?  @db.LongText
  contexturlname      String?  @db.LongText
  timecreated         Int      @default(0)
  timeuserfromdeleted Int      @default(0)
  timeusertodeleted   Int      @default(0)
  component           String?  @db.VarChar(100)
  eventtype           String?  @db.VarChar(100)
  customdata          String?  @db.LongText

  @@index([useridto, timeusertodeleted, notification], map: "mdl_mess_usetimnot2_ix")
  @@index([useridfrom, timeuserfromdeleted, notification], map: "mdl_mess_usetimnot_ix")
  @@index([useridfrom, useridto, timeuserfromdeleted, timeusertodeleted], map: "mdl_mess_useusetimtim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_airnotifier_devices {
  id           Int     @id @default(autoincrement())
  userdeviceid Int     @unique(map: "mdl_messairndevi_use_uix")
  enable       Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_contact_requests {
  id              Int @id @default(autoincrement())
  userid          Int
  requesteduserid Int
  timecreated     Int

  @@unique([userid, requesteduserid], map: "mdl_messcontrequ_usereq_uix")
  @@index([requesteduserid], map: "mdl_messcontrequ_req_ix")
  @@index([userid], map: "mdl_messcontrequ_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_contacts {
  id          Int  @id @default(autoincrement())
  userid      Int
  contactid   Int
  timecreated Int?

  @@unique([userid, contactid], map: "mdl_messcont_usecon_uix")
  @@index([contactid], map: "mdl_messcont_con_ix")
  @@index([userid], map: "mdl_messcont_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_conversation_actions {
  id             Int @id @default(autoincrement())
  userid         Int
  conversationid Int
  action         Int
  timecreated    Int

  @@index([conversationid], map: "mdl_messconvacti_con_ix")
  @@index([userid], map: "mdl_messconvacti_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_conversation_members {
  id             Int @id @default(autoincrement())
  conversationid Int
  userid         Int
  timecreated    Int

  @@index([conversationid], map: "mdl_messconvmemb_con_ix")
  @@index([userid], map: "mdl_messconvmemb_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_conversations {
  id           Int     @id @default(autoincrement())
  type         Int     @default(1)
  name         String? @db.VarChar(255)
  convhash     String? @db.VarChar(40)
  component    String? @db.VarChar(100)
  itemtype     String? @db.VarChar(100)
  itemid       Int?
  contextid    Int?
  enabled      Boolean @default(false)
  timecreated  Int
  timemodified Int?

  @@index([component, itemtype, itemid, contextid], map: "mdl_messconv_comiteitecon_ix")
  @@index([contextid], map: "mdl_messconv_con2_ix")
  @@index([convhash], map: "mdl_messconv_con_ix")
  @@index([type], map: "mdl_messconv_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_email_messages {
  id             Int @id @default(autoincrement())
  useridto       Int
  conversationid Int
  messageid      Int

  @@index([conversationid], map: "mdl_messemaimess_con_ix")
  @@index([messageid], map: "mdl_messemaimess_mes_ix")
  @@index([useridto], map: "mdl_messemaimess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_popup {
  id        Int     @id @default(autoincrement())
  messageid Int
  isread    Boolean @default(false)

  @@unique([messageid, isread], map: "mdl_messpopu_mesisr_uix")
  @@index([isread], map: "mdl_messpopu_isr_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_popup_notifications {
  id             Int @id @default(autoincrement())
  notificationid Int

  @@index([notificationid], map: "mdl_messpopunoti_not_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_processors {
  id      Int     @id @default(autoincrement())
  name    String  @default("") @db.VarChar(166)
  enabled Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_providers {
  id         Int     @id @default(autoincrement())
  name       String  @default("") @db.VarChar(100)
  component  String  @default("") @db.VarChar(200)
  capability String? @db.VarChar(255)

  @@unique([component, name], map: "mdl_messprov_comnam_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_read {
  id                  Int      @id @default(autoincrement())
  useridfrom          Int      @default(0)
  useridto            Int      @default(0)
  subject             String?  @db.LongText
  fullmessage         String?  @db.LongText
  fullmessageformat   Int?     @default(0) @db.SmallInt
  fullmessagehtml     String?  @db.LongText
  smallmessage        String?  @db.LongText
  notification        Boolean? @default(false)
  contexturl          String?  @db.LongText
  contexturlname      String?  @db.LongText
  timecreated         Int      @default(0)
  timeread            Int      @default(0)
  timeuserfromdeleted Int      @default(0)
  timeusertodeleted   Int      @default(0)
  component           String?  @db.VarChar(100)
  eventtype           String?  @db.VarChar(100)

  @@index([notification, timeread], map: "mdl_messread_nottim_ix")
  @@index([useridto, timeusertodeleted, notification], map: "mdl_messread_usetimnot2_ix")
  @@index([useridfrom, timeuserfromdeleted, notification], map: "mdl_messread_usetimnot_ix")
  @@index([useridfrom, useridto, timeuserfromdeleted, timeusertodeleted], map: "mdl_messread_useusetimtim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_user_actions {
  id          Int @id @default(autoincrement())
  userid      Int
  messageid   Int
  action      Int
  timecreated Int

  @@unique([userid, messageid, action], map: "mdl_messuseracti_usemesact_uix")
  @@index([messageid], map: "mdl_messuseracti_mes_ix")
  @@index([userid], map: "mdl_messuseracti_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_message_users_blocked {
  id            Int  @id @default(autoincrement())
  userid        Int
  blockeduserid Int
  timecreated   Int?

  @@unique([userid, blockeduserid], map: "mdl_messuserbloc_useblo_uix")
  @@index([blockeduserid], map: "mdl_messuserbloc_blo_ix")
  @@index([userid], map: "mdl_messuserbloc_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_messageinbound_datakeys {
  id          Int     @id @default(autoincrement())
  handler     Int
  datavalue   Int
  datakey     String? @db.VarChar(64)
  timecreated Int
  expires     Int?

  @@unique([handler, datavalue], map: "mdl_messdata_handat_uix")
  @@index([handler], map: "mdl_messdata_han_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_messageinbound_handlers {
  id                Int     @id @default(autoincrement())
  component         String  @default("") @db.VarChar(100)
  classname         String  @unique(map: "mdl_messhand_cla_uix") @default("") @db.VarChar(255)
  defaultexpiration Int     @default(86400)
  validateaddress   Boolean @default(true)
  enabled           Boolean @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_messageinbound_messagelist {
  id          Int    @id @default(autoincrement())
  messageid   String @db.LongText
  userid      Int
  address     String @db.LongText
  timecreated Int

  @@index([userid], map: "mdl_messmess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_messages {
  id                Int     @id @default(autoincrement())
  useridfrom        Int
  conversationid    Int
  subject           String? @db.LongText
  fullmessage       String? @db.LongText
  fullmessageformat Boolean @default(false)
  fullmessagehtml   String? @db.LongText
  smallmessage      String? @db.LongText
  timecreated       Int
  fullmessagetrust  Int     @default(0) @db.TinyInt
  customdata        String? @db.LongText

  @@index([conversationid], map: "mdl_mess_con_ix")
  @@index([conversationid, timecreated], map: "mdl_mess_contim_ix")
  @@index([useridfrom], map: "mdl_mess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_mnet_application {
  id                Int    @id @default(autoincrement())
  name              String @default("") @db.VarChar(50)
  display_name      String @default("") @db.VarChar(50)
  xmlrpc_server_url String @default("") @db.VarChar(255)
  sso_land_url      String @default("") @db.VarChar(255)
  sso_jump_url      String @default("") @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_mnet_host {
  id                 Int     @id @default(autoincrement())
  deleted            Boolean @default(false)
  wwwroot            String  @default("") @db.VarChar(255)
  ip_address         String  @default("") @db.VarChar(45)
  name               String  @default("") @db.VarChar(80)
  public_key         String  @db.LongText
  public_key_expires Int     @default(0)
  transport          Int     @default(0) @db.TinyInt
  portno             Int     @default(0) @db.MediumInt
  last_connect_time  Int     @default(0)
  last_log_id        Int     @default(0)
  force_theme        Boolean @default(false)
  theme              String? @db.VarChar(100)
  applicationid      Int     @default(1)
  sslverification    Boolean @default(false)

  @@index([applicationid], map: "mdl_mnethost_app_ix")
  @@index([last_log_id], map: "mdl_mnethost_las_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_mnet_host2service {
  id        Int     @id @default(autoincrement())
  hostid    Int     @default(0)
  serviceid Int     @default(0)
  publish   Boolean @default(false)
  subscribe Boolean @default(false)

  @@unique([hostid, serviceid], map: "mdl_mnethost_hosser_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_mnet_log {
  id         Int    @id @default(autoincrement())
  hostid     Int    @default(0)
  remoteid   Int    @default(0)
  time       Int    @default(0)
  userid     Int    @default(0)
  ip         String @default("") @db.VarChar(45)
  course     Int    @default(0)
  coursename String @default("") @db.VarChar(40)
  module     String @default("") @db.VarChar(20)
  cmid       Int    @default(0)
  action     String @default("") @db.VarChar(40)
  url        String @default("") @db.VarChar(100)
  info       String @default("") @db.VarChar(255)

  @@index([hostid, userid, course], map: "mdl_mnetlog_hosusecou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_mnet_remote_rpc {
  id           Int     @id @default(autoincrement())
  functionname String  @default("") @db.VarChar(40)
  xmlrpcpath   String  @default("") @db.VarChar(80)
  plugintype   String  @default("") @db.VarChar(20)
  pluginname   String  @default("") @db.VarChar(20)
  enabled      Boolean
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_mnet_remote_service2rpc {
  id        Int @id @default(autoincrement())
  serviceid Int @default(0)
  rpcid     Int @default(0)

  @@unique([rpcid, serviceid], map: "mdl_mnetremoserv_rpcser_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_mnet_rpc {
  id           Int      @id @default(autoincrement())
  functionname String   @default("") @db.VarChar(40)
  xmlrpcpath   String   @default("") @db.VarChar(80)
  plugintype   String   @default("") @db.VarChar(20)
  pluginname   String   @default("") @db.VarChar(20)
  enabled      Boolean  @default(false)
  help         String   @db.LongText
  profile      String   @db.LongText
  filename     String   @default("") @db.VarChar(100)
  classname    String?  @db.VarChar(150)
  static       Boolean?

  @@index([enabled, xmlrpcpath], map: "mdl_mnetrpc_enaxml_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_mnet_service {
  id          Int     @id @default(autoincrement())
  name        String  @default("") @db.VarChar(40)
  description String  @default("") @db.VarChar(40)
  apiversion  String  @default("") @db.VarChar(10)
  offer       Boolean @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_mnet_service2rpc {
  id        Int @id @default(autoincrement())
  serviceid Int @default(0)
  rpcid     Int @default(0)

  @@unique([rpcid, serviceid], map: "mdl_mnetserv_rpcser_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_mnet_session {
  id              Int    @id @default(autoincrement())
  userid          Int    @default(0)
  username        String @default("") @db.VarChar(100)
  token           String @unique(map: "mdl_mnetsess_tok_uix") @default("") @db.VarChar(40)
  mnethostid      Int    @default(0)
  useragent       String @default("") @db.VarChar(40)
  confirm_timeout Int    @default(0)
  session_id      String @default("") @db.VarChar(40)
  expires         Int    @default(0)

  @@index([mnethostid], map: "mdl_mnetsess_mne_ix")
  @@index([userid], map: "mdl_mnetsess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_mnet_sso_access_control {
  id           Int    @id @default(autoincrement())
  username     String @default("") @db.VarChar(100)
  mnet_host_id Int    @default(0)
  accessctrl   String @default("allow") @db.VarChar(20)

  @@unique([mnet_host_id, username], map: "mdl_mnetssoaccecont_mneuse_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_mnetservice_enrol_courses {
  id            Int    @id @default(autoincrement())
  hostid        Int
  remoteid      Int
  categoryid    Int
  categoryname  String @default("") @db.VarChar(255)
  sortorder     Int    @default(0)
  fullname      String @default("") @db.VarChar(254)
  shortname     String @default("") @db.VarChar(100)
  idnumber      String @default("") @db.VarChar(100)
  summary       String @db.LongText
  summaryformat Int?   @default(0) @db.SmallInt
  startdate     Int
  roleid        Int
  rolename      String @default("") @db.VarChar(255)

  @@unique([hostid, remoteid], map: "mdl_mnetenrocour_hosrem_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_mnetservice_enrol_enrolments {
  id             Int    @id @default(autoincrement())
  hostid         Int
  userid         Int
  remotecourseid Int
  rolename       String @default("") @db.VarChar(255)
  enroltime      Int    @default(0)
  enroltype      String @default("") @db.VarChar(20)

  @@index([hostid], map: "mdl_mnetenroenro_hos_ix")
  @@index([userid], map: "mdl_mnetenroenro_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_modules {
  id       Int     @id @default(autoincrement())
  name     String  @default("") @db.VarChar(20)
  cron     Int     @default(0)
  lastcron Int     @default(0)
  search   String  @default("") @db.VarChar(255)
  visible  Boolean @default(true)

  @@index([name], map: "mdl_modu_nam_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_moodlenet_share_progress {
  id          Int     @id @default(autoincrement())
  type        Int     @db.TinyInt
  courseid    Int
  cmid        Int?
  userid      Int
  timecreated Int
  resourceurl String? @db.VarChar(255)
  status      Int?    @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_my_pages {
  id        Int     @id @default(autoincrement())
  userid    Int?    @default(0)
  name      String  @default("") @db.VarChar(200)
  private   Boolean @default(true)
  sortorder Int     @default(0) @db.MediumInt

  @@index([userid, private], map: "mdl_mypage_usepri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_notifications {
  id                Int     @id @default(autoincrement())
  useridfrom        Int
  useridto          Int
  subject           String? @db.LongText
  fullmessage       String? @db.LongText
  fullmessageformat Boolean @default(false)
  fullmessagehtml   String? @db.LongText
  smallmessage      String? @db.LongText
  component         String? @db.VarChar(100)
  eventtype         String? @db.VarChar(100)
  contexturl        String? @db.LongText
  contexturlname    String? @db.LongText
  timeread          Int?
  timecreated       Int
  customdata        String? @db.LongText

  @@index([useridto], map: "mdl_noti_use2_ix")
  @@index([useridfrom], map: "mdl_noti_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_oauth2_access_token {
  id           Int    @id @default(autoincrement())
  timecreated  Int
  timemodified Int
  usermodified Int
  issuerid     Int    @unique(map: "mdl_oautaccetoke_iss_uix")
  token        String @db.LongText
  expires      Int
  scope        String @db.LongText

  @@index([usermodified], map: "mdl_oautaccetoke_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_oauth2_endpoint {
  id           Int    @id @default(autoincrement())
  timecreated  Int
  timemodified Int
  usermodified Int
  name         String @default("") @db.VarChar(255)
  url          String @db.LongText
  issuerid     Int

  @@index([issuerid], map: "mdl_oautendp_iss_ix")
  @@index([usermodified], map: "mdl_oautendp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_oauth2_issuer {
  id                  Int     @id @default(autoincrement())
  timecreated         Int
  timemodified        Int
  usermodified        Int
  name                String  @default("") @db.VarChar(255)
  image               String  @db.LongText
  baseurl             String  @db.LongText
  clientid            String  @db.LongText
  clientsecret        String  @db.LongText
  loginscopes         String  @db.LongText
  loginscopesoffline  String  @db.LongText
  loginparams         String  @db.LongText
  loginparamsoffline  String  @db.LongText
  alloweddomains      String  @db.LongText
  scopessupported     String? @db.LongText
  enabled             Int     @default(1) @db.TinyInt
  showonloginpage     Int     @default(1) @db.TinyInt
  basicauth           Int     @default(0) @db.TinyInt
  sortorder           Int
  requireconfirmation Int     @default(1) @db.TinyInt
  servicetype         String? @db.VarChar(255)
  loginpagename       String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_oauth2_refresh_token {
  id           Int    @id @default(autoincrement())
  timecreated  Int
  timemodified Int
  userid       Int
  issuerid     Int
  token        String @db.LongText
  scopehash    String @default("") @db.VarChar(40)

  @@unique([userid, issuerid, scopehash], map: "mdl_oautrefrtoke_useisssco_uix")
  @@index([issuerid], map: "mdl_oautrefrtoke_iss_ix")
  @@index([userid], map: "mdl_oautrefrtoke_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_oauth2_system_account {
  id            Int     @id @default(autoincrement())
  timecreated   Int
  timemodified  Int
  usermodified  Int
  issuerid      Int     @unique(map: "mdl_oautsystacco_iss_uix")
  refreshtoken  String  @db.LongText
  grantedscopes String  @db.LongText
  email         String? @db.LongText
  username      String  @db.LongText

  @@index([usermodified], map: "mdl_oautsystacco_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_oauth2_user_field_mapping {
  id            Int    @id @default(autoincrement())
  timemodified  Int
  timecreated   Int
  usermodified  Int
  issuerid      Int
  externalfield String @default("") @db.VarChar(500)
  internalfield String @default("") @db.VarChar(64)

  @@unique([issuerid, internalfield], map: "mdl_oautuserfielmapp_issin_uix")
  @@index([issuerid], map: "mdl_oautuserfielmapp_iss_ix")
  @@index([usermodified], map: "mdl_oautuserfielmapp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_page {
  id              Int     @id @default(autoincrement())
  course          Int     @default(0)
  name            String  @default("") @db.VarChar(255)
  intro           String? @db.LongText
  introformat     Int     @default(0) @db.SmallInt
  content         String? @db.LongText
  contentformat   Int     @default(0) @db.SmallInt
  legacyfiles     Int     @default(0) @db.SmallInt
  legacyfileslast Int?
  display         Int     @default(0) @db.SmallInt
  displayoptions  String? @db.LongText
  revision        Int     @default(0)
  timemodified    Int     @default(0)

  @@index([course], map: "mdl_page_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_paygw_paypal {
  id         Int    @id @default(autoincrement())
  paymentid  Int    @unique(map: "mdl_paygpayp_pay_uix")
  pp_orderid String @default("The ID of the order in PayPal") @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_payment_accounts {
  id           Int     @id @default(autoincrement())
  name         String  @default("") @db.VarChar(255)
  idnumber     String? @db.VarChar(100)
  contextid    Int
  enabled      Boolean @default(false)
  archived     Boolean @default(false)
  timecreated  Int?
  timemodified Int?

  @@index([contextid], map: "mdl_paymacco_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_payment_gateways {
  id           Int     @id @default(autoincrement())
  accountid    Int
  gateway      String  @default("") @db.VarChar(100)
  enabled      Boolean @default(true)
  config       String? @db.LongText
  timecreated  Int
  timemodified Int

  @@index([accountid], map: "mdl_paymgate_acc_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_payments {
  id           Int    @id @default(autoincrement())
  component    String @default("") @db.VarChar(100)
  paymentarea  String @default("") @db.VarChar(50)
  itemid       Int
  userid       Int
  amount       String @default("") @db.VarChar(20)
  currency     String @default("") @db.VarChar(3)
  accountid    Int
  gateway      String @default("") @db.VarChar(100)
  timecreated  Int    @default(0)
  timemodified Int    @default(0)

  @@index([accountid], map: "mdl_paym_acc_ix")
  @@index([component, paymentarea, itemid], map: "mdl_paym_compayite_ix")
  @@index([gateway], map: "mdl_paym_gat_ix")
  @@index([userid], map: "mdl_paym_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_portfolio_instance {
  id      Int     @id @default(autoincrement())
  plugin  String  @default("") @db.VarChar(50)
  name    String  @default("") @db.VarChar(255)
  visible Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_portfolio_instance_config {
  id       Int     @id @default(autoincrement())
  instance Int
  name     String  @default("") @db.VarChar(255)
  value    String? @db.LongText

  @@index([instance], map: "mdl_portinstconf_ins_ix")
  @@index([name], map: "mdl_portinstconf_nam_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_portfolio_instance_user {
  id       Int     @id @default(autoincrement())
  instance Int
  userid   Int
  name     String  @default("") @db.VarChar(255)
  value    String? @db.LongText

  @@index([instance], map: "mdl_portinstuser_ins_ix")
  @@index([userid], map: "mdl_portinstuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_portfolio_log {
  id               Int     @id @default(autoincrement())
  userid           Int
  time             Int
  portfolio        Int
  caller_class     String  @default("") @db.VarChar(150)
  caller_file      String  @default("") @db.VarChar(255)
  caller_component String? @db.VarChar(255)
  caller_sha1      String  @default("") @db.VarChar(255)
  tempdataid       Int     @default(0)
  returnurl        String  @default("") @db.VarChar(255)
  continueurl      String  @default("") @db.VarChar(255)

  @@index([portfolio], map: "mdl_portlog_por_ix")
  @@index([tempdataid], map: "mdl_portlog_tem_ix")
  @@index([userid], map: "mdl_portlog_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_portfolio_mahara_queue {
  id         Int    @id @default(autoincrement())
  transferid Int
  token      String @default("") @db.VarChar(50)

  @@index([token], map: "mdl_portmahaqueu_tok_ix")
  @@index([transferid], map: "mdl_portmahaqueu_tra_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_portfolio_tempdata {
  id         Int     @id @default(autoincrement())
  data       String? @db.LongText
  expirytime Int
  userid     Int
  instance   Int?    @default(0)
  queued     Boolean @default(false)

  @@index([instance], map: "mdl_porttemp_ins_ix")
  @@index([userid], map: "mdl_porttemp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_post {
  id             Int     @id @default(autoincrement())
  module         String  @default("") @db.VarChar(20)
  userid         Int     @default(0)
  courseid       Int     @default(0)
  groupid        Int     @default(0)
  moduleid       Int     @default(0)
  coursemoduleid Int     @default(0)
  subject        String  @default("") @db.VarChar(128)
  summary        String? @db.LongText
  content        String? @db.LongText
  uniquehash     String  @default("") @db.VarChar(255)
  rating         Int     @default(0)
  format         Int     @default(0)
  summaryformat  Int     @default(0) @db.TinyInt
  attachment     String? @db.VarChar(100)
  publishstate   String  @default("draft") @db.VarChar(20)
  lastmodified   Int     @default(0)
  created        Int     @default(0)
  usermodified   Int?

  @@unique([id, userid], map: "mdl_post_iduse_uix")
  @@index([coursemoduleid], map: "mdl_post_cou2_ix")
  @@index([courseid], map: "mdl_post_cou_ix")
  @@index([lastmodified], map: "mdl_post_las_ix")
  @@index([module], map: "mdl_post_mod_ix")
  @@index([subject], map: "mdl_post_sub_ix")
  @@index([usermodified], map: "mdl_post_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_profiling {
  id                 Int    @id @default(autoincrement())
  runid              String @unique(map: "mdl_prof_run_uix") @default("") @db.VarChar(32)
  url                String @default("") @db.VarChar(255)
  data               String @db.LongText
  totalexecutiontime Int
  totalcputime       Int
  totalcalls         Int
  totalmemory        Int
  runreference       Int    @default(0) @db.TinyInt
  runcomment         String @default("") @db.VarChar(255)
  timecreated        Int

  @@index([timecreated, runreference], map: "mdl_prof_timrun_ix")
  @@index([url, runreference], map: "mdl_prof_urlrun_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_qtype_ddimageortext {
  id                             Int    @id @default(autoincrement())
  questionid                     Int    @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt

  @@index([questionid], map: "mdl_qtypddim_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_qtype_ddimageortext_drags {
  id         Int    @id @default(autoincrement())
  questionid Int    @default(0)
  no         Int    @default(0)
  draggroup  Int    @default(0)
  infinite   Int    @default(0) @db.SmallInt
  label      String @db.LongText

  @@index([questionid], map: "mdl_qtypddimdrag_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_qtype_ddimageortext_drops {
  id         Int    @id @default(autoincrement())
  questionid Int    @default(0)
  no         Int    @default(0)
  xleft      Int    @default(0)
  ytop       Int    @default(0)
  choice     Int    @default(0)
  label      String @db.LongText

  @@index([questionid], map: "mdl_qtypddimdrop_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_qtype_ddmarker {
  id                             Int    @id @default(autoincrement())
  questionid                     Int    @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt
  showmisplaced                  Int    @default(0) @db.SmallInt

  @@index([questionid], map: "mdl_qtypddma_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_qtype_ddmarker_drags {
  id         Int    @id @default(autoincrement())
  questionid Int    @default(0)
  no         Int    @default(0)
  label      String @db.LongText
  infinite   Int    @default(0) @db.SmallInt
  noofdrags  Int    @default(1)

  @@index([questionid], map: "mdl_qtypddmadrag_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_qtype_ddmarker_drops {
  id         Int     @id @default(autoincrement())
  questionid Int     @default(0)
  no         Int     @default(0)
  shape      String? @db.VarChar(255)
  coords     String  @db.LongText
  choice     Int     @default(0)

  @@index([questionid], map: "mdl_qtypddmadrop_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_qtype_essay_options {
  id                     Int     @id @default(autoincrement())
  questionid             Int     @unique(map: "mdl_qtypessaopti_que_uix")
  responseformat         String  @default("editor") @db.VarChar(16)
  responserequired       Int     @default(1) @db.TinyInt
  responsefieldlines     Int     @default(15) @db.SmallInt
  minwordlimit           Int?
  maxwordlimit           Int?
  attachments            Int     @default(0) @db.SmallInt
  attachmentsrequired    Int     @default(0) @db.SmallInt
  graderinfo             String? @db.LongText
  graderinfoformat       Int     @default(0) @db.SmallInt
  responsetemplate       String? @db.LongText
  responsetemplateformat Int     @default(0) @db.SmallInt
  maxbytes               Int     @default(0)
  filetypeslist          String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_qtype_match_options {
  id                             Int    @id @default(autoincrement())
  questionid                     Int    @unique(map: "mdl_qtypmatcopti_que_uix") @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_qtype_match_subquestions {
  id                 Int    @id @default(autoincrement())
  questionid         Int    @default(0)
  questiontext       String @db.LongText
  questiontextformat Int    @default(0) @db.TinyInt
  answertext         String @default("") @db.VarChar(255)

  @@index([questionid], map: "mdl_qtypmatcsubq_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_qtype_multichoice_options {
  id                             Int    @id @default(autoincrement())
  questionid                     Int    @unique(map: "mdl_qtypmultopti_que_uix") @default(0)
  layout                         Int    @default(0) @db.SmallInt
  single                         Int    @default(0) @db.SmallInt
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  answernumbering                String @default("abc") @db.VarChar(10)
  shownumcorrect                 Int    @default(0) @db.TinyInt
  showstandardinstruction        Int    @default(1) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_qtype_randomsamatch_options {
  id                             Int    @id @default(autoincrement())
  questionid                     Int    @unique(map: "mdl_qtyprandopti_que_uix") @default(0)
  choose                         Int    @default(4)
  subcats                        Int    @default(1) @db.TinyInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_qtype_shortanswer_options {
  id         Int @id @default(autoincrement())
  questionid Int @unique(map: "mdl_qtypshoropti_que_uix") @default(0)
  usecase    Int @default(0) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question {
  id                    Int     @id @default(autoincrement())
  parent                Int     @default(0)
  name                  String  @default("") @db.VarChar(255)
  questiontext          String  @db.LongText
  questiontextformat    Int     @default(0) @db.TinyInt
  generalfeedback       String  @db.LongText
  generalfeedbackformat Int     @default(0) @db.TinyInt
  defaultmark           Decimal @default(1.0000000) @db.Decimal(12, 7)
  penalty               Decimal @default(0.3333333) @db.Decimal(12, 7)
  qtype                 String  @default("") @db.VarChar(20)
  length                Int     @default(1)
  stamp                 String  @default("") @db.VarChar(255)
  timecreated           Int     @default(0)
  timemodified          Int     @default(0)
  createdby             Int?
  modifiedby            Int?

  @@index([createdby], map: "mdl_ques_cre_ix")
  @@index([modifiedby], map: "mdl_ques_mod_ix")
  @@index([parent], map: "mdl_ques_par_ix")
  @@index([qtype], map: "mdl_ques_qty_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_answers {
  id             Int     @id @default(autoincrement())
  question       Int     @default(0)
  answer         String  @db.LongText
  answerformat   Int     @default(0) @db.TinyInt
  fraction       Decimal @default(0.0000000) @db.Decimal(12, 7)
  feedback       String  @db.LongText
  feedbackformat Int     @default(0) @db.TinyInt

  @@index([question], map: "mdl_quesansw_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_attempt_step_data {
  id            Int     @id @default(autoincrement())
  attemptstepid Int
  name          String  @default("") @db.VarChar(32)
  value         String? @db.LongText

  @@index([attemptstepid], map: "mdl_quesattestepdata_att_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_attempt_steps {
  id                Int      @id @default(autoincrement())
  questionattemptid Int
  sequencenumber    Int
  state             String   @default("") @db.VarChar(13)
  fraction          Decimal? @db.Decimal(12, 7)
  timecreated       Int
  userid            Int?

  @@unique([questionattemptid, sequencenumber], map: "mdl_quesattestep_queseq_uix")
  @@index([questionattemptid], map: "mdl_quesattestep_que_ix")
  @@index([userid], map: "mdl_quesattestep_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_attempts {
  id              Int     @id @default(autoincrement())
  questionusageid Int
  slot            Int
  behaviour       String  @default("") @db.VarChar(32)
  questionid      Int
  variant         Int     @default(1)
  maxmark         Decimal @db.Decimal(12, 7)
  minfraction     Decimal @db.Decimal(12, 7)
  maxfraction     Decimal @default(1.0000000) @db.Decimal(12, 7)
  flagged         Boolean @default(false)
  questionsummary String? @db.LongText
  rightanswer     String? @db.LongText
  responsesummary String? @db.LongText
  timemodified    Int

  @@unique([questionusageid, slot], map: "mdl_quesatte_queslo_uix")
  @@index([behaviour], map: "mdl_quesatte_beh_ix")
  @@index([questionusageid], map: "mdl_quesatte_que2_ix")
  @@index([questionid], map: "mdl_quesatte_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_bank_entries {
  id                 Int     @id @default(autoincrement())
  questioncategoryid Int     @default(0)
  idnumber           String? @db.VarChar(100)
  ownerid            Int?

  @@unique([questioncategoryid, idnumber], map: "mdl_quesbankentr_queidn_uix")
  @@index([ownerid], map: "mdl_quesbankentr_own_ix")
  @@index([questioncategoryid], map: "mdl_quesbankentr_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_calculated {
  id                  Int    @id @default(autoincrement())
  question            Int    @default(0)
  answer              Int    @default(0)
  tolerance           String @default("0.0") @db.VarChar(20)
  tolerancetype       Int    @default(1)
  correctanswerlength Int    @default(2)
  correctanswerformat Int    @default(2)

  @@index([answer], map: "mdl_quescalc_ans_ix")
  @@index([question], map: "mdl_quescalc_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_calculated_options {
  id                             Int     @id @default(autoincrement())
  question                       Int     @default(0)
  synchronize                    Int     @default(0) @db.TinyInt
  single                         Int     @default(0) @db.SmallInt
  shuffleanswers                 Int     @default(0) @db.SmallInt
  correctfeedback                String? @db.LongText
  correctfeedbackformat          Int     @default(0) @db.TinyInt
  partiallycorrectfeedback       String? @db.LongText
  partiallycorrectfeedbackformat Int     @default(0) @db.TinyInt
  incorrectfeedback              String? @db.LongText
  incorrectfeedbackformat        Int     @default(0) @db.TinyInt
  answernumbering                String  @default("abc") @db.VarChar(10)
  shownumcorrect                 Int     @default(0) @db.TinyInt

  @@index([question], map: "mdl_quescalcopti_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_categories {
  id         Int     @id @default(autoincrement())
  name       String  @default("") @db.VarChar(255)
  contextid  Int     @default(0)
  info       String  @db.LongText
  infoformat Int     @default(0) @db.TinyInt
  stamp      String  @default("") @db.VarChar(255)
  parent     Int     @default(0)
  sortorder  Int     @default(999)
  idnumber   String? @db.VarChar(100)

  @@unique([contextid, idnumber], map: "mdl_quescate_conidn_uix")
  @@unique([contextid, stamp], map: "mdl_quescate_consta_uix")
  @@index([contextid], map: "mdl_quescate_con_ix")
  @@index([parent], map: "mdl_quescate_par_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_dataset_definitions {
  id        Int    @id @default(autoincrement())
  category  Int    @default(0)
  name      String @default("") @db.VarChar(255)
  type      Int    @default(0)
  options   String @default("") @db.VarChar(255)
  itemcount Int    @default(0)

  @@index([category], map: "mdl_quesdatadefi_cat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_dataset_items {
  id         Int    @id @default(autoincrement())
  definition Int    @default(0)
  itemnumber Int    @default(0)
  value      String @default("") @db.VarChar(255)

  @@index([definition], map: "mdl_quesdataitem_def_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_datasets {
  id                Int @id @default(autoincrement())
  question          Int @default(0)
  datasetdefinition Int @default(0)

  @@index([datasetdefinition], map: "mdl_quesdata_dat_ix")
  @@index([question], map: "mdl_quesdata_que_ix")
  @@index([question, datasetdefinition], map: "mdl_quesdata_quedat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_ddwtos {
  id                             Int    @id @default(autoincrement())
  questionid                     Int    @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt

  @@index([questionid], map: "mdl_quesddwt_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_gapselect {
  id                             Int    @id @default(autoincrement())
  questionid                     Int    @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt

  @@index([questionid], map: "mdl_quesgaps_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_hints {
  id             Int      @id @default(autoincrement())
  questionid     Int
  hint           String   @db.LongText
  hintformat     Int      @default(0) @db.SmallInt
  shownumcorrect Boolean?
  clearwrong     Boolean?
  options        String?  @db.VarChar(255)

  @@index([questionid], map: "mdl_queshint_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_multianswer {
  id       Int    @id @default(autoincrement())
  question Int    @default(0)
  sequence String @db.LongText

  @@index([question], map: "mdl_quesmult_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_numerical {
  id        Int    @id @default(autoincrement())
  question  Int    @default(0)
  answer    Int    @default(0)
  tolerance String @default("0.0") @db.VarChar(255)

  @@index([answer], map: "mdl_quesnume_ans_ix")
  @@index([question], map: "mdl_quesnume_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_numerical_options {
  id              Int     @id @default(autoincrement())
  question        Int     @default(0)
  showunits       Int     @default(0) @db.SmallInt
  unitsleft       Int     @default(0) @db.SmallInt
  unitgradingtype Int     @default(0) @db.SmallInt
  unitpenalty     Decimal @default(0.1000000) @db.Decimal(12, 7)

  @@index([question], map: "mdl_quesnumeopti_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_numerical_units {
  id         Int     @id @default(autoincrement())
  question   Int     @default(0)
  multiplier Decimal @default(1.0000000000000000000) @db.Decimal(38, 19)
  unit       String  @default("") @db.VarChar(50)

  @@unique([question, unit], map: "mdl_quesnumeunit_queuni_uix")
  @@index([question], map: "mdl_quesnumeunit_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_references {
  id                  Int     @id @default(autoincrement())
  usingcontextid      Int     @default(0)
  component           String? @db.VarChar(100)
  questionarea        String? @db.VarChar(50)
  itemid              Int?
  questionbankentryid Int     @default(0)
  version             Int?

  @@unique([usingcontextid, component, questionarea, itemid], map: "mdl_quesrefe_usicomqueite_uix")
  @@index([questionbankentryid], map: "mdl_quesrefe_que_ix")
  @@index([usingcontextid], map: "mdl_quesrefe_usi_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_response_analysis {
  id           Int     @id @default(autoincrement())
  hashcode     String  @default("") @db.VarChar(40)
  whichtries   String  @default("") @db.VarChar(255)
  timemodified Int
  questionid   Int
  variant      Int?
  subqid       String  @default("") @db.VarChar(100)
  aid          String? @db.VarChar(100)
  response     String? @db.LongText
  credit       Decimal @db.Decimal(15, 5)

  @@index([questionid], map: "mdl_quesrespanal_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_response_count {
  id         Int @id @default(autoincrement())
  analysisid Int
  try        Int
  rcount     Int

  @@index([analysisid], map: "mdl_quesrespcoun_ana_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_set_references {
  id                 Int     @id @default(autoincrement())
  usingcontextid     Int     @default(0)
  component          String? @db.VarChar(100)
  questionarea       String? @db.VarChar(50)
  itemid             Int?
  questionscontextid Int     @default(0)
  filtercondition    String? @db.LongText

  @@unique([usingcontextid, component, questionarea, itemid], map: "mdl_quessetrefe_usicomquei_uix")
  @@index([questionscontextid], map: "mdl_quessetrefe_que_ix")
  @@index([usingcontextid], map: "mdl_quessetrefe_usi_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_statistics {
  id                       Int      @id @default(autoincrement())
  hashcode                 String   @default("") @db.VarChar(40)
  timemodified             Int
  questionid               Int
  slot                     Int?
  subquestion              Int      @db.SmallInt
  variant                  Int?
  s                        Int      @default(0)
  effectiveweight          Decimal? @db.Decimal(15, 5)
  negcovar                 Int      @default(0) @db.TinyInt
  discriminationindex      Decimal? @db.Decimal(15, 5)
  discriminativeefficiency Decimal? @db.Decimal(15, 5)
  sd                       Decimal? @db.Decimal(15, 10)
  facility                 Decimal? @db.Decimal(15, 10)
  subquestions             String?  @db.LongText
  maxmark                  Decimal? @db.Decimal(12, 7)
  positions                String?  @db.LongText
  randomguessscore         Decimal? @db.Decimal(12, 7)

  @@index([questionid], map: "mdl_quesstat_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_truefalse {
  id                      Int @id @default(autoincrement())
  question                Int @default(0)
  trueanswer              Int @default(0)
  falseanswer             Int @default(0)
  showstandardinstruction Int @default(1) @db.TinyInt

  @@index([question], map: "mdl_questrue_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_usages {
  id                 Int    @id @default(autoincrement())
  contextid          Int
  component          String @default("") @db.VarChar(255)
  preferredbehaviour String @default("") @db.VarChar(32)

  @@index([contextid], map: "mdl_quesusag_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_question_versions {
  id                  Int    @id @default(autoincrement())
  questionbankentryid Int    @default(0)
  version             Int    @default(1)
  questionid          Int    @default(0)
  status              String @default("ready") @db.VarChar(10)

  @@index([questionid], map: "mdl_quesvers_que2_ix")
  @@index([questionbankentryid], map: "mdl_quesvers_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_quiz {
  id                          Int      @id @default(autoincrement())
  course                      Int      @default(0)
  name                        String   @default("") @db.VarChar(255)
  intro                       String   @db.LongText
  introformat                 Int      @default(0) @db.SmallInt
  timeopen                    Int      @default(0)
  timeclose                   Int      @default(0)
  timelimit                   Int      @default(0)
  overduehandling             String   @default("autoabandon") @db.VarChar(16)
  graceperiod                 Int      @default(0)
  preferredbehaviour          String   @default("") @db.VarChar(32)
  canredoquestions            Int      @default(0) @db.SmallInt
  attempts                    Int      @default(0) @db.MediumInt
  attemptonlast               Int      @default(0) @db.SmallInt
  grademethod                 Int      @default(1) @db.SmallInt
  decimalpoints               Int      @default(2) @db.SmallInt
  questiondecimalpoints       Int      @default(-1) @db.SmallInt
  reviewattempt               Int      @default(0) @db.MediumInt
  reviewcorrectness           Int      @default(0) @db.MediumInt
  reviewmaxmarks              Int      @default(0) @db.MediumInt
  reviewmarks                 Int      @default(0) @db.MediumInt
  reviewspecificfeedback      Int      @default(0) @db.MediumInt
  reviewgeneralfeedback       Int      @default(0) @db.MediumInt
  reviewrightanswer           Int      @default(0) @db.MediumInt
  reviewoverallfeedback       Int      @default(0) @db.MediumInt
  questionsperpage            Int      @default(0)
  navmethod                   String   @default("free") @db.VarChar(16)
  shuffleanswers              Int      @default(0) @db.SmallInt
  sumgrades                   Decimal  @default(0.00000) @db.Decimal(10, 5)
  grade                       Decimal  @default(0.00000) @db.Decimal(10, 5)
  timecreated                 Int      @default(0)
  timemodified                Int      @default(0)
  password                    String   @default("") @db.VarChar(255)
  subnet                      String   @default("") @db.VarChar(255)
  browsersecurity             String   @default("") @db.VarChar(32)
  delay1                      Int      @default(0)
  delay2                      Int      @default(0)
  showuserpicture             Int      @default(0) @db.SmallInt
  showblocks                  Int      @default(0) @db.SmallInt
  completionattemptsexhausted Boolean? @default(false)
  completionminattempts       Int      @default(0)
  allowofflineattempts        Boolean? @default(false)

  @@index([course], map: "mdl_quiz_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_quiz_attempts {
  id                         Int      @id @default(autoincrement())
  quiz                       Int      @default(0)
  userid                     Int      @default(0)
  attempt                    Int      @default(0) @db.MediumInt
  uniqueid                   Int      @unique(map: "mdl_quizatte_uni_uix") @default(0)
  layout                     String   @db.LongText
  currentpage                Int      @default(0)
  preview                    Int      @default(0) @db.SmallInt
  state                      String   @default("inprogress") @db.VarChar(16)
  timestart                  Int      @default(0)
  timefinish                 Int      @default(0)
  timemodified               Int      @default(0)
  timemodifiedoffline        Int      @default(0)
  timecheckstate             Int?     @default(0)
  sumgrades                  Decimal? @db.Decimal(10, 5)
  gradednotificationsenttime Int?

  @@unique([quiz, userid, attempt], map: "mdl_quizatte_quiuseatt_uix")
  @@index([quiz], map: "mdl_quizatte_qui_ix")
  @@index([state, timecheckstate], map: "mdl_quizatte_statim_ix")
  @@index([userid], map: "mdl_quizatte_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_quiz_feedback {
  id                 Int     @id @default(autoincrement())
  quizid             Int     @default(0)
  feedbacktext       String  @db.LongText
  feedbacktextformat Int     @default(0) @db.TinyInt
  mingrade           Decimal @default(0.00000) @db.Decimal(10, 5)
  maxgrade           Decimal @default(0.00000) @db.Decimal(10, 5)

  @@index([quizid], map: "mdl_quizfeed_qui_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_quiz_grades {
  id           Int     @id @default(autoincrement())
  quiz         Int     @default(0)
  userid       Int     @default(0)
  grade        Decimal @default(0.00000) @db.Decimal(10, 5)
  timemodified Int     @default(0)

  @@index([quiz], map: "mdl_quizgrad_qui_ix")
  @@index([userid], map: "mdl_quizgrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_quiz_overrides {
  id        Int     @id @default(autoincrement())
  quiz      Int     @default(0)
  groupid   Int?
  userid    Int?
  timeopen  Int?
  timeclose Int?
  timelimit Int?
  attempts  Int?    @db.MediumInt
  password  String? @db.VarChar(255)

  @@index([groupid], map: "mdl_quizover_gro_ix")
  @@index([quiz], map: "mdl_quizover_qui_ix")
  @@index([userid], map: "mdl_quizover_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_quiz_overview_regrades {
  id              Int      @id @default(autoincrement())
  questionusageid Int
  slot            Int
  newfraction     Decimal? @db.Decimal(12, 7)
  oldfraction     Decimal? @db.Decimal(12, 7)
  regraded        Int      @db.SmallInt
  timemodified    Int

  @@index([questionusageid, slot], map: "mdl_quizoverregr_queslo_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_quiz_reports {
  id           Int     @id @default(autoincrement())
  name         String? @unique(map: "mdl_quizrepo_nam_uix") @db.VarChar(255)
  displayorder Int
  capability   String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_quiz_sections {
  id               Int     @id @default(autoincrement())
  quizid           Int
  firstslot        Int
  heading          String? @db.VarChar(1333)
  shufflequestions Int     @default(0) @db.SmallInt

  @@unique([quizid, firstslot], map: "mdl_quizsect_quifir_uix")
  @@index([quizid], map: "mdl_quizsect_qui_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_quiz_slots {
  id              Int     @id @default(autoincrement())
  slot            Int
  quizid          Int     @default(0)
  page            Int
  displaynumber   String? @db.VarChar(16)
  requireprevious Int     @default(0) @db.SmallInt
  maxmark         Decimal @default(0.0000000) @db.Decimal(12, 7)

  @@unique([quizid, slot], map: "mdl_quizslot_quislo_uix")
  @@index([quizid], map: "mdl_quizslot_qui_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_quiz_statistics {
  id                   Int      @id @default(autoincrement())
  hashcode             String   @default("") @db.VarChar(40)
  whichattempts        Int      @db.SmallInt
  timemodified         Int
  firstattemptscount   Int
  highestattemptscount Int
  lastattemptscount    Int
  allattemptscount     Int
  firstattemptsavg     Decimal? @db.Decimal(15, 5)
  highestattemptsavg   Decimal? @db.Decimal(15, 5)
  lastattemptsavg      Decimal? @db.Decimal(15, 5)
  allattemptsavg       Decimal? @db.Decimal(15, 5)
  median               Decimal? @db.Decimal(15, 5)
  standarddeviation    Decimal? @db.Decimal(15, 5)
  skewness             Decimal? @db.Decimal(15, 10)
  kurtosis             Decimal? @db.Decimal(15, 5)
  cic                  Decimal? @db.Decimal(15, 10)
  errorratio           Decimal? @db.Decimal(15, 10)
  standarderror        Decimal? @db.Decimal(15, 10)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_quizaccess_seb_quizsettings {
  id                     Int      @id @default(autoincrement())
  quizid                 Int      @unique(map: "mdl_quizsebquiz_qui_uix")
  cmid                   Int      @unique(map: "mdl_quizsebquiz_cmi_uix")
  templateid             Int
  requiresafeexambrowser Boolean
  showsebtaskbar         Boolean?
  showwificontrol        Boolean?
  showreloadbutton       Boolean?
  showtime               Boolean?
  showkeyboardlayout     Boolean?
  allowuserquitseb       Boolean?
  quitpassword           String?  @db.LongText
  linkquitseb            String?  @db.LongText
  userconfirmquit        Boolean?
  enableaudiocontrol     Boolean?
  muteonstartup          Boolean?
  allowspellchecking     Boolean?
  allowreloadinexam      Boolean?
  activateurlfiltering   Boolean?
  filterembeddedcontent  Boolean?
  expressionsallowed     String?  @db.LongText
  regexallowed           String?  @db.LongText
  expressionsblocked     String?  @db.LongText
  regexblocked           String?  @db.LongText
  allowedbrowserexamkeys String?  @db.LongText
  showsebdownloadlink    Boolean?
  usermodified           Int      @default(0)
  timecreated            Int      @default(0)
  timemodified           Int      @default(0)

  @@index([templateid], map: "mdl_quizsebquiz_tem_ix")
  @@index([usermodified], map: "mdl_quizsebquiz_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_quizaccess_seb_template {
  id           Int     @id @default(autoincrement())
  name         String  @default("") @db.VarChar(255)
  description  String  @db.LongText
  content      String  @db.LongText
  enabled      Boolean
  sortorder    Int
  usermodified Int     @default(0)
  timecreated  Int     @default(0)
  timemodified Int     @default(0)

  @@index([usermodified], map: "mdl_quizsebtemp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_rating {
  id           Int    @id @default(autoincrement())
  contextid    Int
  component    String @default("") @db.VarChar(100)
  ratingarea   String @default("") @db.VarChar(50)
  itemid       Int
  scaleid      Int
  rating       Int
  userid       Int
  timecreated  Int
  timemodified Int

  @@index([component, ratingarea, contextid, itemid], map: "mdl_rati_comratconite_ix")
  @@index([contextid], map: "mdl_rati_con_ix")
  @@index([scaleid], map: "mdl_rati_sca_ix")
  @@index([userid], map: "mdl_rati_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_registration_hubs {
  id           Int     @id @default(autoincrement())
  token        String  @default("") @db.VarChar(255)
  hubname      String  @default("") @db.VarChar(255)
  huburl       String  @default("") @db.VarChar(255)
  confirmed    Boolean @default(false)
  secret       String? @db.VarChar(255)
  timemodified Int     @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_reportbuilder_audience {
  id           Int     @id @default(autoincrement())
  reportid     Int
  heading      String? @db.VarChar(255)
  classname    String  @default("") @db.VarChar(255)
  configdata   String  @db.LongText
  usercreated  Int     @default(0)
  usermodified Int     @default(0)
  timecreated  Int     @default(0)
  timemodified Int     @default(0)

  @@index([reportid], map: "mdl_repoaudi_rep_ix")
  @@index([usermodified], map: "mdl_repoaudi_use2_ix")
  @@index([usercreated], map: "mdl_repoaudi_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_reportbuilder_column {
  id               Int     @id @default(autoincrement())
  reportid         Int     @default(0)
  uniqueidentifier String  @default("") @db.VarChar(255)
  aggregation      String? @db.VarChar(32)
  heading          String? @db.VarChar(255)
  columnorder      Int
  sortenabled      Boolean @default(false)
  sortdirection    Boolean
  sortorder        Int?
  usercreated      Int     @default(0)
  usermodified     Int     @default(0)
  timecreated      Int     @default(0)
  timemodified     Int     @default(0)

  @@index([reportid], map: "mdl_repocolu_rep_ix")
  @@index([usermodified], map: "mdl_repocolu_use2_ix")
  @@index([usercreated], map: "mdl_repocolu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_reportbuilder_filter {
  id               Int     @id @default(autoincrement())
  reportid         Int     @default(0)
  uniqueidentifier String  @default("") @db.VarChar(255)
  heading          String? @db.VarChar(255)
  iscondition      Boolean @default(false)
  filterorder      Int
  usercreated      Int     @default(0)
  usermodified     Int     @default(0)
  timecreated      Int     @default(0)
  timemodified     Int     @default(0)

  @@unique([reportid, uniqueidentifier, iscondition], map: "mdl_repofilt_repuniisc_uix")
  @@index([reportid], map: "mdl_repofilt_rep_ix")
  @@index([usermodified], map: "mdl_repofilt_use2_ix")
  @@index([usercreated], map: "mdl_repofilt_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_reportbuilder_report {
  id            Int     @id @default(autoincrement())
  name          String? @db.VarChar(255)
  source        String  @default("") @db.VarChar(255)
  type          Int     @default(0) @db.TinyInt
  uniquerows    Boolean @default(false)
  conditiondata String? @db.LongText
  settingsdata  String? @db.LongText
  contextid     Int
  component     String  @default("") @db.VarChar(100)
  area          String  @default("") @db.VarChar(100)
  itemid        Int     @default(0)
  usercreated   Int     @default(0)
  usermodified  Int     @default(0)
  timecreated   Int     @default(0)
  timemodified  Int     @default(0)

  @@index([contextid], map: "mdl_reporepo_con_ix")
  @@index([usermodified], map: "mdl_reporepo_use2_ix")
  @@index([usercreated], map: "mdl_reporepo_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_reportbuilder_schedule {
  id            Int     @id @default(autoincrement())
  reportid      Int     @default(0)
  name          String  @default("") @db.VarChar(255)
  enabled       Boolean @default(true)
  audiences     String  @db.LongText
  format        String  @default("") @db.VarChar(255)
  subject       String  @default("") @db.VarChar(255)
  message       String  @db.LongText
  messageformat Int
  userviewas    Int     @default(0)
  timescheduled Int     @default(0)
  recurrence    Int     @default(0)
  reportempty   Int     @default(0)
  timelastsent  Int     @default(0)
  timenextsend  Int     @default(0)
  usercreated   Int     @default(0)
  usermodified  Int     @default(0)
  timecreated   Int     @default(0)
  timemodified  Int     @default(0)

  @@index([reportid], map: "mdl_reposche_rep_ix")
  @@index([usercreated], map: "mdl_reposche_use2_ix")
  @@index([usermodified], map: "mdl_reposche_use3_ix")
  @@index([userviewas], map: "mdl_reposche_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_repository {
  id        Int      @id @default(autoincrement())
  type      String   @default("") @db.VarChar(255)
  visible   Boolean? @default(true)
  sortorder Int      @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_repository_instance_config {
  id         Int     @id @default(autoincrement())
  instanceid Int
  name       String  @default("") @db.VarChar(255)
  value      String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_repository_instances {
  id           Int     @id @default(autoincrement())
  name         String  @default("") @db.VarChar(255)
  typeid       Int
  userid       Int     @default(0)
  contextid    Int
  username     String? @db.VarChar(255)
  password     String? @db.VarChar(255)
  timecreated  Int?
  timemodified Int?
  readonly     Boolean @default(false)

  @@index([contextid], map: "mdl_repoinst_con_ix")
  @@index([userid], map: "mdl_repoinst_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_repository_onedrive_access {
  id           Int    @id @default(autoincrement())
  timemodified Int
  timecreated  Int
  usermodified Int
  permissionid String @default("") @db.VarChar(255)
  itemid       String @default("") @db.VarChar(255)

  @@index([usermodified], map: "mdl_repoonedacce_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_resource {
  id              Int     @id @default(autoincrement())
  course          Int     @default(0)
  name            String  @default("") @db.VarChar(255)
  intro           String? @db.LongText
  introformat     Int     @default(0) @db.SmallInt
  tobemigrated    Int     @default(0) @db.SmallInt
  legacyfiles     Int     @default(0) @db.SmallInt
  legacyfileslast Int?
  display         Int     @default(0) @db.SmallInt
  displayoptions  String? @db.LongText
  filterfiles     Int     @default(0) @db.SmallInt
  revision        Int     @default(0)
  timemodified    Int     @default(0)

  @@index([course], map: "mdl_reso_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_resource_old {
  id           Int     @id @default(autoincrement())
  course       Int     @default(0)
  name         String  @default("") @db.VarChar(255)
  type         String  @default("") @db.VarChar(30)
  reference    String  @default("") @db.VarChar(255)
  intro        String? @db.LongText
  introformat  Int     @default(0) @db.SmallInt
  alltext      String  @db.LongText
  popup        String  @db.LongText
  options      String  @default("") @db.VarChar(255)
  timemodified Int     @default(0)
  oldid        Int     @unique(map: "mdl_resoold_old_uix")
  cmid         Int?
  newmodule    String? @db.VarChar(50)
  newid        Int?
  migrated     Int     @default(0)

  @@index([cmid], map: "mdl_resoold_cmi_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_role {
  id          Int    @id @default(autoincrement())
  name        String @default("") @db.VarChar(255)
  shortname   String @unique(map: "mdl_role_sho_uix") @default("") @db.VarChar(100)
  description String @db.LongText
  sortorder   Int    @unique(map: "mdl_role_sor_uix") @default(0)
  archetype   String @default("") @db.VarChar(30)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_role_allow_assign {
  id          Int @id @default(autoincrement())
  roleid      Int @default(0)
  allowassign Int @default(0)

  @@unique([roleid, allowassign], map: "mdl_rolealloassi_rolall_uix")
  @@index([allowassign], map: "mdl_rolealloassi_all_ix")
  @@index([roleid], map: "mdl_rolealloassi_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_role_allow_override {
  id            Int @id @default(autoincrement())
  roleid        Int @default(0)
  allowoverride Int @default(0)

  @@unique([roleid, allowoverride], map: "mdl_rolealloover_rolall_uix")
  @@index([allowoverride], map: "mdl_rolealloover_all_ix")
  @@index([roleid], map: "mdl_rolealloover_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_role_allow_switch {
  id          Int @id @default(autoincrement())
  roleid      Int
  allowswitch Int

  @@unique([roleid, allowswitch], map: "mdl_rolealloswit_rolall_uix")
  @@index([allowswitch], map: "mdl_rolealloswit_all_ix")
  @@index([roleid], map: "mdl_rolealloswit_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_role_allow_view {
  id        Int @id @default(autoincrement())
  roleid    Int
  allowview Int

  @@unique([roleid, allowview], map: "mdl_rolealloview_rolall_uix")
  @@index([allowview], map: "mdl_rolealloview_all_ix")
  @@index([roleid], map: "mdl_rolealloview_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_role_assignments {
  id           Int    @id @default(autoincrement())
  roleid       Int    @default(0)
  contextid    Int    @default(0)
  userid       Int    @default(0)
  timemodified Int    @default(0)
  modifierid   Int    @default(0)
  component    String @default("") @db.VarChar(100)
  itemid       Int    @default(0)
  sortorder    Int    @default(0)

  @@index([component, itemid, userid], map: "mdl_roleassi_comiteuse_ix")
  @@index([contextid], map: "mdl_roleassi_con_ix")
  @@index([roleid], map: "mdl_roleassi_rol_ix")
  @@index([roleid, contextid], map: "mdl_roleassi_rolcon_ix")
  @@index([sortorder], map: "mdl_roleassi_sor_ix")
  @@index([userid], map: "mdl_roleassi_use_ix")
  @@index([userid, contextid, roleid], map: "mdl_roleassi_useconrol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_role_capabilities {
  id           Int    @id @default(autoincrement())
  contextid    Int    @default(0)
  roleid       Int    @default(0)
  capability   String @default("") @db.VarChar(255)
  permission   Int    @default(0)
  timemodified Int    @default(0)
  modifierid   Int    @default(0)

  @@unique([roleid, contextid, capability], map: "mdl_rolecapa_rolconcap_uix")
  @@index([capability], map: "mdl_rolecapa_cap_ix")
  @@index([contextid], map: "mdl_rolecapa_con_ix")
  @@index([modifierid], map: "mdl_rolecapa_mod_ix")
  @@index([roleid], map: "mdl_rolecapa_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_role_context_levels {
  id           Int @id @default(autoincrement())
  roleid       Int
  contextlevel Int

  @@unique([contextlevel, roleid], map: "mdl_rolecontleve_conrol_uix")
  @@index([roleid], map: "mdl_rolecontleve_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_role_names {
  id        Int    @id @default(autoincrement())
  roleid    Int    @default(0)
  contextid Int    @default(0)
  name      String @default("") @db.VarChar(255)

  @@unique([roleid, contextid], map: "mdl_rolename_rolcon_uix")
  @@index([contextid], map: "mdl_rolename_con_ix")
  @@index([roleid], map: "mdl_rolename_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scale {
  id                Int    @id @default(autoincrement())
  courseid          Int    @default(0)
  userid            Int    @default(0)
  name              String @default("") @db.VarChar(255)
  scale             String @db.LongText
  description       String @db.LongText
  descriptionformat Int    @default(0) @db.TinyInt
  timemodified      Int    @default(0)

  @@index([courseid], map: "mdl_scal_cou_ix")
  @@index([userid], map: "mdl_scal_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scale_history {
  id           Int     @id @default(autoincrement())
  action       Int     @default(0)
  oldid        Int
  source       String? @db.VarChar(255)
  timemodified Int?
  loggeduser   Int?
  courseid     Int     @default(0)
  userid       Int     @default(0)
  name         String  @default("") @db.VarChar(255)
  scale        String  @db.LongText
  description  String  @db.LongText

  @@index([action], map: "mdl_scalhist_act_ix")
  @@index([courseid], map: "mdl_scalhist_cou_ix")
  @@index([loggeduser], map: "mdl_scalhist_log_ix")
  @@index([oldid], map: "mdl_scalhist_old_ix")
  @@index([timemodified], map: "mdl_scalhist_tim_ix")
  @@index([userid], map: "mdl_scalhist_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scorm {
  id                       Int      @id @default(autoincrement())
  course                   Int      @default(0)
  name                     String   @default("") @db.VarChar(255)
  scormtype                String   @default("local") @db.VarChar(50)
  reference                String   @default("") @db.VarChar(255)
  intro                    String   @db.LongText
  introformat              Int      @default(0) @db.SmallInt
  version                  String   @default("") @db.VarChar(9)
  maxgrade                 Float    @default(0)
  grademethod              Int      @default(0) @db.TinyInt
  whatgrade                Int      @default(0)
  maxattempt               Int      @default(1)
  forcecompleted           Boolean  @default(false)
  forcenewattempt          Boolean  @default(false)
  lastattemptlock          Boolean  @default(false)
  masteryoverride          Boolean  @default(true)
  displayattemptstatus     Boolean  @default(true)
  displaycoursestructure   Boolean  @default(false)
  updatefreq               Boolean  @default(false)
  sha1hash                 String?  @db.VarChar(40)
  md5hash                  String   @default("") @db.VarChar(32)
  revision                 Int      @default(0)
  launch                   Int      @default(0)
  skipview                 Boolean  @default(true)
  hidebrowse               Boolean  @default(false)
  hidetoc                  Boolean  @default(false)
  nav                      Boolean  @default(true)
  navpositionleft          Int?     @default(-100)
  navpositiontop           Int?     @default(-100)
  auto                     Boolean  @default(false)
  popup                    Boolean  @default(false)
  options                  String   @default("") @db.VarChar(255)
  width                    Int      @default(100)
  height                   Int      @default(600)
  timeopen                 Int      @default(0)
  timeclose                Int      @default(0)
  timemodified             Int      @default(0)
  completionstatusrequired Boolean?
  completionscorerequired  Int?
  completionstatusallscos  Boolean?
  autocommit               Boolean  @default(false)

  @@index([course], map: "mdl_scor_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scorm_aicc_session {
  id           Int     @id @default(autoincrement())
  userid       Int     @default(0)
  scormid      Int     @default(0)
  hacpsession  String  @default("") @db.VarChar(255)
  scoid        Int?    @default(0)
  scormmode    String? @db.VarChar(50)
  scormstatus  String? @db.VarChar(255)
  attempt      Int?
  lessonstatus String? @db.VarChar(255)
  sessiontime  String? @db.VarChar(255)
  timecreated  Int     @default(0)
  timemodified Int     @default(0)

  @@index([scormid], map: "mdl_scoraiccsess_sco_ix")
  @@index([userid], map: "mdl_scoraiccsess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scorm_attempt {
  id      Int @id @default(autoincrement())
  userid  Int
  scormid Int
  attempt Int @default(1)

  @@index([scormid], map: "mdl_scoratte_sco_ix")
  @@index([userid], map: "mdl_scoratte_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scorm_element {
  id      Int    @id @default(autoincrement())
  element String @unique(map: "mdl_scorelem_ele_uix") @default("") @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scorm_scoes {
  id           Int    @id @default(autoincrement())
  scorm        Int    @default(0)
  manifest     String @default("") @db.VarChar(255)
  organization String @default("") @db.VarChar(255)
  parent       String @default("") @db.VarChar(255)
  identifier   String @default("") @db.VarChar(255)
  launch       String @db.LongText
  scormtype    String @default("") @db.VarChar(5)
  title        String @default("") @db.VarChar(255)
  sortorder    Int    @default(0)

  @@index([scorm], map: "mdl_scorscoe_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scorm_scoes_data {
  id    Int    @id @default(autoincrement())
  scoid Int    @default(0)
  name  String @default("") @db.VarChar(255)
  value String @db.LongText

  @@index([scoid], map: "mdl_scorscoedata_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scorm_scoes_value {
  id           Int    @id @default(autoincrement())
  scoid        Int
  attemptid    Int
  elementid    Int
  value        String @db.LongText
  timemodified Int    @default(0)

  @@index([attemptid], map: "mdl_scorscoevalu_att_ix")
  @@index([elementid], map: "mdl_scorscoevalu_ele_ix")
  @@index([scoid], map: "mdl_scorscoevalu_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scorm_seq_mapinfo {
  id                     Int     @id @default(autoincrement())
  scoid                  Int     @default(0)
  objectiveid            Int     @default(0)
  targetobjectiveid      Int     @default(0)
  readsatisfiedstatus    Boolean @default(true)
  readnormalizedmeasure  Boolean @default(true)
  writesatisfiedstatus   Boolean @default(false)
  writenormalizedmeasure Boolean @default(false)

  @@unique([scoid, id, objectiveid], map: "mdl_scorseqmapi_scoidobj_uix")
  @@index([objectiveid], map: "mdl_scorseqmapi_obj_ix")
  @@index([scoid], map: "mdl_scorseqmapi_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scorm_seq_objective {
  id                   Int     @id @default(autoincrement())
  scoid                Int     @default(0)
  primaryobj           Boolean @default(false)
  objectiveid          String  @default("") @db.VarChar(255)
  satisfiedbymeasure   Boolean @default(true)
  minnormalizedmeasure Float   @default(0.0000) @db.Float

  @@unique([scoid, id], map: "mdl_scorseqobje_scoid_uix")
  @@index([scoid], map: "mdl_scorseqobje_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scorm_seq_rolluprule {
  id                   Int    @id @default(autoincrement())
  scoid                Int    @default(0)
  childactivityset     String @default("") @db.VarChar(15)
  minimumcount         Int    @default(0)
  minimumpercent       Float  @default(0.0000) @db.Float
  conditioncombination String @default("all") @db.VarChar(3)
  action               String @default("") @db.VarChar(15)

  @@unique([scoid, id], map: "mdl_scorseqroll_scoid_uix")
  @@index([scoid], map: "mdl_scorseqroll_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scorm_seq_rolluprulecond {
  id           Int    @id @default(autoincrement())
  scoid        Int    @default(0)
  rollupruleid Int    @default(0)
  operator     String @default("noOp") @db.VarChar(5)
  cond         String @default("") @db.VarChar(25)

  @@unique([scoid, rollupruleid, id], map: "mdl_scorseqroll_scorolid_uix")
  @@index([rollupruleid], map: "mdl_scorseqroll_rol_ix")
  @@index([scoid], map: "mdl_scorseqroll_sco2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scorm_seq_rulecond {
  id                 Int    @id @default(autoincrement())
  scoid              Int    @default(0)
  ruleconditionsid   Int    @default(0)
  refrencedobjective String @default("") @db.VarChar(255)
  measurethreshold   Float  @default(0.0000) @db.Float
  operator           String @default("noOp") @db.VarChar(5)
  cond               String @default("always") @db.VarChar(30)

  @@unique([id, scoid, ruleconditionsid], map: "mdl_scorseqrule_idscorul_uix")
  @@index([ruleconditionsid], map: "mdl_scorseqrule_rul_ix")
  @@index([scoid], map: "mdl_scorseqrule_sco2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_scorm_seq_ruleconds {
  id                   Int    @id @default(autoincrement())
  scoid                Int    @default(0)
  conditioncombination String @default("all") @db.VarChar(3)
  ruletype             Int    @default(0) @db.TinyInt
  action               String @default("") @db.VarChar(25)

  @@unique([scoid, id], map: "mdl_scorseqrule_scoid_uix")
  @@index([scoid], map: "mdl_scorseqrule_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_search_index_requests {
  id            Int    @id @default(autoincrement())
  contextid     Int
  searcharea    String @default("") @db.VarChar(255)
  timerequested Int
  partialarea   String @default("") @db.VarChar(255)
  partialtime   Int
  indexpriority Int

  @@index([contextid], map: "mdl_searinderequ_con_ix")
  @@index([indexpriority, timerequested], map: "mdl_searinderequ_indtim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_search_simpledb_index {
  id           Int     @id @default(autoincrement())
  docid        String  @unique(map: "mdl_searsimpinde_doc_uix") @default("") @db.VarChar(255)
  itemid       Int
  title        String? @db.LongText
  content      String? @db.LongText
  contextid    Int
  areaid       String  @default("") @db.VarChar(255)
  type         Boolean
  courseid     Int
  owneruserid  Int?
  modified     Int
  userid       Int?
  description1 String? @db.LongText
  description2 String? @db.LongText

  @@index([areaid], map: "mdl_searsimpinde_are_ix")
  @@index([contextid], map: "mdl_searsimpinde_con_ix")
  @@index([courseid], map: "mdl_searsimpinde_cou_ix")
  @@index([owneruserid, contextid], map: "mdl_searsimpinde_owncon_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_sessions {
  id           Int     @id @default(autoincrement())
  state        Int     @default(0)
  sid          String  @unique(map: "mdl_sess_sid_uix") @default("") @db.VarChar(128)
  userid       Int
  sessdata     String? @db.LongText
  timecreated  Int
  timemodified Int
  firstip      String? @db.VarChar(45)
  lastip       String? @db.VarChar(45)

  @@index([state], map: "mdl_sess_sta_ix")
  @@index([timemodified], map: "mdl_sess_tim2_ix")
  @@index([timecreated], map: "mdl_sess_tim_ix")
  @@index([userid], map: "mdl_sess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_stats_daily {
  id       Int    @id @default(autoincrement())
  courseid Int    @default(0)
  timeend  Int    @default(0)
  roleid   Int    @default(0)
  stattype String @default("activity") @db.VarChar(20)
  stat1    Int    @default(0)
  stat2    Int    @default(0)

  @@index([courseid], map: "mdl_statdail_cou_ix")
  @@index([roleid], map: "mdl_statdail_rol_ix")
  @@index([timeend], map: "mdl_statdail_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_stats_monthly {
  id       Int    @id @default(autoincrement())
  courseid Int    @default(0)
  timeend  Int    @default(0)
  roleid   Int    @default(0)
  stattype String @default("activity") @db.VarChar(20)
  stat1    Int    @default(0)
  stat2    Int    @default(0)

  @@index([courseid], map: "mdl_statmont_cou_ix")
  @@index([roleid], map: "mdl_statmont_rol_ix")
  @@index([timeend], map: "mdl_statmont_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_stats_user_daily {
  id          Int    @id @default(autoincrement())
  courseid    Int    @default(0)
  userid      Int    @default(0)
  roleid      Int    @default(0)
  timeend     Int    @default(0)
  statsreads  Int    @default(0)
  statswrites Int    @default(0)
  stattype    String @default("") @db.VarChar(30)

  @@index([courseid], map: "mdl_statuserdail_cou_ix")
  @@index([roleid], map: "mdl_statuserdail_rol_ix")
  @@index([timeend], map: "mdl_statuserdail_tim_ix")
  @@index([userid], map: "mdl_statuserdail_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_stats_user_monthly {
  id          Int    @id @default(autoincrement())
  courseid    Int    @default(0)
  userid      Int    @default(0)
  roleid      Int    @default(0)
  timeend     Int    @default(0)
  statsreads  Int    @default(0)
  statswrites Int    @default(0)
  stattype    String @default("") @db.VarChar(30)

  @@index([courseid], map: "mdl_statusermont_cou_ix")
  @@index([roleid], map: "mdl_statusermont_rol_ix")
  @@index([timeend], map: "mdl_statusermont_tim_ix")
  @@index([userid], map: "mdl_statusermont_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_stats_user_weekly {
  id          Int    @id @default(autoincrement())
  courseid    Int    @default(0)
  userid      Int    @default(0)
  roleid      Int    @default(0)
  timeend     Int    @default(0)
  statsreads  Int    @default(0)
  statswrites Int    @default(0)
  stattype    String @default("") @db.VarChar(30)

  @@index([courseid], map: "mdl_statuserweek_cou_ix")
  @@index([roleid], map: "mdl_statuserweek_rol_ix")
  @@index([timeend], map: "mdl_statuserweek_tim_ix")
  @@index([userid], map: "mdl_statuserweek_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_stats_weekly {
  id       Int    @id @default(autoincrement())
  courseid Int    @default(0)
  timeend  Int    @default(0)
  roleid   Int    @default(0)
  stattype String @default("activity") @db.VarChar(20)
  stat1    Int    @default(0)
  stat2    Int    @default(0)

  @@index([courseid], map: "mdl_statweek_cou_ix")
  @@index([roleid], map: "mdl_statweek_rol_ix")
  @@index([timeend], map: "mdl_statweek_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_survey {
  id               Int     @id @default(autoincrement())
  course           Int     @default(0)
  template         Int     @default(0)
  days             Int     @default(0) @db.MediumInt
  timecreated      Int     @default(0)
  timemodified     Int     @default(0)
  name             String  @default("") @db.VarChar(255)
  intro            String  @db.LongText
  introformat      Int     @default(0) @db.SmallInt
  questions        String  @default("") @db.VarChar(255)
  completionsubmit Boolean @default(false)

  @@index([course], map: "mdl_surv_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_survey_analysis {
  id     Int    @id @default(autoincrement())
  survey Int    @default(0)
  userid Int    @default(0)
  notes  String @db.LongText

  @@index([survey], map: "mdl_survanal_sur_ix")
  @@index([userid], map: "mdl_survanal_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_survey_answers {
  id       Int    @id @default(autoincrement())
  userid   Int    @default(0)
  survey   Int    @default(0)
  question Int    @default(0)
  time     Int    @default(0)
  answer1  String @db.LongText
  answer2  String @db.LongText

  @@index([question], map: "mdl_survansw_que_ix")
  @@index([survey], map: "mdl_survansw_sur_ix")
  @@index([userid], map: "mdl_survansw_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_survey_questions {
  id        Int     @id @default(autoincrement())
  text      String  @default("") @db.VarChar(255)
  shorttext String  @default("") @db.VarChar(30)
  multi     String  @default("") @db.VarChar(100)
  intro     String  @default("") @db.VarChar(50)
  type      Int     @default(0) @db.SmallInt
  options   String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tag {
  id                Int     @id @default(autoincrement())
  userid            Int
  tagcollid         Int
  name              String  @default("") @db.VarChar(255)
  rawname           String  @default("") @db.VarChar(255)
  isstandard        Boolean @default(false)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  flag              Int?    @default(0) @db.SmallInt
  timemodified      Int?

  @@unique([tagcollid, name], map: "mdl_tag_tagnam_uix")
  @@index([tagcollid], map: "mdl_tag_tag_ix")
  @@index([tagcollid, isstandard], map: "mdl_tag_tagiss_ix")
  @@index([userid], map: "mdl_tag_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tag_area {
  id               Int     @id @default(autoincrement())
  component        String  @default("") @db.VarChar(100)
  itemtype         String  @default("") @db.VarChar(100)
  enabled          Boolean @default(true)
  tagcollid        Int
  callback         String? @db.VarChar(100)
  callbackfile     String? @db.VarChar(100)
  showstandard     Boolean @default(false)
  multiplecontexts Boolean @default(false)

  @@unique([component, itemtype], map: "mdl_tagarea_comite_uix")
  @@index([tagcollid], map: "mdl_tagarea_tag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tag_coll {
  id         Int     @id @default(autoincrement())
  name       String? @db.VarChar(255)
  isdefault  Int     @default(0) @db.TinyInt
  component  String? @db.VarChar(100)
  sortorder  Int     @default(0) @db.MediumInt
  searchable Int     @default(1) @db.TinyInt
  customurl  String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tag_correlation {
  id             Int    @id @default(autoincrement())
  tagid          Int
  correlatedtags String @db.LongText

  @@index([tagid], map: "mdl_tagcorr_tag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tag_instance {
  id           Int    @id @default(autoincrement())
  tagid        Int
  component    String @default("") @db.VarChar(100)
  itemtype     String @default("") @db.VarChar(100)
  itemid       Int
  contextid    Int?
  tiuserid     Int    @default(0)
  ordering     Int?
  timecreated  Int    @default(0)
  timemodified Int    @default(0)

  @@unique([component, itemtype, itemid, contextid, tiuserid, tagid], map: "mdl_taginst_comiteiteconti_uix")
  @@index([contextid], map: "mdl_taginst_con_ix")
  @@index([itemtype, component, tagid, contextid], map: "mdl_taginst_itecomtagcon_ix")
  @@index([tagid], map: "mdl_taginst_tag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_task_adhoc {
  id          Int     @id @default(autoincrement())
  component   String  @default("") @db.VarChar(255)
  classname   String  @default("") @db.VarChar(255)
  nextruntime Int
  faildelay   Int?
  customdata  String? @db.LongText
  userid      Int?
  blocking    Int     @default(0) @db.TinyInt
  timecreated Int     @default(0)
  timestarted Int?
  hostname    String? @db.VarChar(255)
  pid         Int?

  @@index([nextruntime], map: "mdl_taskadho_nex_ix")
  @@index([timestarted], map: "mdl_taskadho_tim_ix")
  @@index([userid], map: "mdl_taskadho_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_task_log {
  id        Int     @id @default(autoincrement())
  type      Int     @db.SmallInt
  component String  @default("") @db.VarChar(255)
  classname String  @default("") @db.VarChar(255)
  userid    Int
  timestart Decimal @db.Decimal(20, 10)
  timeend   Decimal @db.Decimal(20, 10)
  dbreads   Int
  dbwrites  Int
  result    Int     @db.TinyInt
  output    String  @db.LongText
  hostname  String? @db.VarChar(255)
  pid       Int?

  @@index([classname], map: "mdl_tasklog_cla_ix")
  @@index([timestart], map: "mdl_tasklog_tim_ix")
  @@index([userid], map: "mdl_tasklog_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_task_scheduled {
  id          Int     @id @default(autoincrement())
  component   String  @default("") @db.VarChar(255)
  classname   String  @unique(map: "mdl_tasksche_cla_uix") @default("") @db.VarChar(255)
  lastruntime Int?
  nextruntime Int?
  blocking    Int     @default(0) @db.TinyInt
  minute      String  @default("") @db.VarChar(200)
  hour        String  @default("") @db.VarChar(70)
  day         String  @default("") @db.VarChar(90)
  month       String  @default("") @db.VarChar(30)
  dayofweek   String  @default("") @db.VarChar(25)
  faildelay   Int?
  customised  Int     @default(0) @db.TinyInt
  disabled    Boolean @default(false)
  timestarted Int?
  hostname    String? @db.VarChar(255)
  pid         Int?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tiny_autosave {
  id           Int    @id @default(autoincrement())
  elementid    String @default("") @db.VarChar(255)
  contextid    Int
  pagehash     String @default("") @db.VarChar(64)
  userid       Int
  drafttext    String @db.LongText
  draftid      Int?
  pageinstance String @default("") @db.VarChar(64)
  timemodified Int    @default(0)

  @@unique([elementid, contextid, userid, pagehash], map: "mdl_tinyauto_eleconusepag_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_brickfield_areas {
  id          Int     @id @default(autoincrement())
  type        Int     @default(0) @db.TinyInt
  contextid   Int?
  component   String? @db.VarChar(100)
  tablename   String? @db.VarChar(40)
  fieldorarea String? @db.VarChar(50)
  itemid      Int?
  filename    String? @db.VarChar(1333)
  reftable    String? @db.VarChar(40)
  refid       Int?
  cmid        Int?
  courseid    Int?
  categoryid  Int?

  @@index([categoryid], map: "mdl_toolbricarea_cat_ix")
  @@index([cmid], map: "mdl_toolbricarea_cmi_ix")
  @@index([contextid], map: "mdl_toolbricarea_con_ix")
  @@index([courseid], map: "mdl_toolbricarea_cou_ix")
  @@index([courseid, cmid], map: "mdl_toolbricarea_coucmi_ix")
  @@index([reftable, refid, type], map: "mdl_toolbricarea_refreftyp_ix")
  @@index([type, contextid, component, fieldorarea, itemid], map: "mdl_toolbricarea_typconcomf_ix")
  @@index([type, tablename, itemid, fieldorarea], map: "mdl_toolbricarea_typtabitef_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_brickfield_cache_acts {
  id               Int      @id @default(autoincrement())
  courseid         Int
  status           Boolean?
  component        String?  @db.VarChar(64)
  totalactivities  Int?
  failedactivities Int?
  passedactivities Int?
  errorcount       Int?

  @@index([courseid], map: "mdl_toolbriccachacts_cou_ix")
  @@index([status], map: "mdl_toolbriccachacts_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_brickfield_cache_check {
  id         Int      @id @default(autoincrement())
  courseid   Int
  status     Boolean?
  checkid    Int?
  checkcount Int?
  errorcount Int?

  @@index([courseid], map: "mdl_toolbriccachchec_cou_ix")
  @@index([errorcount], map: "mdl_toolbriccachchec_err_ix")
  @@index([status], map: "mdl_toolbriccachchec_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_brickfield_checks {
  id         Int     @id @default(autoincrement())
  checktype  String? @db.VarChar(64)
  shortname  String? @db.VarChar(64)
  checkgroup Int?    @default(0)
  status     Int     @db.SmallInt
  severity   Int     @default(0) @db.TinyInt

  @@index([checkgroup], map: "mdl_toolbricchec_che2_ix")
  @@index([checktype], map: "mdl_toolbricchec_che_ix")
  @@index([status], map: "mdl_toolbricchec_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_brickfield_content {
  id          Int     @id @default(autoincrement())
  areaid      Int
  contenthash String  @default("") @db.VarChar(40)
  iscurrent   Boolean @default(false)
  status      Int     @default(0) @db.TinyInt
  timecreated Int
  timechecked Int?

  @@index([areaid], map: "mdl_toolbriccont_are_ix")
  @@index([iscurrent, areaid], map: "mdl_toolbriccont_iscare_ix")
  @@index([status], map: "mdl_toolbriccont_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_brickfield_errors {
  id         Int     @id @default(autoincrement())
  resultid   Int
  linenumber Int     @default(0)
  errordata  String? @db.LongText
  htmlcode   String? @db.LongText

  @@index([resultid], map: "mdl_toolbricerro_res_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_brickfield_process {
  id             Int     @id @default(autoincrement())
  courseid       Int
  item           String? @db.VarChar(64)
  contextid      Int?
  innercontextid Int?
  timecreated    Int?
  timecompleted  Int?

  @@index([timecompleted], map: "mdl_toolbricproc_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_brickfield_results {
  id         Int  @id @default(autoincrement())
  contentid  Int?
  checkid    Int
  errorcount Int  @default(0)

  @@index([checkid], map: "mdl_toolbricresu_che_ix")
  @@index([contentid], map: "mdl_toolbricresu_con_ix")
  @@index([contentid, checkid], map: "mdl_toolbricresu_conche_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_brickfield_schedule {
  id           Int  @id @default(autoincrement())
  contextlevel Int  @default(50)
  instanceid   Int
  contextid    Int?
  status       Int  @default(0) @db.TinyInt
  timeanalyzed Int? @default(0)
  timemodified Int? @default(0)

  @@unique([contextlevel, instanceid], map: "mdl_toolbricsche_conins_uix")
  @@index([status], map: "mdl_toolbricsche_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_brickfield_summary {
  id                Int      @id @default(autoincrement())
  courseid          Int
  status            Boolean?
  activities        Int?
  activitiespassed  Int?
  activitiesfailed  Int?
  errorschecktype1  Int?
  errorschecktype2  Int?
  errorschecktype3  Int?
  errorschecktype4  Int?
  errorschecktype5  Int?
  errorschecktype6  Int?
  errorschecktype7  Int?
  failedchecktype1  Int?
  failedchecktype2  Int?
  failedchecktype3  Int?
  failedchecktype4  Int?
  failedchecktype5  Int?
  failedchecktype6  Int?
  failedchecktype7  Int?
  percentchecktype1 Int?
  percentchecktype2 Int?
  percentchecktype3 Int?
  percentchecktype4 Int?
  percentchecktype5 Int?
  percentchecktype6 Int?
  percentchecktype7 Int?

  @@index([courseid], map: "mdl_toolbricsumm_cou_ix")
  @@index([status], map: "mdl_toolbricsumm_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_cohortroles {
  id           Int  @id @default(autoincrement())
  cohortid     Int
  roleid       Int
  userid       Int
  timecreated  Int
  timemodified Int
  usermodified Int?

  @@unique([cohortid, roleid, userid], map: "mdl_toolcoho_cohroluse_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_customlang {
  id             Int     @id @default(autoincrement())
  lang           String  @default("") @db.VarChar(20)
  componentid    Int
  stringid       String  @default("") @db.VarChar(255)
  original       String  @db.LongText
  master         String? @db.LongText
  local          String? @db.LongText
  timemodified   Int
  timecustomized Int?
  outdated       Int?    @default(0) @db.SmallInt
  modified       Int?    @default(0) @db.SmallInt

  @@unique([lang, componentid, stringid], map: "mdl_toolcust_lancomstr_uix")
  @@index([componentid], map: "mdl_toolcust_com_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_customlang_components {
  id      Int     @id @default(autoincrement())
  name    String  @default("") @db.VarChar(255)
  version String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_dataprivacy_category {
  id                Int      @id @default(autoincrement())
  name              String   @default("") @db.VarChar(100)
  description       String?  @db.LongText
  descriptionformat Boolean?
  usermodified      Int
  timecreated       Int
  timemodified      Int
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_dataprivacy_contextlist {
  id           Int    @id @default(autoincrement())
  component    String @default("") @db.VarChar(255)
  timecreated  Int    @default(0)
  timemodified Int    @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_dataprivacy_ctxexpired {
  id             Int     @id @default(autoincrement())
  contextid      Int     @unique(map: "mdl_tooldatactxe_con_uix")
  unexpiredroles String? @db.LongText
  expiredroles   String? @db.LongText
  defaultexpired Boolean
  status         Int     @default(0) @db.TinyInt
  usermodified   Int
  timecreated    Int
  timemodified   Int
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_dataprivacy_ctxinstance {
  id           Int  @id @default(autoincrement())
  contextid    Int  @unique(map: "mdl_tooldatactxi_con_uix")
  purposeid    Int?
  categoryid   Int?
  usermodified Int
  timecreated  Int
  timemodified Int

  @@index([categoryid], map: "mdl_tooldatactxi_cat_ix")
  @@index([purposeid], map: "mdl_tooldatactxi_pur_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_dataprivacy_ctxlevel {
  id           Int  @id @default(autoincrement())
  contextlevel Int  @unique(map: "mdl_tooldatactxl_con_uix") @db.SmallInt
  purposeid    Int?
  categoryid   Int?
  usermodified Int
  timecreated  Int
  timemodified Int

  @@index([categoryid], map: "mdl_tooldatactxl_cat_ix")
  @@index([purposeid], map: "mdl_tooldatactxl_pur_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_dataprivacy_ctxlst_ctx {
  id            Int @id @default(autoincrement())
  contextid     Int
  contextlistid Int
  status        Int @default(0) @db.TinyInt
  timecreated   Int @default(0)
  timemodified  Int @default(0)

  @@index([contextlistid], map: "mdl_tooldatactxlctx_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_dataprivacy_purpose {
  id                   Int      @id @default(autoincrement())
  name                 String   @default("") @db.VarChar(100)
  description          String?  @db.LongText
  descriptionformat    Boolean?
  lawfulbases          String   @db.LongText
  sensitivedatareasons String?  @db.LongText
  retentionperiod      String   @default("") @db.VarChar(255)
  protected            Boolean?
  usermodified         Int
  timecreated          Int
  timemodified         Int
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_dataprivacy_purposerole {
  id                   Int      @id @default(autoincrement())
  purposeid            Int
  roleid               Int
  lawfulbases          String?  @db.LongText
  sensitivedatareasons String?  @db.LongText
  retentionperiod      String   @default("") @db.VarChar(255)
  protected            Boolean?
  usermodified         Int
  timecreated          Int
  timemodified         Int

  @@unique([purposeid, roleid], map: "mdl_tooldatapurp_purrol_uix")
  @@index([purposeid], map: "mdl_tooldatapurp_pur_ix")
  @@index([roleid], map: "mdl_tooldatapurp_rol_ix")
  @@index([usermodified], map: "mdl_tooldatapurp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_dataprivacy_request {
  id               Int     @id @default(autoincrement())
  type             Int     @default(0)
  comments         String? @db.LongText
  commentsformat   Int     @default(0) @db.TinyInt
  userid           Int     @default(0)
  requestedby      Int     @default(0)
  status           Int     @default(0) @db.TinyInt
  dpo              Int?    @default(0)
  dpocomment       String? @db.LongText
  dpocommentformat Int     @default(0) @db.TinyInt
  systemapproved   Int     @default(0) @db.SmallInt
  usermodified     Int     @default(0)
  timecreated      Int     @default(0)
  timemodified     Int     @default(0)
  creationmethod   Int     @default(0)

  @@index([dpo], map: "mdl_tooldatarequ_dpo_ix")
  @@index([requestedby], map: "mdl_tooldatarequ_req_ix")
  @@index([usermodified], map: "mdl_tooldatarequ_use2_ix")
  @@index([userid], map: "mdl_tooldatarequ_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_dataprivacy_rqst_ctxlst {
  id            Int @id @default(autoincrement())
  requestid     Int
  contextlistid Int

  @@unique([requestid, contextlistid], map: "mdl_tooldatarqstctxl_reqco_uix")
  @@index([contextlistid], map: "mdl_tooldatarqstctxl_con_ix")
  @@index([requestid], map: "mdl_tooldatarqstctxl_req_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_mfa {
  id            Int     @id @default(autoincrement())
  userid        Int
  factor        String  @default("") @db.VarChar(100)
  secret        String? @db.VarChar(1333)
  label         String? @db.VarChar(1333)
  timecreated   Int?
  createdfromip String? @db.VarChar(100)
  timemodified  Int?
  lastverified  Int?
  revoked       Boolean @default(false)
  lockcounter   Int     @default(0) @db.MediumInt

  @@index([factor], map: "mdl_toolmfa_fac_ix")
  @@index([userid], map: "mdl_toolmfa_use_ix")
  @@index([userid, factor, lockcounter], map: "mdl_toolmfa_usefacloc_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_mfa_auth {
  id           Int @id @default(autoincrement())
  userid       Int
  lastverified Int @default(0)

  @@index([userid], map: "mdl_toolmfaauth_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_mfa_secrets {
  id          Int     @id @default(autoincrement())
  userid      Int
  factor      String  @default("") @db.VarChar(100)
  secret      String  @default("") @db.VarChar(1333)
  timecreated Int
  expiry      Int
  revoked     Boolean @default(false)
  sessionid   String? @db.VarChar(100)

  @@index([expiry], map: "mdl_toolmfasecr_exp_ix")
  @@index([factor], map: "mdl_toolmfasecr_fac_ix")
  @@index([userid], map: "mdl_toolmfasecr_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_monitor_events {
  id                Int    @id @default(autoincrement())
  eventname         String @default("") @db.VarChar(254)
  contextid         Int
  contextlevel      Int
  contextinstanceid Int
  link              String @default("") @db.VarChar(254)
  courseid          Int
  timecreated       Int

  @@index([contextinstanceid], map: "mdl_toolmonieven_con2_ix")
  @@index([contextid], map: "mdl_toolmonieven_con_ix")
  @@index([courseid], map: "mdl_toolmonieven_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_monitor_history {
  id       Int @id @default(autoincrement())
  sid      Int
  userid   Int
  timesent Int

  @@unique([sid, userid, timesent], map: "mdl_toolmonihist_sidusetim_uix")
  @@index([sid], map: "mdl_toolmonihist_sid_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_monitor_rules {
  id                Int     @id @default(autoincrement())
  description       String? @db.LongText
  descriptionformat Boolean
  name              String  @default("") @db.VarChar(254)
  userid            Int
  courseid          Int
  plugin            String  @default("") @db.VarChar(254)
  eventname         String  @default("") @db.VarChar(254)
  template          String  @db.LongText
  templateformat    Boolean
  frequency         Int     @db.SmallInt
  timewindow        Int     @db.MediumInt
  timemodified      Int
  timecreated       Int

  @@index([courseid, userid], map: "mdl_toolmonirule_couuse_ix")
  @@index([eventname], map: "mdl_toolmonirule_eve_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_monitor_subscriptions {
  id                   Int @id @default(autoincrement())
  courseid             Int
  ruleid               Int
  cmid                 Int
  userid               Int
  timecreated          Int
  lastnotificationsent Int @default(0)
  inactivedate         Int @default(0)

  @@index([courseid, userid], map: "mdl_toolmonisubs_couuse_ix")
  @@index([ruleid], map: "mdl_toolmonisubs_rul_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_policy {
  id               Int  @id @default(autoincrement())
  sortorder        Int  @default(999) @db.MediumInt
  currentversionid Int?

  @@index([currentversionid], map: "mdl_toolpoli_cur_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_policy_acceptances {
  id              Int      @id @default(autoincrement())
  policyversionid Int
  userid          Int
  status          Boolean?
  lang            String   @default("") @db.VarChar(30)
  usermodified    Int
  timecreated     Int
  timemodified    Int
  note            String?  @db.LongText

  @@unique([policyversionid, userid], map: "mdl_toolpoliacce_poluse_uix")
  @@index([policyversionid], map: "mdl_toolpoliacce_pol_ix")
  @@index([usermodified], map: "mdl_toolpoliacce_use2_ix")
  @@index([userid], map: "mdl_toolpoliacce_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_policy_versions {
  id             Int    @id @default(autoincrement())
  name           String @default("") @db.VarChar(1333)
  type           Int    @default(0) @db.SmallInt
  audience       Int    @default(0) @db.SmallInt
  archived       Int    @default(0) @db.SmallInt
  usermodified   Int
  timecreated    Int
  timemodified   Int
  policyid       Int
  agreementstyle Int    @default(0) @db.SmallInt
  optional       Int    @default(0) @db.SmallInt
  revision       String @default("") @db.VarChar(1333)
  summary        String @db.LongText
  summaryformat  Int    @db.SmallInt
  content        String @db.LongText
  contentformat  Int    @db.SmallInt

  @@index([policyid], map: "mdl_toolpolivers_pol_ix")
  @@index([usermodified], map: "mdl_toolpolivers_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_recyclebin_category {
  id          Int    @id @default(autoincrement())
  categoryid  Int
  shortname   String @default("") @db.VarChar(255)
  fullname    String @default("") @db.VarChar(255)
  timecreated Int

  @@index([categoryid], map: "mdl_toolrecycate_cat_ix")
  @@index([timecreated], map: "mdl_toolrecycate_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_recyclebin_course {
  id          Int     @id @default(autoincrement())
  courseid    Int
  section     Int
  module      Int
  name        String? @db.VarChar(255)
  timecreated Int     @default(0)

  @@index([courseid], map: "mdl_toolrecycour_cou_ix")
  @@index([timecreated], map: "mdl_toolrecycour_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_usertours_steps {
  id            Int     @id @default(autoincrement())
  tourid        Int
  title         String? @db.LongText
  content       String? @db.LongText
  contentformat Int     @default(0) @db.SmallInt
  targettype    Int     @db.TinyInt
  targetvalue   String  @db.LongText
  sortorder     Int     @default(0)
  configdata    String  @db.LongText

  @@index([tourid], map: "mdl_tooluserstep_tou_ix")
  @@index([tourid, sortorder], map: "mdl_tooluserstep_tousor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_tool_usertours_tours {
  id                 Int     @id @default(autoincrement())
  name               String  @default("") @db.VarChar(255)
  description        String? @db.LongText
  pathmatch          String? @db.VarChar(255)
  enabled            Boolean @default(false)
  sortorder          Int     @default(0)
  endtourlabel       String? @db.VarChar(255)
  configdata         String  @db.LongText
  displaystepnumbers Boolean @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_upgrade_log {
  id            Int     @id @default(autoincrement())
  type          Int
  plugin        String? @db.VarChar(100)
  version       String? @db.VarChar(100)
  targetversion String? @db.VarChar(100)
  info          String  @default("") @db.VarChar(255)
  details       String? @db.LongText
  backtrace     String? @db.LongText
  userid        Int
  timemodified  Int

  @@index([timemodified], map: "mdl_upgrlog_tim_ix")
  @@index([type, timemodified], map: "mdl_upgrlog_typtim_ix")
  @@index([userid], map: "mdl_upgrlog_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_url {
  id             Int     @id @default(autoincrement())
  course         Int     @default(0)
  name           String  @default("") @db.VarChar(255)
  intro          String? @db.LongText
  introformat    Int     @default(0) @db.SmallInt
  externalurl    String  @db.LongText
  display        Int     @default(0) @db.SmallInt
  displayoptions String? @db.LongText
  parameters     String? @db.LongText
  timemodified   Int     @default(0)

  @@index([course], map: "mdl_url_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_user {
  id                Int             @id @default(autoincrement())
  auth              String          @default("manual") @db.VarChar(20)
  confirmed         Boolean         @default(false)
  policyagreed      Boolean         @default(false)
  deleted           Boolean         @default(false)
  suspended         Boolean         @default(false)
  mnethostid        Int             @default(0)
  role              String          @default("student") @db.VarChar(100)
  username          String          @default("") @db.VarChar(100)
  password          String          @db.VarChar(255)
  idnumber          String          @default("") @db.VarChar(255)
  firstname         String          @default("") @db.VarChar(100)
  lastname          String          @default("") @db.VarChar(100)
  email             String?         @unique(map: "email") @db.VarChar(255)
  emailstop         Boolean         @default(false)
  phone1            String          @default("") @db.VarChar(20)
  phone2            String          @default("") @db.VarChar(20)
  institution       String          @default("") @db.VarChar(255)
  department        String          @default("") @db.VarChar(255)
  address           String          @default("") @db.VarChar(255)
  city              String          @default("") @db.VarChar(120)
  country           String          @default("") @db.VarChar(2)
  lang              String          @default("en") @db.VarChar(30)
  calendartype      String          @default("gregorian") @db.VarChar(30)
  theme             String          @default("") @db.VarChar(50)
  timezone          String          @default("99") @db.VarChar(100)
  firstaccess       Int             @default(0)
  lastaccess        Int             @default(0)
  lastlogin         Int             @default(0)
  currentlogin      Int             @default(0)
  lastip            String          @default("") @db.VarChar(45)
  secret            String          @default("") @db.VarChar(15)
  picture           Int             @default(0)
  description       String?         @db.LongText
  descriptionformat Int             @default(1) @db.TinyInt
  mailformat        Boolean         @default(true)
  maildigest        Boolean         @default(false)
  maildisplay       Int             @default(2) @db.TinyInt
  autosubscribe     Boolean         @default(true)
  trackforums       Boolean         @default(false)
  timecreated       Int             @default(0)
  timemodified      Int             @default(0)
  trustbitmask      Int             @default(0)
  imagesrc          String?         @db.VarChar(255)
  imagealt          String?         @db.VarChar(255)
  lastnamephonetic  String?         @db.VarChar(255)
  firstnamephonetic String?         @db.VarChar(255)
  middlename        String?         @db.VarChar(255)
  alternatename     String?         @db.VarChar(255)
  moodlenetprofile  String?         @db.VarChar(255)
  mdl_user_logs     mdl_user_logs[]

  @@unique([mnethostid, username], map: "mdl_user_mneuse_uix")
  @@index([alternatename], map: "mdl_user_alt_ix")
  @@index([auth], map: "mdl_user_aut_ix")
  @@index([city], map: "mdl_user_cit_ix")
  @@index([confirmed], map: "mdl_user_con_ix")
  @@index([country], map: "mdl_user_cou_ix")
  @@index([deleted], map: "mdl_user_del_ix")
  @@index([email], map: "mdl_user_ema_ix")
  @@index([firstnamephonetic], map: "mdl_user_fir2_ix")
  @@index([firstname], map: "mdl_user_fir_ix")
  @@index([idnumber], map: "mdl_user_idn_ix")
  @@index([lastaccess], map: "mdl_user_las2_ix")
  @@index([lastnamephonetic], map: "mdl_user_las3_ix")
  @@index([lastname], map: "mdl_user_las_ix")
  @@index([middlename], map: "mdl_user_mid_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_user_devices {
  id           Int     @id @default(autoincrement())
  userid       Int     @default(0)
  appid        String  @default("") @db.VarChar(128)
  name         String  @default("") @db.VarChar(32)
  model        String  @default("") @db.VarChar(32)
  platform     String  @default("") @db.VarChar(32)
  version      String  @default("") @db.VarChar(32)
  pushid       String  @default("") @db.VarChar(255)
  uuid         String  @default("") @db.VarChar(255)
  publickey    String? @db.LongText
  timecreated  Int
  timemodified Int

  @@unique([pushid, userid], map: "mdl_userdevi_pususe_uix")
  @@index([userid], map: "mdl_userdevi_use_ix")
  @@index([uuid, userid], map: "mdl_userdevi_uuiuse_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_user_enrolments {
  id           Int @id @default(autoincrement())
  status       Int @default(0)
  enrolid      Int
  userid       Int
  timestart    Int @default(0)
  timeend      Int @default(2147483647)
  modifierid   Int @default(0)
  timecreated  Int @default(0)
  timemodified Int @default(0)

  @@unique([enrolid, userid], map: "mdl_userenro_enruse_uix")
  @@index([enrolid], map: "mdl_userenro_enr_ix")
  @@index([modifierid], map: "mdl_userenro_mod_ix")
  @@index([userid], map: "mdl_userenro_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_user_info_category {
  id        Int    @id @default(autoincrement())
  name      String @default("") @db.VarChar(255)
  sortorder Int    @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_user_info_data {
  id         Int    @id @default(autoincrement())
  userid     Int    @default(0)
  fieldid    Int    @default(0)
  data       String @db.LongText
  dataformat Int    @default(0) @db.TinyInt

  @@unique([userid, fieldid], map: "mdl_userinfodata_usefie_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_user_info_field {
  id                Int     @id @default(autoincrement())
  shortname         String  @default("shortname") @db.VarChar(255)
  name              String  @db.LongText
  datatype          String  @default("") @db.VarChar(255)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  categoryid        Int     @default(0)
  sortorder         Int     @default(0)
  required          Int     @default(0) @db.TinyInt
  locked            Int     @default(0) @db.TinyInt
  visible           Int     @default(0) @db.SmallInt
  forceunique       Int     @default(0) @db.TinyInt
  signup            Int     @default(0) @db.TinyInt
  defaultdata       String? @db.LongText
  defaultdataformat Int     @default(0) @db.TinyInt
  param1            String? @db.LongText
  param2            String? @db.LongText
  param3            String? @db.LongText
  param4            String? @db.LongText
  param5            String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_user_lastaccess {
  id         Int @id @default(autoincrement())
  userid     Int @default(0)
  courseid   Int @default(0)
  timeaccess Int @default(0)

  @@unique([userid, courseid], map: "mdl_userlast_usecou_uix")
  @@index([courseid], map: "mdl_userlast_cou_ix")
  @@index([userid], map: "mdl_userlast_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_user_logs {
  id       Int       @id @default(autoincrement())
  id_user  Int
  uid      String    @db.VarChar(100)
  input    DateTime? @db.Timestamp(0)
  output   DateTime? @db.Timestamp(0)
  mdl_user mdl_user  @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "mdl_user_logs_ibfk_1")

  @@index([id_user], map: "idx_mdl_user_logs_id_user")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_user_password_history {
  id          Int    @id @default(autoincrement())
  userid      Int
  hash        String @default("") @db.VarChar(255)
  timecreated Int

  @@index([userid], map: "mdl_userpasshist_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_user_password_resets {
  id              Int    @id @default(autoincrement())
  userid          Int
  timerequested   Int
  timererequested Int    @default(0)
  token           String @default("") @db.VarChar(32)

  @@index([userid], map: "mdl_userpassrese_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_user_preferences {
  id     Int    @id @default(autoincrement())
  userid Int    @default(0)
  name   String @default("") @db.VarChar(255)
  value  String @default("") @db.VarChar(1333)

  @@unique([userid, name], map: "mdl_userpref_usenam_uix")
  @@index([name], map: "mdl_userpref_nam_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_user_private_key {
  id            Int     @id @default(autoincrement())
  script        String  @default("") @db.VarChar(128)
  value         String  @default("") @db.VarChar(128)
  userid        Int
  instance      Int?
  iprestriction String? @db.VarChar(255)
  validuntil    Int?
  timecreated   Int?

  @@index([script, value], map: "mdl_userprivkey_scrval_ix")
  @@index([userid], map: "mdl_userprivkey_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_wiki {
  id             Int     @id @default(autoincrement())
  course         Int     @default(0)
  name           String  @default("Wiki") @db.VarChar(255)
  intro          String? @db.LongText
  introformat    Int     @default(0) @db.SmallInt
  timecreated    Int     @default(0)
  timemodified   Int     @default(0)
  firstpagetitle String  @default("First Page") @db.VarChar(255)
  wikimode       String  @default("collaborative") @db.VarChar(20)
  defaultformat  String  @default("creole") @db.VarChar(20)
  forceformat    Boolean @default(true)
  editbegin      Int     @default(0)
  editend        Int?    @default(0)

  @@index([course], map: "mdl_wiki_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_wiki_links {
  id            Int     @id @default(autoincrement())
  subwikiid     Int     @default(0)
  frompageid    Int     @default(0)
  topageid      Int     @default(0)
  tomissingpage String? @db.VarChar(255)

  @@index([frompageid], map: "mdl_wikilink_fro_ix")
  @@index([subwikiid], map: "mdl_wikilink_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_wiki_locks {
  id          Int     @id @default(autoincrement())
  pageid      Int     @default(0)
  sectionname String? @db.VarChar(255)
  userid      Int     @default(0)
  lockedat    Int     @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_wiki_pages {
  id            Int     @id @default(autoincrement())
  subwikiid     Int     @default(0)
  title         String  @default("title") @db.VarChar(255)
  cachedcontent String  @db.LongText
  timecreated   Int     @default(0)
  timemodified  Int     @default(0)
  timerendered  Int     @default(0)
  userid        Int     @default(0)
  pageviews     Int     @default(0)
  readonly      Boolean @default(false)

  @@unique([subwikiid, title, userid], map: "mdl_wikipage_subtituse_uix")
  @@index([subwikiid], map: "mdl_wikipage_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_wiki_subwikis {
  id      Int @id @default(autoincrement())
  wikiid  Int @default(0)
  groupid Int @default(0)
  userid  Int @default(0)

  @@unique([wikiid, groupid, userid], map: "mdl_wikisubw_wikgrouse_uix")
  @@index([wikiid], map: "mdl_wikisubw_wik_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_wiki_synonyms {
  id          Int    @id @default(autoincrement())
  subwikiid   Int    @default(0)
  pageid      Int    @default(0)
  pagesynonym String @default("Pagesynonym") @db.VarChar(255)

  @@unique([pageid, pagesynonym], map: "mdl_wikisyno_pagpag_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_wiki_versions {
  id            Int    @id @default(autoincrement())
  pageid        Int    @default(0)
  content       String @db.LongText
  contentformat String @default("creole") @db.VarChar(20)
  version       Int    @default(0) @db.MediumInt
  timecreated   Int    @default(0)
  userid        Int    @default(0)

  @@index([pageid], map: "mdl_wikivers_pag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshop {
  id                       Int      @id @default(autoincrement())
  course                   Int
  name                     String   @default("") @db.VarChar(255)
  intro                    String?  @db.LongText
  introformat              Int      @default(0) @db.SmallInt
  instructauthors          String?  @db.LongText
  instructauthorsformat    Int      @default(0) @db.SmallInt
  instructreviewers        String?  @db.LongText
  instructreviewersformat  Int      @default(0) @db.SmallInt
  timemodified             Int
  phase                    Int?     @default(0) @db.SmallInt
  useexamples              Int?     @default(0) @db.TinyInt
  usepeerassessment        Int?     @default(0) @db.TinyInt
  useselfassessment        Int?     @default(0) @db.TinyInt
  grade                    Decimal? @default(80.00000) @db.Decimal(10, 5)
  gradinggrade             Decimal? @default(20.00000) @db.Decimal(10, 5)
  strategy                 String   @default("") @db.VarChar(30)
  evaluation               String   @default("") @db.VarChar(30)
  gradedecimals            Int?     @default(0) @db.SmallInt
  submissiontypetext       Boolean  @default(true)
  submissiontypefile       Boolean  @default(true)
  nattachments             Int?     @default(1) @db.SmallInt
  submissionfiletypes      String?  @db.VarChar(255)
  latesubmissions          Int?     @default(0) @db.TinyInt
  maxbytes                 Int?     @default(100000)
  examplesmode             Int?     @default(0) @db.SmallInt
  submissionstart          Int?     @default(0)
  submissionend            Int?     @default(0)
  assessmentstart          Int?     @default(0)
  assessmentend            Int?     @default(0)
  phaseswitchassessment    Int      @default(0) @db.TinyInt
  conclusion               String?  @db.LongText
  conclusionformat         Int      @default(1) @db.SmallInt
  overallfeedbackmode      Int?     @default(1) @db.SmallInt
  overallfeedbackfiles     Int?     @default(0) @db.SmallInt
  overallfeedbackfiletypes String?  @db.VarChar(255)
  overallfeedbackmaxbytes  Int?     @default(100000)

  @@index([course], map: "mdl_work_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshop_aggregations {
  id           Int      @id @default(autoincrement())
  workshopid   Int
  userid       Int
  gradinggrade Decimal? @db.Decimal(10, 5)
  timegraded   Int?

  @@unique([workshopid, userid], map: "mdl_workaggr_woruse_uix")
  @@index([userid], map: "mdl_workaggr_use_ix")
  @@index([workshopid], map: "mdl_workaggr_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshop_assessments {
  id                       Int      @id @default(autoincrement())
  submissionid             Int
  reviewerid               Int
  weight                   Int      @default(1)
  timecreated              Int?     @default(0)
  timemodified             Int?     @default(0)
  grade                    Decimal? @db.Decimal(10, 5)
  gradinggrade             Decimal? @db.Decimal(10, 5)
  gradinggradeover         Decimal? @db.Decimal(10, 5)
  gradinggradeoverby       Int?
  feedbackauthor           String?  @db.LongText
  feedbackauthorformat     Int?     @default(0) @db.SmallInt
  feedbackauthorattachment Int?     @default(0) @db.SmallInt
  feedbackreviewer         String?  @db.LongText
  feedbackreviewerformat   Int?     @default(0) @db.SmallInt

  @@index([gradinggradeoverby], map: "mdl_workasse_gra_ix")
  @@index([reviewerid], map: "mdl_workasse_rev_ix")
  @@index([submissionid], map: "mdl_workasse_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshop_grades {
  id                Int      @id @default(autoincrement())
  assessmentid      Int
  strategy          String   @default("") @db.VarChar(30)
  dimensionid       Int
  grade             Decimal? @db.Decimal(10, 5)
  peercomment       String?  @db.LongText
  peercommentformat Int?     @default(0) @db.SmallInt

  @@unique([assessmentid, strategy, dimensionid], map: "mdl_workgrad_assstrdim_uix")
  @@index([assessmentid], map: "mdl_workgrad_ass_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshop_submissions {
  id                   Int      @id @default(autoincrement())
  workshopid           Int
  example              Int?     @default(0) @db.TinyInt
  authorid             Int
  timecreated          Int
  timemodified         Int
  title                String   @default("") @db.VarChar(255)
  content              String?  @db.LongText
  contentformat        Int      @default(0) @db.SmallInt
  contenttrust         Int      @default(0) @db.SmallInt
  attachment           Int?     @default(0) @db.TinyInt
  grade                Decimal? @db.Decimal(10, 5)
  gradeover            Decimal? @db.Decimal(10, 5)
  gradeoverby          Int?
  feedbackauthor       String?  @db.LongText
  feedbackauthorformat Int?     @default(0) @db.SmallInt
  timegraded           Int?
  published            Int?     @default(0) @db.TinyInt
  late                 Int      @default(0) @db.TinyInt

  @@index([authorid], map: "mdl_worksubm_aut_ix")
  @@index([gradeoverby], map: "mdl_worksubm_gra_ix")
  @@index([workshopid], map: "mdl_worksubm_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshopallocation_scheduled {
  id            Int     @id @default(autoincrement())
  workshopid    Int     @unique(map: "mdl_worksche_wor_uix")
  enabled       Int     @default(0) @db.TinyInt
  submissionend Int
  timeallocated Int?
  settings      String? @db.LongText
  resultstatus  Int?
  resultmessage String? @db.VarChar(1333)
  resultlog     String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshopeval_best_settings {
  id         Int  @id @default(autoincrement())
  workshopid Int  @unique(map: "mdl_workbestsett_wor_uix")
  comparison Int? @default(5) @db.SmallInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshopform_accumulative {
  id                Int     @id @default(autoincrement())
  workshopid        Int
  sort              Int?    @default(0)
  description       String? @db.LongText
  descriptionformat Int?    @default(0) @db.SmallInt
  grade             Int
  weight            Int?    @default(1) @db.MediumInt

  @@index([workshopid], map: "mdl_workaccu_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshopform_comments {
  id                Int     @id @default(autoincrement())
  workshopid        Int
  sort              Int?    @default(0)
  description       String? @db.LongText
  descriptionformat Int?    @default(0) @db.SmallInt

  @@index([workshopid], map: "mdl_workcomm_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshopform_numerrors {
  id                Int     @id @default(autoincrement())
  workshopid        Int
  sort              Int?    @default(0)
  description       String? @db.LongText
  descriptionformat Int?    @default(0) @db.SmallInt
  descriptiontrust  Int?
  grade0            String? @db.VarChar(50)
  grade1            String? @db.VarChar(50)
  weight            Int?    @default(1) @db.MediumInt

  @@index([workshopid], map: "mdl_worknume_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshopform_numerrors_map {
  id         Int     @id @default(autoincrement())
  workshopid Int
  nonegative Int
  grade      Decimal @db.Decimal(10, 5)

  @@unique([workshopid, nonegative], map: "mdl_worknumemap_wornon_uix")
  @@index([workshopid], map: "mdl_worknumemap_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshopform_rubric {
  id                Int     @id @default(autoincrement())
  workshopid        Int
  sort              Int?    @default(0)
  description       String? @db.LongText
  descriptionformat Int?    @default(0) @db.SmallInt

  @@index([workshopid], map: "mdl_workrubr_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshopform_rubric_config {
  id         Int     @id @default(autoincrement())
  workshopid Int     @unique(map: "mdl_workrubrconf_wor_uix")
  layout     String? @default("list") @db.VarChar(30)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_workshopform_rubric_levels {
  id               Int     @id @default(autoincrement())
  dimensionid      Int
  grade            Decimal @db.Decimal(10, 5)
  definition       String? @db.LongText
  definitionformat Int?    @default(0) @db.SmallInt

  @@index([dimensionid], map: "mdl_workrubrleve_dim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mdl_xapi_states {
  id           Int     @id @default(autoincrement())
  component    String  @default("") @db.VarChar(255)
  userid       Int?
  itemid       Int
  stateid      String  @default("") @db.VarChar(255)
  statedata    String? @db.LongText
  registration String? @db.VarChar(255)
  timecreated  Int
  timemodified Int?

  @@index([component, itemid], map: "mdl_xapistat_comite_ix")
  @@index([timemodified], map: "mdl_xapistat_tim_ix")
  @@index([userid], map: "mdl_xapistat_use_ix")
}
